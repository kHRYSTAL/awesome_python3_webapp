2016-05-31 16:45:47,421 - orm.py:117 - server_info - found model: User (table: users)
2016-05-31 16:45:47,422 - orm.py:124 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,422 - orm.py:124 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,422 - orm.py:124 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,422 - orm.py:124 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 16:45:47,422 - orm.py:124 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 16:45:47,422 - orm.py:124 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 16:45:47,422 - orm.py:124 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,422 - orm.py:117 - server_info - found model: Blog (table: blogs)
2016-05-31 16:45:47,422 - orm.py:124 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 16:45:47,422 - orm.py:124 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,422 - orm.py:124 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 16:45:47,423 - orm.py:117 - server_info - found model: Comment (table: comments)
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 16:45:47,423 - orm.py:124 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 16:45:47,424 - orm.py:17 - server_info - create database connection pool...
2016-05-31 16:45:47,429 - orm.py:172 - server_info - useing default value for admin: False
2016-05-31 16:45:47,430 - orm.py:172 - server_info - useing default value for created_at: 1464684347.429981
2016-05-31 16:45:47,430 - orm.py:172 - server_info - useing default value for id: 0014646843474309782d4d333004dc1b53af5483904cc4a000
2016-05-31 16:45:47,430 - orm.py:13 - server_info - SQL: insert into `users` (`email`,`passwd`,`admin`,`image`,`created_at`,`name`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-05-31 16:45:47,431 - orm.py:61 - server_info - commit success!
2016-05-31 19:53:42,197 - app.py:40 - server_info - init jinja2....
2016-05-31 19:53:42,197 - app.py:55 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 19:53:42,228 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 19:53:42,228 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,228 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 19:53:42,228 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,228 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,228 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,228 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 19:53:42,228 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 19:53:42,229 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 19:53:42,229 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 19:53:42,229 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 19:53:42,229 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,229 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,229 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 19:53:42,229 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,229 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 19:53:42,230 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,230 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 19:53:42,230 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 19:53:42,230 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 19:53:42,230 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,230 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,230 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 19:53:42,230 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,231 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 19:53:42,231 - coroweb.py:239 - server_info - set coroutine: index
2016-05-31 19:53:42,231 - coroweb.py:242 - server_info - add route GET / => index(request)
2016-05-31 19:53:42,232 - coroweb.py:229 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 19:53:55,865 - app.py:71 - server_info - Request: GET /
2016-05-31 19:53:55,865 - app.py:92 - server_info - Response handler...
2016-05-31 19:53:55,865 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 19:53:55,958 - app.py:71 - server_info - Request: GET /favicon.ico
2016-05-31 19:53:55,958 - app.py:92 - server_info - Response handler...
2016-05-31 19:55:44,351 - app.py:71 - server_info - Request: GET /
2016-05-31 19:55:44,351 - app.py:92 - server_info - Response handler...
2016-05-31 19:55:44,351 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 19:56:22,398 - app.py:71 - server_info - Request: GET /
2016-05-31 19:56:22,398 - app.py:92 - server_info - Response handler...
2016-05-31 19:56:22,398 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 19:58:46,200 - app.py:71 - server_info - Request: GET /
2016-05-31 19:58:46,200 - app.py:92 - server_info - Response handler...
2016-05-31 19:58:46,200 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 19:58:53,920 - app.py:40 - server_info - init jinja2....
2016-05-31 19:58:53,920 - app.py:55 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 19:58:53,941 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 19:58:53,941 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 19:58:53,941 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,941 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 19:58:53,941 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 19:58:53,941 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,941 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,941 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,942 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 19:58:53,942 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,942 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 19:58:53,942 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 19:58:53,942 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,942 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 19:58:53,942 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,942 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 19:58:53,942 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,943 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 19:58:53,943 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,943 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 19:58:53,943 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 19:58:53,943 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,943 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,943 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 19:58:53,943 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 19:58:53,944 - coroweb.py:229 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 19:59:28,136 - app.py:40 - server_info - init jinja2....
2016-05-31 19:59:28,136 - app.py:55 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 19:59:28,156 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 19:59:28,156 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,156 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,156 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 19:59:28,156 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 19:59:28,156 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,156 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 19:59:28,156 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,156 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 19:59:28,157 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,157 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,157 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 19:59:28,157 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 19:59:28,157 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,157 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 19:59:28,157 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 19:59:28,157 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,157 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 19:59:28,157 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,157 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 19:59:28,157 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,158 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 19:59:28,158 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,158 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 19:59:28,158 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 19:59:28,159 - coroweb.py:229 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 19:59:32,907 - app.py:71 - server_info - Request: GET /
2016-05-31 19:59:32,907 - app.py:92 - server_info - Response handler...
2016-05-31 19:59:32,907 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 19:59:32,907 - orm.py:23 - server_info - SQL: select `id`, `name`,`created_at`,`admin`,`email`,`image`,`passwd` from `users`, ARGS: []
2016-05-31 20:04:01,285 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 20:04:01,285 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:04:01,285 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:04:01,285 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:04:01,285 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:04:01,285 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:04:01,285 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:04:01,285 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:04:01,285 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 20:04:01,285 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:04:01,285 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:04:01,286 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:04:01,286 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,190 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 20:05:14,190 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:05:14,190 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,190 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,190 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:05:14,191 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:05:14,191 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,191 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,192 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:05:14,192 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:05:14,192 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:05:14,192 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:05:14,192 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,599 - app.py:40 - server_info - init jinja2....
2016-05-31 20:15:01,600 - app.py:55 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 20:15:01,666 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 20:15:01,666 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,667 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,667 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,668 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:15:01,668 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:15:01,668 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:15:01,669 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,669 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 20:15:01,670 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,670 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,671 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,671 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:15:01,671 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:15:01,672 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,672 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:15:01,673 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:15:01,673 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 20:15:01,674 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,674 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:15:01,674 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,675 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:15:01,675 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,675 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:15:01,676 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:15:01,678 - coroweb.py:229 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 20:15:22,801 - app.py:40 - server_info - init jinja2....
2016-05-31 20:15:22,801 - app.py:55 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 20:15:22,820 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 20:15:22,821 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:15:22,821 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:15:22,821 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,821 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,821 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,821 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,821 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:15:22,821 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 20:15:22,822 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:15:22,822 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:15:22,822 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:15:22,822 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,822 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,822 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,822 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,822 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:15:22,822 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 20:15:22,823 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:15:22,823 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,823 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,823 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,823 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:15:22,823 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:15:22,823 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:15:22,824 - coroweb.py:229 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 20:15:43,524 - app.py:40 - server_info - init jinja2....
2016-05-31 20:15:43,526 - app.py:55 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 20:15:43,594 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 20:15:43,595 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,595 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:15:43,596 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,596 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:15:43,597 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:15:43,597 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,597 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,598 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 20:15:43,598 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,599 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:15:43,599 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:15:43,600 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:15:43,601 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:15:43,601 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,602 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,602 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,603 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 20:15:43,603 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,604 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,604 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:15:43,604 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:15:43,605 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:15:43,605 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,606 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:15:43,608 - coroweb.py:229 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 20:16:08,459 - app.py:40 - server_info - init jinja2....
2016-05-31 20:16:08,459 - app.py:55 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 20:16:08,474 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 20:16:08,474 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:16:08,474 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,474 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,474 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:16:08,474 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,474 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,475 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:16:08,475 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 20:16:08,475 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,475 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:16:08,475 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,475 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,475 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,475 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:16:08,475 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:16:08,475 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:16:08,475 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 20:16:08,476 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:16:08,476 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,476 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:16:08,476 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,476 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,476 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:16:08,476 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:16:08,477 - coroweb.py:229 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 20:16:32,623 - app.py:71 - server_info - Request: GET /
2016-05-31 20:16:32,623 - app.py:92 - server_info - Response handler...
2016-05-31 20:16:32,623 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:16:32,623 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`email`,`image`,`passwd`,`created_at` from `users`, ARGS: []
2016-05-31 20:16:33,193 - app.py:71 - server_info - Request: GET /
2016-05-31 20:16:33,194 - app.py:92 - server_info - Response handler...
2016-05-31 20:16:33,194 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:16:33,194 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`email`,`image`,`passwd`,`created_at` from `users`, ARGS: []
2016-05-31 20:17:57,174 - app.py:71 - server_info - Request: GET /
2016-05-31 20:17:57,174 - app.py:92 - server_info - Response handler...
2016-05-31 20:17:57,174 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:17:57,174 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`email`,`image`,`passwd`,`created_at` from `users`, ARGS: []
2016-05-31 20:24:59,355 - app.py:40 - server_info - init jinja2....
2016-05-31 20:24:59,356 - app.py:55 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 20:24:59,372 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 20:24:59,373 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:24:59,373 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,373 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,373 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,373 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:24:59,373 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:24:59,373 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,373 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 20:24:59,373 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,373 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,373 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:24:59,373 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:24:59,374 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,374 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,374 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:24:59,374 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:24:59,374 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 20:24:59,374 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,374 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:24:59,374 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,374 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,374 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:24:59,374 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:24:59,374 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:24:59,375 - coroweb.py:229 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 20:25:07,520 - app.py:71 - server_info - Request: GET /
2016-05-31 20:25:07,520 - app.py:92 - server_info - Response handler...
2016-05-31 20:25:07,520 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:25:07,521 - orm.py:23 - server_info - SQL: select `id`, `image`,`name`,`email`,`created_at`,`admin`,`passwd` from `users`, ARGS: []
2016-05-31 20:25:07,794 - app.py:71 - server_info - Request: GET /
2016-05-31 20:25:07,795 - app.py:92 - server_info - Response handler...
2016-05-31 20:25:07,795 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:25:07,795 - orm.py:23 - server_info - SQL: select `id`, `image`,`name`,`email`,`created_at`,`admin`,`passwd` from `users`, ARGS: []
2016-05-31 20:25:19,524 - app.py:71 - server_info - Request: GET /
2016-05-31 20:25:19,524 - app.py:92 - server_info - Response handler...
2016-05-31 20:25:19,524 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:25:19,524 - orm.py:23 - server_info - SQL: select `id`, `image`,`name`,`email`,`created_at`,`admin`,`passwd` from `users`, ARGS: []
2016-05-31 20:29:26,111 - app.py:40 - server_info - init jinja2....
2016-05-31 20:29:26,111 - app.py:55 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 20:29:26,131 - orm.py:139 - server_info - found model: User (table: users)
2016-05-31 20:29:26,132 - orm.py:146 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,132 - orm.py:146 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:29:26,132 - orm.py:146 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,132 - orm.py:146 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,132 - orm.py:146 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:29:26,132 - orm.py:146 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,132 - orm.py:146 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:29:26,132 - orm.py:139 - server_info - found model: Blog (table: blogs)
2016-05-31 20:29:26,132 - orm.py:146 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,132 - orm.py:146 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:29:26,132 - orm.py:146 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:29:26,133 - orm.py:146 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,133 - orm.py:146 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,133 - orm.py:146 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:29:26,133 - orm.py:146 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,133 - orm.py:146 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:29:26,133 - orm.py:139 - server_info - found model: Comment (table: comments)
2016-05-31 20:29:26,133 - orm.py:146 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:29:26,133 - orm.py:146 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,133 - orm.py:146 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,133 - orm.py:146 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:29:26,133 - orm.py:146 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,133 - orm.py:146 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:29:26,134 - orm.py:146 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:29:26,134 - coroweb.py:229 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 20:29:36,094 - app.py:71 - server_info - Request: GET /
2016-05-31 20:29:36,095 - app.py:92 - server_info - Response handler...
2016-05-31 20:29:36,095 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:29:36,095 - orm.py:23 - server_info - SQL: select `id`, `name`,`admin`,`passwd`,`email`,`created_at`,`image` from `users`, ARGS: []
2016-05-31 20:29:36,330 - app.py:71 - server_info - Request: GET /
2016-05-31 20:29:36,330 - app.py:92 - server_info - Response handler...
2016-05-31 20:29:36,330 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:29:36,330 - orm.py:23 - server_info - SQL: select `id`, `name`,`admin`,`passwd`,`email`,`created_at`,`image` from `users`, ARGS: []
2016-05-31 20:30:16,627 - app.py:40 - server_info - init jinja2....
2016-05-31 20:30:16,627 - app.py:55 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 20:30:16,649 - orm.py:138 - server_info - found model: User (table: users)
2016-05-31 20:30:16,649 - orm.py:145 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:30:16,649 - orm.py:145 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:30:16,649 - orm.py:145 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,649 - orm.py:145 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,649 - orm.py:145 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:30:16,649 - orm.py:145 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,649 - orm.py:145 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,649 - orm.py:138 - server_info - found model: Blog (table: blogs)
2016-05-31 20:30:16,650 - orm.py:145 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:30:16,650 - orm.py:145 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:30:16,650 - orm.py:145 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,650 - orm.py:145 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,650 - orm.py:145 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,650 - orm.py:145 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:30:16,650 - orm.py:145 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:30:16,650 - orm.py:145 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,650 - orm.py:138 - server_info - found model: Comment (table: comments)
2016-05-31 20:30:16,650 - orm.py:145 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:30:16,650 - orm.py:145 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,650 - orm.py:145 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:30:16,651 - orm.py:145 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,651 - orm.py:145 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:30:16,651 - orm.py:145 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,651 - orm.py:145 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:30:16,651 - coroweb.py:229 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 20:30:19,031 - app.py:71 - server_info - Request: GET /
2016-05-31 20:30:19,031 - app.py:92 - server_info - Response handler...
2016-05-31 20:30:19,032 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:30:19,032 - orm.py:22 - server_info - SQL: select `id`, `admin`,`created_at`,`name`,`image`,`passwd`,`email` from `users`, ARGS: []
2016-05-31 20:35:07,105 - app.py:40 - server_info - init jinja2....
2016-05-31 20:35:07,105 - app.py:55 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 20:35:07,123 - orm.py:138 - server_info - found model: User (table: users)
2016-05-31 20:35:07,123 - orm.py:145 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:35:07,123 - orm.py:145 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,123 - orm.py:145 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,123 - orm.py:145 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,123 - orm.py:145 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:35:07,123 - orm.py:145 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:35:07,123 - orm.py:145 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,123 - orm.py:138 - server_info - found model: Blog (table: blogs)
2016-05-31 20:35:07,123 - orm.py:145 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,124 - orm.py:145 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:35:07,124 - orm.py:145 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:35:07,124 - orm.py:145 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,124 - orm.py:145 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:35:07,124 - orm.py:145 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:35:07,124 - orm.py:145 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,124 - orm.py:145 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,124 - orm.py:138 - server_info - found model: Comment (table: comments)
2016-05-31 20:35:07,124 - orm.py:145 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,124 - orm.py:145 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,124 - orm.py:145 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:35:07,124 - orm.py:145 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,125 - orm.py:145 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:35:07,125 - orm.py:145 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:35:07,125 - orm.py:145 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:35:07,125 - coroweb.py:229 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 20:35:20,580 - app.py:71 - server_info - Request: GET /
2016-05-31 20:35:20,580 - app.py:92 - server_info - Response handler...
2016-05-31 20:35:20,580 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:35:20,580 - orm.py:22 - server_info - SQL: select `id`, `created_at`,`email`,`name`,`admin`,`image`,`passwd` from `users`, ARGS: []
2016-05-31 20:35:20,820 - app.py:71 - server_info - Request: GET /
2016-05-31 20:35:20,820 - app.py:92 - server_info - Response handler...
2016-05-31 20:35:20,820 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:35:20,820 - orm.py:22 - server_info - SQL: select `id`, `created_at`,`email`,`name`,`admin`,`image`,`passwd` from `users`, ARGS: []
2016-05-31 20:35:42,874 - app.py:71 - server_info - Request: GET /
2016-05-31 20:35:42,874 - app.py:92 - server_info - Response handler...
2016-05-31 20:35:42,874 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:35:42,874 - orm.py:22 - server_info - SQL: select `id`, `created_at`,`email`,`name`,`admin`,`image`,`passwd` from `users`, ARGS: []
2016-05-31 20:37:11,063 - orm.py:138 - server_info - found model: User (table: users)
2016-05-31 20:37:11,063 - orm.py:145 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:37:11,064 - orm.py:138 - server_info - found model: Blog (table: blogs)
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:37:11,064 - orm.py:145 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:37:11,065 - orm.py:138 - server_info - found model: Comment (table: comments)
2016-05-31 20:37:11,065 - orm.py:145 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,065 - orm.py:145 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,065 - orm.py:145 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:37:11,065 - orm.py:145 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:37:11,065 - orm.py:145 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,065 - orm.py:145 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:37:11,065 - orm.py:145 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:37:11,066 - orm.py:27 - server_info - create database connection pool...
2016-05-31 20:37:11,071 - orm.py:195 - server_info - using default value for admin: False
2016-05-31 20:37:11,071 - orm.py:195 - server_info - using default value for created_at: 1464698231.071427
2016-05-31 20:37:11,071 - orm.py:195 - server_info - using default value for id: 00146469823107184645f05ce95426c9d015bd8bbb99d8d000
2016-05-31 20:37:11,071 - orm.py:22 - server_info - SQL: insert into `users` (`email`,`admin`,`name`,`passwd`,`image`,`created_at`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-05-31 20:37:11,074 - orm.py:73 - server_info - commit success!
2016-05-31 20:41:01,953 - orm.py:27 - server_info - create database connection pool...
2016-05-31 20:45:09,606 - orm.py:27 - server_info - create database connection pool...
2016-05-31 20:51:14,535 - orm.py:27 - server_info - create database connection pool...
2016-05-31 20:57:35,749 - orm.py:27 - server_info - create database connection pool...
2016-05-31 20:57:35,754 - app.py:41 - server_info - init jinja2....
2016-05-31 20:57:35,754 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 20:57:35,755 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 20:57:35,755 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,755 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,755 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:57:35,755 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:57:35,755 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:57:35,755 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,755 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,755 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 20:57:35,755 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:57:35,755 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,756 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:57:35,756 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,756 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,756 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:57:35,756 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:57:35,756 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,756 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 20:57:35,756 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,756 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,756 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,756 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:57:35,756 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:57:35,757 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:57:35,757 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:57:35,757 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 20:58:17,839 - orm.py:27 - server_info - create database connection pool...
2016-05-31 20:58:17,843 - app.py:41 - server_info - init jinja2....
2016-05-31 20:58:17,844 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 20:58:17,844 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 20:58:17,844 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,844 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,844 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,845 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:58:17,845 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 20:58:17,845 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 20:58:17,845 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,845 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 20:58:17,845 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,845 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:58:17,845 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,845 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,845 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 20:58:17,845 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,845 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:58:17,846 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 20:58:17,846 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 20:58:17,846 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,846 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 20:58:17,846 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,846 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 20:58:17,846 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 20:58:17,846 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,846 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 20:58:17,847 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 20:58:28,965 - app.py:72 - server_info - Request: GET /
2016-05-31 20:58:28,966 - app.py:93 - server_info - Response handler...
2016-05-31 20:58:28,966 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:58:28,967 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`created_at`,`admin`,`image`,`email` from `users`, ARGS: []
2016-05-31 20:58:28,968 - orm.py:57 - server_info - rows returned: 2
2016-05-31 20:58:28,968 - app.py:96 - server_info - response result = {'__template__': 'test.html', 'users': [{'passwd': 'yyg1990918', 'name': 'kHRYSTAL', 'id': '0014646843474309782d4d333004dc1b53af5483904cc4a000', 'email': 'khrystal0918@qq.com', 'admin': 0, 'created_at': 1464684347.42998, 'image': 'about:blank'}, {'passwd': 'yyg1990918', 'name': 'Matt', 'id': '00146469823107184645f05ce95426c9d015bd8bbb99d8d000', 'email': '723526676@qq.com', 'admin': 0, 'created_at': 1464698231.07143, 'image': 'about:blank'}]}
2016-05-31 20:58:46,948 - app.py:72 - server_info - Request: GET /
2016-05-31 20:58:46,948 - app.py:93 - server_info - Response handler...
2016-05-31 20:58:46,948 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 20:58:46,948 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`created_at`,`admin`,`image`,`email` from `users`, ARGS: []
2016-05-31 20:58:46,949 - orm.py:57 - server_info - rows returned: 2
2016-05-31 20:58:46,950 - app.py:96 - server_info - response result = {'__template__': 'test.html', 'users': [{'passwd': 'yyg1990918', 'name': 'kHRYSTAL', 'id': '0014646843474309782d4d333004dc1b53af5483904cc4a000', 'email': 'khrystal0918@qq.com', 'admin': 0, 'created_at': 1464684347.42998, 'image': 'about:blank'}, {'passwd': 'yyg1990918', 'name': 'Matt', 'id': '00146469823107184645f05ce95426c9d015bd8bbb99d8d000', 'email': '723526676@qq.com', 'admin': 0, 'created_at': 1464698231.07143, 'image': 'about:blank'}]}
2016-05-31 21:01:47,113 - orm.py:27 - server_info - create database connection pool...
2016-05-31 21:01:47,118 - app.py:41 - server_info - init jinja2....
2016-05-31 21:01:47,118 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-05-31 21:01:47,119 - orm.py:137 - server_info - found model: User (table: users)
2016-05-31 21:01:47,119 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,119 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,119 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,119 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-05-31 21:01:47,119 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-05-31 21:01:47,119 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,119 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 21:01:47,119 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-05-31 21:01:47,119 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,119 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 21:01:47,120 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,120 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,120 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 21:01:47,120 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,120 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-05-31 21:01:47,120 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-05-31 21:01:47,120 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-05-31 21:01:47,120 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-05-31 21:01:47,120 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-05-31 21:01:47,120 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,120 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,121 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,121 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-05-31 21:01:47,121 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-05-31 21:01:47,121 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-05-31 21:01:53,667 - app.py:72 - server_info - Request: GET /
2016-05-31 21:01:53,667 - app.py:93 - server_info - Response handler...
2016-05-31 21:01:53,667 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 21:01:53,667 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`email`,`admin`,`image`,`created_at` from `users`, ARGS: []
2016-05-31 21:01:53,668 - orm.py:57 - server_info - rows returned: 2
2016-05-31 21:01:53,669 - app.py:96 - server_info - response result = {'__template__': 'test.html', 'users': [{'passwd': 'yyg1990918', 'admin': 0, 'email': 'khrystal0918@qq.com', 'image': 'about:blank', 'name': 'kHRYSTAL', 'id': '0014646843474309782d4d333004dc1b53af5483904cc4a000', 'created_at': 1464684347.42998}, {'passwd': 'yyg1990918', 'admin': 0, 'email': '723526676@qq.com', 'image': 'about:blank', 'name': 'Matt', 'id': '00146469823107184645f05ce95426c9d015bd8bbb99d8d000', 'created_at': 1464698231.07143}]}
2016-05-31 21:01:54,036 - app.py:72 - server_info - Request: GET /
2016-05-31 21:01:54,036 - app.py:93 - server_info - Response handler...
2016-05-31 21:01:54,037 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-05-31 21:01:54,037 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`email`,`admin`,`image`,`created_at` from `users`, ARGS: []
2016-05-31 21:01:54,038 - orm.py:57 - server_info - rows returned: 2
2016-05-31 21:01:54,038 - app.py:96 - server_info - response result = {'__template__': 'test.html', 'users': [{'passwd': 'yyg1990918', 'admin': 0, 'email': 'khrystal0918@qq.com', 'image': 'about:blank', 'name': 'kHRYSTAL', 'id': '0014646843474309782d4d333004dc1b53af5483904cc4a000', 'created_at': 1464684347.42998}, {'passwd': 'yyg1990918', 'admin': 0, 'email': '723526676@qq.com', 'image': 'about:blank', 'name': 'Matt', 'id': '00146469823107184645f05ce95426c9d015bd8bbb99d8d000', 'created_at': 1464698231.07143}]}
2016-06-01 00:39:20,182 - orm.py:27 - server_info - create database connection pool...
2016-06-01 00:39:20,188 - app.py:41 - server_info - init jinja2....
2016-06-01 00:39:20,188 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 00:39:20,189 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 00:39:20,190 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,190 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,190 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,190 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 00:39:20,190 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 00:39:20,190 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,190 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 00:39:20,190 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 00:39:20,190 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 00:39:20,190 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,191 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,191 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 00:39:20,191 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,191 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,191 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 00:39:20,191 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 00:39:20,191 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 00:39:20,191 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 00:39:20,191 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 00:39:20,191 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,191 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,192 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,192 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 00:39:20,192 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 00:39:20,192 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 00:40:04,606 - orm.py:27 - server_info - create database connection pool...
2016-06-01 00:40:04,611 - app.py:41 - server_info - init jinja2....
2016-06-01 00:40:04,611 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 00:40:04,611 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 00:40:04,612 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,612 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,612 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,612 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 00:40:04,612 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 00:40:04,612 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,612 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 00:40:04,612 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 00:40:04,612 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 00:40:04,612 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 00:40:04,612 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,613 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 00:40:04,613 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,613 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,613 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,613 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 00:40:04,613 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 00:40:04,613 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 00:40:04,613 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,613 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,613 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 00:40:04,613 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,613 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 00:40:04,614 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 00:40:04,614 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 00:40:11,088 - app.py:72 - server_info - Request: GET /
2016-06-01 00:40:11,088 - app.py:93 - server_info - Response handler...
2016-06-01 00:40:11,089 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 00:40:11,089 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`created_at`,`image`,`name`,`admin` from `users`, ARGS: []
2016-06-01 00:40:11,090 - orm.py:57 - server_info - rows returned: 2
2016-06-01 00:40:11,090 - app.py:96 - server_info - response result = {'users': [{'email': 'khrystal0918@qq.com', 'passwd': 'yyg1990918', 'id': '0014646843474309782d4d333004dc1b53af5483904cc4a000', 'created_at': 1464684347.42998, 'admin': 0, 'name': 'kHRYSTAL', 'image': 'about:blank'}, {'email': '723526676@qq.com', 'passwd': 'yyg1990918', 'id': '00146469823107184645f05ce95426c9d015bd8bbb99d8d000', 'created_at': 1464698231.07143, 'admin': 0, 'name': 'Matt', 'image': 'about:blank'}], '__template__': 'test.html'}
2016-06-01 01:24:57,672 - orm.py:27 - server_info - create database connection pool...
2016-06-01 01:24:57,677 - app.py:41 - server_info - init jinja2....
2016-06-01 01:24:57,677 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 01:24:57,679 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 01:24:57,679 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 01:24:57,679 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 01:24:57,680 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 01:24:57,680 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,680 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,680 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,680 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,680 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 01:24:57,680 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,680 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 01:24:57,680 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,680 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 01:24:57,680 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 01:24:57,681 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 01:24:57,681 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,681 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,681 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 01:24:57,681 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,681 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,681 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 01:24:57,681 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 01:24:57,681 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,681 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 01:24:57,681 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 01:24:57,682 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 01:25:20,417 - orm.py:27 - server_info - create database connection pool...
2016-06-01 01:25:20,423 - app.py:41 - server_info - init jinja2....
2016-06-01 01:25:20,423 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 01:25:20,424 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 01:25:20,424 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,424 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,424 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 01:25:20,424 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,424 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,424 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 01:25:20,424 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 01:25:20,424 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 01:25:20,425 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,425 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,425 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,425 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 01:25:20,425 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 01:25:20,425 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 01:25:20,425 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 01:25:20,425 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,425 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 01:25:20,425 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,425 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,426 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,426 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 01:25:20,426 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 01:25:20,426 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 01:25:20,426 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 01:25:20,427 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 01:25:28,514 - app.py:72 - server_info - Request: GET /
2016-06-01 01:25:28,514 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:28,514 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:25:28,514 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715408.5148, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464711928.514807, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708328.514809, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:25:28,582 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 01:25:28,583 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:28,583 - app.py:96 - server_info - response result = <StreamResponse OK GET /static/css/uikit.min.css >
2016-06-01 01:25:28,584 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 01:25:28,584 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:28,585 - app.py:96 - server_info - response result = <StreamResponse OK GET /static/css/uikit.gradient.min.css >
2016-06-01 01:25:28,587 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 01:25:28,587 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:28,588 - app.py:96 - server_info - response result = <StreamResponse OK GET /static/js/uikit.min.js >
2016-06-01 01:25:28,589 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 01:25:28,589 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:28,590 - app.py:96 - server_info - response result = <StreamResponse OK GET /static/css/awesome.css >
2016-06-01 01:25:28,590 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 01:25:28,590 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:28,591 - app.py:96 - server_info - response result = <StreamResponse OK GET /static/js/jquery.min.js >
2016-06-01 01:25:28,592 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:25:28,592 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:28,594 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 01:25:28,594 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:28,595 - app.py:96 - server_info - response result = <StreamResponse OK GET /static/js/awesome.js >
2016-06-01 01:25:28,676 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 01:25:28,677 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:28,677 - app.py:96 - server_info - response result = <StreamResponse OK GET /static/fonts/fontawesome-webfont.woff2 >
2016-06-01 01:25:32,878 - app.py:72 - server_info - Request: GET /manage/blogs
2016-06-01 01:25:32,878 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:33,081 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 01:25:33,081 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:35,435 - app.py:72 - server_info - Request: GET /
2016-06-01 01:25:35,436 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:35,436 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:25:35,436 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715415.436259, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464711935.436265, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708335.436268, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:25:35,455 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:25:35,456 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:37,170 - app.py:72 - server_info - Request: GET /
2016-06-01 01:25:37,171 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:37,171 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:25:37,171 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715417.171222, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464711937.171229, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708337.171231, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:25:37,191 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:25:37,191 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:37,871 - app.py:72 - server_info - Request: GET /
2016-06-01 01:25:37,871 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:37,871 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:25:37,871 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715417.871465, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464711937.871472, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708337.871475, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:25:37,893 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:25:37,894 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:38,441 - app.py:72 - server_info - Request: GET /
2016-06-01 01:25:38,442 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:38,442 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:25:38,442 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715418.442362, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464711938.442369, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708338.442371, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:25:38,462 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:25:38,462 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:39,003 - app.py:72 - server_info - Request: GET /
2016-06-01 01:25:39,003 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:39,003 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:25:39,003 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715419.003541, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464711939.003549, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708339.003551, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:25:39,022 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:25:39,023 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:39,592 - app.py:72 - server_info - Request: GET /
2016-06-01 01:25:39,592 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:39,592 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:25:39,593 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715419.593043, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464711939.59305, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708339.593052, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:25:39,612 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:25:39,612 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:40,194 - app.py:72 - server_info - Request: GET /
2016-06-01 01:25:40,195 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:40,195 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:25:40,195 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715420.195361, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464711940.195373, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708340.195376, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:25:40,217 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:25:40,217 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:49,232 - app.py:72 - server_info - Request: GET /blog/2
2016-06-01 01:25:49,232 - app.py:93 - server_info - Response handler...
2016-06-01 01:25:52,242 - app.py:72 - server_info - Request: GET /signin
2016-06-01 01:25:52,242 - app.py:93 - server_info - Response handler...
2016-06-01 01:26:59,729 - app.py:72 - server_info - Request: GET /
2016-06-01 01:26:59,729 - app.py:93 - server_info - Response handler...
2016-06-01 01:26:59,729 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:26:59,729 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715499.729756, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464712019.729762, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708419.729765, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:26:59,779 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 01:26:59,779 - app.py:93 - server_info - Response handler...
2016-06-01 01:26:59,780 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 01:26:59,780 - app.py:93 - server_info - Response handler...
2016-06-01 01:26:59,781 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 01:26:59,781 - app.py:93 - server_info - Response handler...
2016-06-01 01:26:59,782 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 01:26:59,782 - app.py:93 - server_info - Response handler...
2016-06-01 01:26:59,783 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 01:26:59,783 - app.py:93 - server_info - Response handler...
2016-06-01 01:26:59,784 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:26:59,785 - app.py:93 - server_info - Response handler...
2016-06-01 01:26:59,785 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 01:26:59,785 - app.py:93 - server_info - Response handler...
2016-06-01 01:26:59,838 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 01:26:59,838 - app.py:93 - server_info - Response handler...
2016-06-01 01:30:24,616 - app.py:72 - server_info - Request: GET /
2016-06-01 01:30:24,616 - app.py:93 - server_info - Response handler...
2016-06-01 01:30:24,617 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:30:24,617 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715704.617217, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464712224.617226, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708624.61723, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:30:49,769 - app.py:72 - server_info - Request: GET /
2016-06-01 01:30:49,769 - app.py:93 - server_info - Response handler...
2016-06-01 01:30:49,769 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:30:49,770 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715729.770047, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464712249.770053, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708649.770055, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:30:53,100 - app.py:72 - server_info - Request: GET /
2016-06-01 01:30:53,100 - app.py:93 - server_info - Response handler...
2016-06-01 01:30:53,100 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:30:53,100 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464715733.100487, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464712253.100493, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464708653.100495, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 01:31:22,102 - orm.py:27 - server_info - create database connection pool...
2016-06-01 01:31:22,106 - app.py:41 - server_info - init jinja2....
2016-06-01 01:31:22,106 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 01:31:22,107 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 01:31:22,108 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,108 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,108 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,108 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 01:31:22,108 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 01:31:22,108 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 01:31:22,108 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,108 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 01:31:22,108 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 01:31:22,108 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 01:31:22,108 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 01:31:22,109 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,109 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,109 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,109 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,109 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 01:31:22,109 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 01:31:22,109 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,109 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 01:31:22,110 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,110 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,110 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 01:31:22,110 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 01:31:22,110 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 01:31:22,111 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 01:31:26,014 - app.py:72 - server_info - Request: GET /
2016-06-01 01:31:26,014 - app.py:93 - server_info - Response handler...
2016-06-01 01:31:26,014 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:31:26,014 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '1', 'created_at': 1464715766.014722}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '2', 'created_at': 1464712286.014729}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '3', 'created_at': 1464708686.014732}]}
2016-06-01 01:31:26,360 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 01:31:26,360 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:15,774 - app.py:72 - server_info - Request: GET /
2016-06-01 01:32:15,774 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:15,774 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:32:15,775 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '1', 'created_at': 1464715815.775079}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '2', 'created_at': 1464712335.775087}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '3', 'created_at': 1464708735.77509}]}
2016-06-01 01:32:15,822 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 01:32:15,822 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:15,825 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 01:32:15,825 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:15,826 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 01:32:15,827 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:15,828 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 01:32:15,828 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:15,829 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:32:15,829 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:15,831 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 01:32:15,831 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:15,832 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 01:32:15,832 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:15,890 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 01:32:15,891 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:23,552 - app.py:72 - server_info - Request: GET /
2016-06-01 01:32:23,552 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:23,552 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:32:23,552 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '1', 'created_at': 1464715823.552749}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '2', 'created_at': 1464712343.552759}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '3', 'created_at': 1464708743.552763}]}
2016-06-01 01:32:23,575 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:32:23,575 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:25,504 - app.py:72 - server_info - Request: GET /
2016-06-01 01:32:25,504 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:25,504 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:32:25,505 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '1', 'created_at': 1464715825.505104}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '2', 'created_at': 1464712345.505112}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '3', 'created_at': 1464708745.505114}]}
2016-06-01 01:32:25,574 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:32:25,574 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:26,669 - app.py:72 - server_info - Request: GET /
2016-06-01 01:32:26,669 - app.py:93 - server_info - Response handler...
2016-06-01 01:32:26,669 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:32:26,670 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '1', 'created_at': 1464715826.669992}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '2', 'created_at': 1464712346.669998}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '3', 'created_at': 1464708746.670001}]}
2016-06-01 01:32:26,689 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:32:26,689 - app.py:93 - server_info - Response handler...
2016-06-01 01:34:15,602 - app.py:72 - server_info - Request: GET /
2016-06-01 01:34:15,602 - app.py:93 - server_info - Response handler...
2016-06-01 01:34:15,602 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:34:15,602 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '1', 'created_at': 1464715935.602447}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '2', 'created_at': 1464712455.602454}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '3', 'created_at': 1464708855.602456}]}
2016-06-01 01:34:15,655 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 01:34:15,655 - app.py:93 - server_info - Response handler...
2016-06-01 01:34:15,656 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 01:34:15,656 - app.py:93 - server_info - Response handler...
2016-06-01 01:34:15,657 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 01:34:15,657 - app.py:93 - server_info - Response handler...
2016-06-01 01:34:15,658 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 01:34:15,658 - app.py:93 - server_info - Response handler...
2016-06-01 01:34:15,659 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:34:15,659 - app.py:93 - server_info - Response handler...
2016-06-01 01:34:15,661 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 01:34:15,661 - app.py:93 - server_info - Response handler...
2016-06-01 01:34:15,662 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 01:34:15,662 - app.py:93 - server_info - Response handler...
2016-06-01 01:34:15,723 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 01:34:15,723 - app.py:93 - server_info - Response handler...
2016-06-01 01:34:24,636 - app.py:72 - server_info - Request: GET /manage/
2016-06-01 01:34:24,636 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:37,264 - app.py:72 - server_info - Request: GET /
2016-06-01 01:38:37,264 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:37,264 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:38:37,265 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '1', 'created_at': 1464716197.264996}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '2', 'created_at': 1464712717.265003}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '3', 'created_at': 1464709117.265005}]}
2016-06-01 01:38:37,309 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 01:38:37,309 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:37,311 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 01:38:37,311 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:37,313 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 01:38:37,313 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:37,314 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 01:38:37,314 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:37,316 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 01:38:37,316 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:37,317 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:38:37,317 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:37,318 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 01:38:37,318 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:37,388 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 01:38:37,389 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:39,265 - app.py:72 - server_info - Request: GET /
2016-06-01 01:38:39,266 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:39,266 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:38:39,266 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '1', 'created_at': 1464716199.266287}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '2', 'created_at': 1464712719.266293}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '3', 'created_at': 1464709119.266296}]}
2016-06-01 01:38:39,294 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 01:38:39,294 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:39,296 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 01:38:39,296 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:39,296 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 01:38:39,297 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:39,297 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 01:38:39,298 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:39,298 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:38:39,298 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:39,301 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 01:38:39,301 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:39,302 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 01:38:39,302 - app.py:93 - server_info - Response handler...
2016-06-01 01:38:39,341 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 01:38:39,341 - app.py:93 - server_info - Response handler...
2016-06-01 01:50:54,776 - app.py:72 - server_info - Request: GET /
2016-06-01 01:50:54,777 - app.py:93 - server_info - Response handler...
2016-06-01 01:50:54,777 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 01:50:54,777 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '1', 'created_at': 1464716934.77736}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '2', 'created_at': 1464713454.777367}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'id': '3', 'created_at': 1464709854.777369}]}
2016-06-01 01:50:54,824 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 01:50:54,824 - app.py:93 - server_info - Response handler...
2016-06-01 01:50:54,825 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 01:50:54,826 - app.py:93 - server_info - Response handler...
2016-06-01 01:50:54,827 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 01:50:54,827 - app.py:93 - server_info - Response handler...
2016-06-01 01:50:54,828 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 01:50:54,828 - app.py:93 - server_info - Response handler...
2016-06-01 02:30:55,820 - orm.py:27 - server_info - create database connection pool...
2016-06-01 02:30:55,826 - app.py:41 - server_info - init jinja2....
2016-06-01 02:30:55,826 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 02:30:55,829 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 02:30:55,829 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 02:30:55,829 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 02:30:55,829 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 02:30:55,829 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,829 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,829 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,830 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,830 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 02:30:55,830 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 02:30:55,830 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 02:30:55,830 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,830 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 02:30:55,830 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,830 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,830 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 02:30:55,831 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,831 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 02:30:55,831 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,831 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 02:30:55,831 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,831 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 02:30:55,831 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,831 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:30:55,831 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 02:30:55,832 - coroweb.py:238 - server_info - set coroutine: api_register_user
2016-06-01 02:30:55,832 - coroweb.py:241 - server_info - add route POST /api/users => api_register_user(email,name,passwd)
2016-06-01 02:30:55,833 - coroweb.py:238 - server_info - set coroutine: authenticate
2016-06-01 02:30:55,833 - coroweb.py:241 - server_info - add route POST /api/authenticate => authenticate(email,passwd)
2016-06-01 02:30:55,833 - coroweb.py:238 - server_info - set coroutine: register
2016-06-01 02:30:55,833 - coroweb.py:241 - server_info - add route GET /register => register()
2016-06-01 02:30:55,834 - coroweb.py:238 - server_info - set coroutine: signin
2016-06-01 02:30:55,834 - coroweb.py:241 - server_info - add route GET /signin => signin()
2016-06-01 02:30:55,834 - coroweb.py:238 - server_info - set coroutine: signout
2016-06-01 02:30:55,834 - coroweb.py:241 - server_info - add route GET /signout => signout(request)
2016-06-01 02:30:55,834 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 02:31:09,484 - orm.py:27 - server_info - create database connection pool...
2016-06-01 02:31:09,488 - app.py:41 - server_info - init jinja2....
2016-06-01 02:31:09,489 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 02:31:09,489 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 02:31:09,489 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,489 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,490 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,490 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 02:31:09,490 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 02:31:09,490 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,490 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 02:31:09,490 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 02:31:09,490 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,490 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 02:31:09,490 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,490 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 02:31:09,490 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 02:31:09,491 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 02:31:09,491 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,491 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,491 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 02:31:09,491 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 02:31:09,491 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 02:31:09,491 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,491 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,491 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 02:31:09,491 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,491 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 02:31:09,492 - coroweb.py:238 - server_info - set coroutine: api_register_user
2016-06-01 02:31:09,492 - coroweb.py:241 - server_info - add route POST /api/users => api_register_user(email,name,passwd)
2016-06-01 02:31:09,493 - coroweb.py:238 - server_info - set coroutine: authenticate
2016-06-01 02:31:09,493 - coroweb.py:241 - server_info - add route POST /api/authenticate => authenticate(email,passwd)
2016-06-01 02:31:09,493 - coroweb.py:238 - server_info - set coroutine: register
2016-06-01 02:31:09,494 - coroweb.py:241 - server_info - add route GET /register => register()
2016-06-01 02:31:09,494 - coroweb.py:238 - server_info - set coroutine: signin
2016-06-01 02:31:09,494 - coroweb.py:241 - server_info - add route GET /signin => signin()
2016-06-01 02:31:09,495 - coroweb.py:238 - server_info - set coroutine: signout
2016-06-01 02:31:09,495 - coroweb.py:241 - server_info - add route GET /signout => signout(request)
2016-06-01 02:31:09,495 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 02:31:18,052 - app.py:72 - server_info - Request: GET /
2016-06-01 02:31:18,053 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:18,053 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 02:31:18,053 - app.py:96 - server_info - response result = {'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464719358.053446, 'id': '1'}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464715878.053453, 'id': '2'}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464712278.053455, 'id': '3'}], '__template__': 'blogs.html'}
2016-06-01 02:31:18,172 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 02:31:18,172 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:18,176 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 02:31:18,177 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:18,181 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:31:18,181 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:18,186 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 02:31:18,186 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:18,619 - app.py:72 - server_info - Request: GET /
2016-06-01 02:31:18,620 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:18,620 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 02:31:18,620 - app.py:96 - server_info - response result = {'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464719358.620346, 'id': '1'}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464715878.620352, 'id': '2'}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464712278.620355, 'id': '3'}], '__template__': 'blogs.html'}
2016-06-01 02:31:18,670 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:31:18,670 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:21,535 - app.py:72 - server_info - Request: GET /signin
2016-06-01 02:31:21,535 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:21,535 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 02:31:21,536 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 02:31:21,568 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 02:31:21,568 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:21,571 - app.py:96 - server_info - response result = <StreamResponse OK GET /static/js/sha1.min.js >
2016-06-01 02:31:21,572 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 02:31:21,572 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:21,573 - app.py:96 - server_info - response result = <StreamResponse OK GET /static/js/vue.min.js >
2016-06-01 02:31:28,607 - app.py:72 - server_info - Request: GET /
2016-06-01 02:31:28,607 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:28,607 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 02:31:28,607 - app.py:96 - server_info - response result = {'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464719368.607883, 'id': '1'}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464715888.60789, 'id': '2'}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464712288.607892, 'id': '3'}], '__template__': 'blogs.html'}
2016-06-01 02:31:28,634 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:31:28,634 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:33,762 - app.py:72 - server_info - Request: GET /signin
2016-06-01 02:31:33,762 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:33,762 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 02:31:33,762 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 02:31:42,073 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 02:31:42,073 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:42,074 - coroweb.py:215 - server_info - call with args: {'email': '723526676@qq.com', 'passwd': '687b72d3c1423998b8d42779376f40d5e495f92a'}
2016-06-01 02:31:51,225 - app.py:72 - server_info - Request: GET /register
2016-06-01 02:31:51,225 - app.py:93 - server_info - Response handler...
2016-06-01 02:31:51,225 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 02:31:51,225 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 02:31:51,251 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:31:51,251 - app.py:93 - server_info - Response handler...
2016-06-01 02:36:55,044 - app.py:72 - server_info - Request: GET /
2016-06-01 02:36:55,044 - app.py:93 - server_info - Response handler...
2016-06-01 02:36:55,044 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 02:36:55,044 - app.py:96 - server_info - response result = {'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464719695.044932, 'id': '1'}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464716215.044941, 'id': '2'}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464712615.044945, 'id': '3'}], '__template__': 'blogs.html'}
2016-06-01 02:36:55,193 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:36:55,193 - app.py:93 - server_info - Response handler...
2016-06-01 02:36:55,674 - app.py:72 - server_info - Request: GET /
2016-06-01 02:36:55,674 - app.py:93 - server_info - Response handler...
2016-06-01 02:36:55,674 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 02:36:55,674 - app.py:96 - server_info - response result = {'blogs': [{'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464719695.6745, 'id': '1'}, {'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464716215.674507, 'id': '2'}, {'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464712615.674509, 'id': '3'}], '__template__': 'blogs.html'}
2016-06-01 02:36:55,727 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:36:55,727 - app.py:93 - server_info - Response handler...
2016-06-01 02:36:57,164 - app.py:72 - server_info - Request: GET /register
2016-06-01 02:36:57,164 - app.py:93 - server_info - Response handler...
2016-06-01 02:36:57,164 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 02:36:57,164 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 02:36:57,198 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:36:57,198 - app.py:93 - server_info - Response handler...
2016-06-01 02:39:15,790 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 02:39:15,790 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 02:39:15,790 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,790 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,791 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 02:39:15,791 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,791 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,791 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 02:39:15,791 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 02:39:15,791 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 02:39:15,791 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,791 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 02:39:15,791 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,791 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 02:39:15,791 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,792 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,792 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 02:39:15,792 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 02:39:15,792 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,792 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,792 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,792 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 02:39:15,792 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 02:39:15,792 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 02:39:15,792 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 02:39:23,268 - orm.py:27 - server_info - create database connection pool...
2016-06-01 02:39:23,272 - app.py:41 - server_info - init jinja2....
2016-06-01 02:39:23,273 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 02:39:23,275 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 02:39:23,275 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 02:39:23,275 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,275 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,275 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 02:39:23,275 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,275 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,275 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 02:39:23,275 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 02:39:23,275 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,276 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 02:39:23,276 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,276 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,276 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 02:39:23,276 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,276 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 02:39:23,276 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 02:39:23,276 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 02:39:23,276 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,277 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 02:39:23,277 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,277 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,277 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 02:39:23,277 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 02:39:23,277 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 02:39:23,278 - coroweb.py:238 - server_info - set coroutine: api_register_user
2016-06-01 02:39:23,278 - coroweb.py:241 - server_info - add route POST /api/users => api_register_user(email,name,passwd)
2016-06-01 02:39:23,278 - coroweb.py:238 - server_info - set coroutine: register
2016-06-01 02:39:23,279 - coroweb.py:241 - server_info - add route GET /register => register()
2016-06-01 02:39:23,279 - coroweb.py:238 - server_info - set coroutine: signin
2016-06-01 02:39:23,279 - coroweb.py:241 - server_info - add route GET /signin => signin()
2016-06-01 02:39:23,279 - coroweb.py:238 - server_info - set coroutine: signout
2016-06-01 02:39:23,279 - coroweb.py:241 - server_info - add route GET /signout => signout(request)
2016-06-01 02:39:23,280 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 02:39:28,393 - app.py:72 - server_info - Request: GET /
2016-06-01 02:39:28,394 - app.py:93 - server_info - Response handler...
2016-06-01 02:39:28,394 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 02:39:28,394 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'created_at': 1464719848.394606, 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'name': 'Test Blog', 'id': '1'}, {'created_at': 1464716368.394616, 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'name': 'Something New', 'id': '2'}, {'created_at': 1464712768.39462, 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'name': 'Learn Swift', 'id': '3'}]}
2016-06-01 02:39:28,715 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:39:28,715 - app.py:93 - server_info - Response handler...
2016-06-01 02:39:29,078 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 02:39:29,079 - app.py:93 - server_info - Response handler...
2016-06-01 02:39:30,821 - app.py:72 - server_info - Request: GET /register
2016-06-01 02:39:30,821 - app.py:93 - server_info - Response handler...
2016-06-01 02:39:30,821 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 02:39:30,821 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 02:39:30,855 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:39:30,855 - app.py:93 - server_info - Response handler...
2016-06-01 02:39:32,000 - app.py:72 - server_info - Request: GET /signin
2016-06-01 02:39:32,000 - app.py:93 - server_info - Response handler...
2016-06-01 02:39:32,000 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 02:39:32,001 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 02:39:46,008 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 02:39:46,008 - app.py:93 - server_info - Response handler...
2016-06-01 02:39:46,008 - coroweb.py:215 - server_info - call with args: {'email': '723526676@qq.com', 'passwd': '687b72d3c1423998b8d42779376f40d5e495f92a'}
2016-06-01 02:48:08,305 - orm.py:27 - server_info - create database connection pool...
2016-06-01 02:48:08,309 - app.py:41 - server_info - init jinja2....
2016-06-01 02:48:08,310 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 02:48:08,312 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 02:48:08,312 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 02:48:08,312 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 02:48:08,313 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 02:48:08,313 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,313 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,313 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,313 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,313 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 02:48:08,313 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,313 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 02:48:08,313 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 02:48:08,314 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,314 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 02:48:08,314 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,314 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 02:48:08,314 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,314 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 02:48:08,314 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,314 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 02:48:08,315 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,315 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,315 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 02:48:08,315 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 02:48:08,315 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 02:48:08,317 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 02:48:15,574 - app.py:72 - server_info - Request: GET /
2016-06-01 02:48:15,574 - app.py:93 - server_info - Response handler...
2016-06-01 02:48:15,574 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 02:48:15,574 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464720375.574883, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464716895.574889, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464713295.574892, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 02:48:15,698 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 02:48:15,699 - app.py:93 - server_info - Response handler...
2016-06-01 02:48:15,700 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 02:48:15,701 - app.py:93 - server_info - Response handler...
2016-06-01 02:48:15,702 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:48:15,702 - app.py:93 - server_info - Response handler...
2016-06-01 02:48:15,703 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 02:48:15,703 - app.py:93 - server_info - Response handler...
2016-06-01 02:48:19,226 - app.py:72 - server_info - Request: GET /signin
2016-06-01 02:48:19,226 - app.py:93 - server_info - Response handler...
2016-06-01 02:48:19,227 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 02:48:19,227 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 02:48:19,256 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 02:48:19,256 - app.py:93 - server_info - Response handler...
2016-06-01 02:48:19,258 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 02:48:19,258 - app.py:93 - server_info - Response handler...
2016-06-01 02:48:26,765 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 02:48:26,765 - app.py:93 - server_info - Response handler...
2016-06-01 02:48:26,765 - coroweb.py:215 - server_info - call with args: {'email': '723526676@qq.com', 'passwd': '687b72d3c1423998b8d42779376f40d5e495f92a'}
2016-06-01 02:48:26,765 - orm.py:23 - server_info - SQL: select `id`, `admin`,`created_at`,`image`,`passwd`,`email`,`name` from `users` where email=?, ARGS: ['723526676@qq.com']
2016-06-01 02:48:26,767 - orm.py:57 - server_info - rows returned: 1
2016-06-01 02:48:34,864 - app.py:72 - server_info - Request: GET /register
2016-06-01 02:48:34,864 - app.py:93 - server_info - Response handler...
2016-06-01 02:48:34,864 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 02:48:34,865 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 02:48:34,894 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:48:34,894 - app.py:93 - server_info - Response handler...
2016-06-01 02:50:27,794 - app.py:72 - server_info - Request: GET /register
2016-06-01 02:50:27,795 - app.py:93 - server_info - Response handler...
2016-06-01 02:50:27,795 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 02:50:27,795 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 02:50:27,815 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:50:27,815 - app.py:93 - server_info - Response handler...
2016-06-01 02:50:39,103 - app.py:72 - server_info - Request: GET /signin
2016-06-01 02:50:39,103 - app.py:93 - server_info - Response handler...
2016-06-01 02:50:39,103 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 02:50:39,103 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 02:50:41,883 - app.py:72 - server_info - Request: GET /
2016-06-01 02:50:41,883 - app.py:93 - server_info - Response handler...
2016-06-01 02:50:41,883 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 02:50:41,883 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464720521.883749, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464717041.883756, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464713441.883759, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 02:50:41,905 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 02:50:41,905 - app.py:93 - server_info - Response handler...
2016-06-01 02:50:50,551 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 02:50:50,551 - app.py:93 - server_info - Response handler...
2016-06-01 02:50:50,551 - coroweb.py:215 - server_info - call with args: {'email': '723526676@qq.com', 'passwd': '687b72d3c1423998b8d42779376f40d5e495f92a'}
2016-06-01 02:50:50,551 - orm.py:23 - server_info - SQL: select `id`, `admin`,`created_at`,`image`,`passwd`,`email`,`name` from `users` where email=?, ARGS: ['723526676@qq.com']
2016-06-01 02:50:50,552 - orm.py:57 - server_info - rows returned: 1
2016-06-01 03:00:41,317 - app.py:72 - server_info - Request: GET /signin
2016-06-01 03:00:41,317 - app.py:93 - server_info - Response handler...
2016-06-01 03:00:41,318 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:00:41,318 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 03:00:41,414 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 03:00:41,414 - app.py:93 - server_info - Response handler...
2016-06-01 03:00:41,416 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 03:00:41,416 - app.py:93 - server_info - Response handler...
2016-06-01 03:00:41,418 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 03:00:41,418 - app.py:93 - server_info - Response handler...
2016-06-01 03:00:41,419 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 03:00:41,419 - app.py:93 - server_info - Response handler...
2016-06-01 03:00:41,421 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 03:00:41,421 - app.py:93 - server_info - Response handler...
2016-06-01 03:00:41,422 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 03:00:41,422 - app.py:93 - server_info - Response handler...
2016-06-01 03:00:41,423 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 03:00:41,423 - app.py:93 - server_info - Response handler...
2016-06-01 03:00:41,542 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 03:00:41,542 - app.py:93 - server_info - Response handler...
2016-06-01 03:00:57,470 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 03:00:57,470 - app.py:93 - server_info - Response handler...
2016-06-01 03:00:57,470 - coroweb.py:215 - server_info - call with args: {'email': '723526676@qq.com', 'passwd': ''}
2016-06-01 03:15:09,028 - app.py:72 - server_info - Request: GET /
2016-06-01 03:15:09,029 - app.py:93 - server_info - Response handler...
2016-06-01 03:15:09,029 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 03:15:09,029 - app.py:96 - server_info - response result = {'blogs': [{'created_at': 1464721989.02935, 'id': '1', 'name': 'Test Blog', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464718509.029357, 'id': '2', 'name': 'Something New', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}, {'created_at': 1464714909.02936, 'id': '3', 'name': 'Learn Swift', 'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.'}], '__template__': 'blogs.html'}
2016-06-01 03:15:09,139 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 03:15:09,139 - app.py:93 - server_info - Response handler...
2016-06-01 03:15:09,141 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 03:15:09,141 - app.py:93 - server_info - Response handler...
2016-06-01 03:15:09,142 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 03:15:09,142 - app.py:93 - server_info - Response handler...
2016-06-01 03:15:09,143 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 03:15:09,143 - app.py:93 - server_info - Response handler...
2016-06-01 03:15:11,999 - app.py:72 - server_info - Request: GET /signin
2016-06-01 03:15:11,999 - app.py:93 - server_info - Response handler...
2016-06-01 03:15:11,999 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:15:11,999 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 03:15:12,024 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 03:15:12,024 - app.py:93 - server_info - Response handler...
2016-06-01 03:15:12,025 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 03:15:12,026 - app.py:93 - server_info - Response handler...
2016-06-01 03:15:20,331 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 03:15:20,331 - app.py:93 - server_info - Response handler...
2016-06-01 03:15:20,331 - coroweb.py:215 - server_info - call with args: {'email': '723526676@qq.com', 'passwd': '687b72d3c1423998b8d42779376f40d5e495f92a'}
2016-06-01 03:15:20,332 - orm.py:23 - server_info - SQL: select `id`, `admin`,`created_at`,`image`,`passwd`,`email`,`name` from `users` where email=?, ARGS: ['723526676@qq.com']
2016-06-01 03:15:20,332 - orm.py:57 - server_info - rows returned: 1
2016-06-01 03:22:28,203 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:22:28,203 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,204 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,204 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:22:28,205 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,205 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:22:28,205 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:22:28,205 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,205 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,205 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,205 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:22:28,205 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:22:28,205 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:22:28,206 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:22:28,210 - orm.py:194 - server_info - using default value for created_at: 1464722548.210926
2016-06-01 03:22:28,211 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 03:22:28,211 - orm.py:194 - server_info - using default value for id: 0014647225482113af9731f28964162b66332754fb8e763000
2016-06-01 03:22:28,211 - orm.py:23 - server_info - SQL: insert into `users` (`created_at`,`email`,`admin`,`image`,`passwd`,`name`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 03:22:28,214 - orm.py:72 - server_info - commit success!
2016-06-01 03:22:44,004 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:22:44,004 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,004 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:22:44,004 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,004 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,004 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:22:44,004 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,004 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:22:44,004 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:22:44,004 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,004 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:22:44,005 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:22:44,005 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:22:44,006 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:22:44,012 - orm.py:194 - server_info - using default value for created_at: 1464722564.012036
2016-06-01 03:22:44,012 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 03:22:44,012 - orm.py:194 - server_info - using default value for id: 00146472256401200756b051b4a42f3ad834dae6248b078000
2016-06-01 03:22:44,012 - orm.py:23 - server_info - SQL: insert into `users` (`image`,`email`,`name`,`created_at`,`passwd`,`admin`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 03:23:28,291 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:23:28,291 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,291 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,291 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,291 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,291 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:23:28,291 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:23:28,291 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:23:28,292 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:23:28,292 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:23:28,292 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,292 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:23:28,292 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:23:28,292 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:23:28,292 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,292 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,292 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,292 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:23:28,292 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,293 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,293 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:23:28,293 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:23:28,293 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:23:28,293 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,293 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:23:28,293 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:23:28,299 - orm.py:194 - server_info - using default value for created_at: 1464722608.299139
2016-06-01 03:23:28,299 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 03:23:28,299 - orm.py:194 - server_info - using default value for id: 00146472260829986026377ebf84628804077e366455911000
2016-06-01 03:23:28,299 - orm.py:23 - server_info - SQL: insert into `users` (`name`,`email`,`passwd`,`image`,`created_at`,`admin`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 03:24:03,750 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:24:03,750 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,750 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:24:03,750 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,750 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,750 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,750 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:24:03,750 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:24:03,751 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:24:03,751 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,751 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:24:03,752 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:24:03,752 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:24:03,757 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 03:24:03,758 - orm.py:194 - server_info - using default value for created_at: 1464722643.75804
2016-06-01 03:24:03,758 - orm.py:194 - server_info - using default value for id: 001464722643758dd1f3ec990324fdf8319de6ba1db2303000
2016-06-01 03:24:03,758 - orm.py:23 - server_info - SQL: insert into `users` (`name`,`image`,`passwd`,`email`,`admin`,`created_at`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 03:24:03,761 - orm.py:72 - server_info - commit success!
2016-06-01 03:24:41,039 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:24:41,039 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:24:41,039 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,040 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,040 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:24:41,040 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:24:41,040 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,040 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,040 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:24:41,040 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:24:41,040 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:24:41,040 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,040 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,040 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,040 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:24:41,041 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:24:41,041 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,041 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:24:41,041 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:24:41,041 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,041 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,042 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:24:41,042 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,042 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:24:41,042 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:24:41,042 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:24:41,048 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 03:24:41,048 - orm.py:194 - server_info - using default value for created_at: 1464722681.048441
2016-06-01 03:24:41,048 - orm.py:194 - server_info - using default value for id: 0014647226810487ba316a2a46c43b7a2ebdad109508a5d000
2016-06-01 03:24:41,048 - orm.py:23 - server_info - SQL: insert into `users` (`image`,`name`,`email`,`admin`,`created_at`,`passwd`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 03:25:39,931 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:25:39,931 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,931 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,931 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:25:39,931 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:25:39,931 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:25:39,931 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,931 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,932 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:25:39,932 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:25:39,932 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,932 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,932 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,932 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:25:39,932 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:25:39,932 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,932 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:25:39,932 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:25:39,932 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,932 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,932 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:25:39,933 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:25:39,933 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,933 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:25:39,933 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:25:39,933 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:25:39,938 - orm.py:194 - server_info - using default value for created_at: 1464722739.938817
2016-06-01 03:25:39,938 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 03:25:39,939 - orm.py:194 - server_info - using default value for id: 0014647227399397c311bd4459748e19d0275fba2f2f120000
2016-06-01 03:25:39,939 - orm.py:23 - server_info - SQL: insert into `users` (`name`,`created_at`,`image`,`admin`,`email`,`passwd`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 03:26:29,004 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:26:29,005 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,005 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,005 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:26:29,005 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:26:29,005 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,005 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,005 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:26:29,005 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:26:29,005 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,005 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,006 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:26:29,006 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,006 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:26:29,006 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,006 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:26:29,006 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:26:29,006 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:26:29,006 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,006 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:26:29,006 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:26:29,006 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,006 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,007 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:26:29,007 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:26:29,007 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:26:29,012 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 03:26:29,013 - orm.py:194 - server_info - using default value for created_at: 1464722789.013153
2016-06-01 03:26:29,013 - orm.py:194 - server_info - using default value for id: 001464722789013721ae904187d428e831b219d2397dade000
2016-06-01 03:26:29,013 - orm.py:23 - server_info - SQL: insert into `users` (`name`,`admin`,`image`,`passwd`,`email`,`created_at`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 03:27:28,770 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:27:28,770 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,770 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,770 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,770 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:27:28,770 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:27:28,770 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:27:28,770 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,771 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:27:28,771 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:27:28,771 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,771 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,771 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,771 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:27:28,771 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:27:28,771 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:27:28,771 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,771 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:27:28,772 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:27:28,772 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,772 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,772 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,772 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:27:28,772 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:27:28,772 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:27:28,773 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:27:28,779 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 03:27:28,780 - orm.py:194 - server_info - using default value for created_at: 1464722848.780069
2016-06-01 03:27:28,780 - orm.py:194 - server_info - using default value for id: 0014647228487808454dbfe07f54ac3b3f1d5133e2e97de000
2016-06-01 03:27:28,780 - orm.py:23 - server_info - SQL: insert into `users` (`email`,`passwd`,`image`,`admin`,`created_at`,`name`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 03:28:56,503 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:28:56,503 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,503 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:28:56,504 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:28:56,504 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,504 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,504 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,504 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:28:56,504 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:28:56,504 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,504 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:28:56,504 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:28:56,504 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,505 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:28:56,505 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:28:56,505 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,505 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,505 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:28:56,505 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,505 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,505 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:28:56,505 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,505 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:28:56,505 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:28:56,505 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:28:56,506 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:28:56,511 - orm.py:194 - server_info - using default value for created_at: 1464722936.511939
2016-06-01 03:28:56,512 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 03:28:56,512 - orm.py:194 - server_info - using default value for id: 0014647229365127aeaf84c060147fe8b7faaebbbaa4d1c000
2016-06-01 03:28:56,512 - orm.py:23 - server_info - SQL: insert into `users` (`passwd`,`created_at`,`image`,`email`,`name`,`admin`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 03:29:27,171 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:29:27,171 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:29:27,171 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:29:27,171 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,171 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,171 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,171 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,171 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:29:27,171 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:29:27,171 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,171 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:29:27,171 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,172 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,172 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:29:27,173 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:29:27,178 - orm.py:194 - server_info - using default value for created_at: 1464722967.178364
2016-06-01 03:29:27,178 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 03:29:27,178 - orm.py:194 - server_info - using default value for id: 00146472296717871b84196e0a149e5a68697f146005772000
2016-06-01 03:29:27,178 - orm.py:23 - server_info - SQL: insert into `users` (`created_at`,`image`,`name`,`email`,`passwd`,`admin`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 03:29:27,181 - orm.py:72 - server_info - commit success!
2016-06-01 03:29:34,762 - app.py:72 - server_info - Request: GET /signin
2016-06-01 03:29:34,762 - app.py:93 - server_info - Response handler...
2016-06-01 03:29:34,762 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:29:34,762 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 03:29:34,808 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 03:29:34,808 - app.py:93 - server_info - Response handler...
2016-06-01 03:29:34,809 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 03:29:34,809 - app.py:93 - server_info - Response handler...
2016-06-01 03:29:34,811 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 03:29:34,811 - app.py:93 - server_info - Response handler...
2016-06-01 03:29:34,812 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 03:29:34,812 - app.py:93 - server_info - Response handler...
2016-06-01 03:29:34,813 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 03:29:34,813 - app.py:93 - server_info - Response handler...
2016-06-01 03:29:34,814 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 03:29:34,814 - app.py:93 - server_info - Response handler...
2016-06-01 03:29:34,816 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 03:29:34,816 - app.py:93 - server_info - Response handler...
2016-06-01 03:29:34,881 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 03:29:34,881 - app.py:93 - server_info - Response handler...
2016-06-01 03:29:45,136 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 03:29:45,136 - app.py:93 - server_info - Response handler...
2016-06-01 03:29:45,137 - coroweb.py:215 - server_info - call with args: {'email': '12345@qq.com', 'passwd': 'f6d41a471deedc330f7d7b5afdcbe930b9859439'}
2016-06-01 03:29:45,137 - orm.py:23 - server_info - SQL: select `id`, `admin`,`created_at`,`image`,`passwd`,`email`,`name` from `users` where email=?, ARGS: ['12345@qq.com']
2016-06-01 03:29:45,138 - orm.py:57 - server_info - rows returned: 1
2016-06-01 03:30:26,351 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:30:26,356 - app.py:41 - server_info - init jinja2....
2016-06-01 03:30:26,356 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 03:30:26,356 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:30:26,356 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,356 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:30:26,357 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,357 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:30:26,357 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,357 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,357 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:30:26,357 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:30:26,357 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,357 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,357 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:30:26,357 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:30:26,357 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,358 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,358 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:30:26,358 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:30:26,358 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:30:26,358 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,358 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,358 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:30:26,358 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,358 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:30:26,358 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:30:26,358 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:30:26,360 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 03:31:00,567 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:31:00,572 - app.py:41 - server_info - init jinja2....
2016-06-01 03:31:00,572 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 03:31:00,573 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:31:00,573 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,573 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:31:00,573 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:31:00,573 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,573 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:31:00,573 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,573 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,573 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:31:00,573 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:31:00,574 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,574 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:31:00,574 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:31:00,574 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,574 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:31:00,574 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,574 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,574 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:31:00,574 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:31:00,574 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,574 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:31:00,575 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,575 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,575 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:31:00,575 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:31:00,577 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 03:31:03,651 - app.py:72 - server_info - Request: GET /
2016-06-01 03:31:03,651 - app.py:93 - server_info - Response handler...
2016-06-01 03:31:03,651 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 03:31:03,651 - app.py:96 - server_info - response result = {'blogs': [{'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464722943.651842, 'name': 'Test Blog', 'id': '1'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464719463.651849, 'name': 'Something New', 'id': '2'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464715863.651852, 'name': 'Learn Swift', 'id': '3'}], '__template__': 'blogs.html'}
2016-06-01 03:31:03,999 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 03:31:03,999 - app.py:93 - server_info - Response handler...
2016-06-01 03:31:04,003 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 03:31:04,003 - app.py:93 - server_info - Response handler...
2016-06-01 03:31:04,364 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 03:31:04,364 - app.py:93 - server_info - Response handler...
2016-06-01 03:31:06,241 - app.py:72 - server_info - Request: GET /signin
2016-06-01 03:31:06,241 - app.py:93 - server_info - Response handler...
2016-06-01 03:31:06,241 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:31:06,241 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 03:31:18,202 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 03:31:18,202 - app.py:93 - server_info - Response handler...
2016-06-01 03:31:18,203 - coroweb.py:215 - server_info - call with args: {'passwd': 'f6d41a471deedc330f7d7b5afdcbe930b9859439', 'email': '12345@qq.com'}
2016-06-01 03:31:18,203 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`created_at`,`email`,`image`,`name` from `users` where email=?, ARGS: ['12345@qq.com']
2016-06-01 03:31:18,204 - orm.py:57 - server_info - rows returned: 1
2016-06-01 03:32:12,538 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 03:32:12,538 - app.py:93 - server_info - Response handler...
2016-06-01 03:32:12,539 - coroweb.py:215 - server_info - call with args: {'passwd': 'f6d41a471deedc330f7d7b5afdcbe930b9859439', 'email': '12345@qq.com'}
2016-06-01 03:32:12,539 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`created_at`,`email`,`image`,`name` from `users` where email=?, ARGS: ['12345@qq.com']
2016-06-01 03:32:12,540 - orm.py:57 - server_info - rows returned: 1
2016-06-01 03:35:01,798 - app.py:72 - server_info - Request: GET /signin
2016-06-01 03:35:01,798 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:01,798 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:35:01,798 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 03:35:01,844 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 03:35:01,844 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:01,846 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 03:35:01,846 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:01,848 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 03:35:01,848 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:01,849 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 03:35:01,849 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:01,850 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 03:35:01,850 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:01,851 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 03:35:01,852 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:01,853 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 03:35:01,853 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:01,921 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 03:35:01,921 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:09,491 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 03:35:09,491 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:09,491 - coroweb.py:215 - server_info - call with args: {'passwd': 'f6d41a471deedc330f7d7b5afdcbe930b9859439', 'email': '12345@qq.com'}
2016-06-01 03:35:09,491 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`created_at`,`email`,`image`,`name` from `users` where email=?, ARGS: ['12345@qq.com']
2016-06-01 03:35:09,492 - orm.py:57 - server_info - rows returned: 1
2016-06-01 03:35:47,539 - orm.py:27 - server_info - create database connection pool...
2016-06-01 03:35:47,544 - app.py:41 - server_info - init jinja2....
2016-06-01 03:35:47,544 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 03:35:47,545 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 03:35:47,545 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,545 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,545 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,545 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,545 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:35:47,545 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 03:35:47,545 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 03:35:47,545 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 03:35:47,546 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 03:35:47,546 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,546 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,546 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,546 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 03:35:47,546 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:35:47,546 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:35:47,546 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,546 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 03:35:47,546 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 03:35:47,546 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 03:35:47,546 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,547 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,547 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,547 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 03:35:47,547 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 03:35:47,550 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 03:35:54,343 - app.py:72 - server_info - Request: GET /
2016-06-01 03:35:54,343 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:54,343 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 03:35:54,343 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464723234.343632, 'name': 'Test Blog', 'id': '1'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464719754.343641, 'name': 'Something New', 'id': '2'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464716154.343643, 'name': 'Learn Swift', 'id': '3'}]}
2016-06-01 03:35:54,681 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 03:35:54,681 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:55,060 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 03:35:55,060 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:57,765 - app.py:72 - server_info - Request: GET /signin
2016-06-01 03:35:57,765 - app.py:93 - server_info - Response handler...
2016-06-01 03:35:57,765 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:35:57,765 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 03:36:04,884 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 03:36:04,884 - app.py:93 - server_info - Response handler...
2016-06-01 03:36:04,884 - coroweb.py:215 - server_info - call with args: {'email': '12345@qq.com', 'passwd': 'f6d41a471deedc330f7d7b5afdcbe930b9859439'}
2016-06-01 03:36:04,884 - orm.py:23 - server_info - SQL: select `id`, `email`,`name`,`passwd`,`created_at`,`image`,`admin` from `users` where email=?, ARGS: ['12345@qq.com']
2016-06-01 03:36:04,885 - orm.py:57 - server_info - rows returned: 1
2016-06-01 03:36:04,886 - app.py:96 - server_info - response result = {'error': 'value:invalid', 'message': 'Invalid password.', 'data': 'passwd'}
2016-06-01 03:36:20,490 - app.py:72 - server_info - Request: GET /register
2016-06-01 03:36:20,490 - app.py:93 - server_info - Response handler...
2016-06-01 03:36:20,490 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:36:20,490 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 03:36:20,521 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 03:36:20,521 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:17,442 - app.py:72 - server_info - Request: GET /register
2016-06-01 03:42:17,442 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:17,443 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:42:17,443 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 03:42:31,931 - app.py:72 - server_info - Request: GET /register
2016-06-01 03:42:31,932 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:31,932 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:42:31,932 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 03:42:31,994 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 03:42:31,995 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:40,486 - app.py:72 - server_info - Request: GET /register
2016-06-01 03:42:40,486 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:40,486 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:42:40,486 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 03:42:40,513 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 03:42:40,514 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:40,515 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 03:42:40,515 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:40,516 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 03:42:40,516 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:40,518 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 03:42:40,518 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:40,519 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 03:42:40,519 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:40,521 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 03:42:40,521 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:40,522 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 03:42:40,522 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:40,598 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 03:42:40,598 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:46,929 - app.py:72 - server_info - Request: GET /manage/comments
2016-06-01 03:42:46,930 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:47,018 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 03:42:47,018 - app.py:93 - server_info - Response handler...
2016-06-01 03:42:51,118 - app.py:72 - server_info - Request: GET /manage/
2016-06-01 03:42:51,118 - app.py:93 - server_info - Response handler...
2016-06-01 03:43:03,819 - app.py:72 - server_info - Request: GET /signin
2016-06-01 03:43:03,819 - app.py:93 - server_info - Response handler...
2016-06-01 03:43:03,820 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:43:03,820 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 03:43:34,665 - app.py:72 - server_info - Request: GET /signin
2016-06-01 03:43:34,665 - app.py:93 - server_info - Response handler...
2016-06-01 03:43:34,665 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:43:34,665 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 03:44:09,117 - app.py:72 - server_info - Request: GET /
2016-06-01 03:44:09,117 - app.py:93 - server_info - Response handler...
2016-06-01 03:44:09,117 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 03:44:09,117 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464723729.117476, 'name': 'Test Blog', 'id': '1'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464720249.117483, 'name': 'Something New', 'id': '2'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464716649.117486, 'name': 'Learn Swift', 'id': '3'}]}
2016-06-01 03:44:09,206 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 03:44:09,207 - app.py:93 - server_info - Response handler...
2016-06-01 03:44:10,995 - app.py:72 - server_info - Request: GET /register
2016-06-01 03:44:10,996 - app.py:93 - server_info - Response handler...
2016-06-01 03:44:10,996 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:44:10,996 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 03:44:11,018 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 03:44:11,019 - app.py:93 - server_info - Response handler...
2016-06-01 03:46:56,023 - app.py:72 - server_info - Request: GET /
2016-06-01 03:46:56,023 - app.py:93 - server_info - Response handler...
2016-06-01 03:46:56,023 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 03:46:56,023 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464723896.023891, 'name': 'Test Blog', 'id': '1'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464720416.023898, 'name': 'Something New', 'id': '2'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464716816.0239, 'name': 'Learn Swift', 'id': '3'}]}
2016-06-01 03:46:56,135 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 03:46:56,136 - app.py:93 - server_info - Response handler...
2016-06-01 03:46:58,617 - app.py:72 - server_info - Request: GET /register
2016-06-01 03:46:58,617 - app.py:93 - server_info - Response handler...
2016-06-01 03:46:58,617 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:46:58,617 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 03:46:58,648 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 03:46:58,648 - app.py:93 - server_info - Response handler...
2016-06-01 03:50:50,603 - app.py:72 - server_info - Request: GET /signin
2016-06-01 03:50:50,603 - app.py:93 - server_info - Response handler...
2016-06-01 03:50:50,604 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:50:50,604 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 03:50:50,642 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 03:50:50,642 - app.py:93 - server_info - Response handler...
2016-06-01 03:50:50,644 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 03:50:50,644 - app.py:93 - server_info - Response handler...
2016-06-01 03:51:01,554 - app.py:72 - server_info - Request: GET /signin
2016-06-01 03:51:01,554 - app.py:93 - server_info - Response handler...
2016-06-01 03:51:01,554 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 03:51:01,554 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 04:00:24,559 - app.py:72 - server_info - Request: GET /signin
2016-06-01 04:00:24,559 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:24,559 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 04:00:24,559 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 04:00:24,624 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 04:00:24,624 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:24,626 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 04:00:24,626 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:24,627 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 04:00:24,627 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:24,629 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 04:00:24,629 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:24,630 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 04:00:24,630 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:24,632 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 04:00:24,632 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:24,633 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 04:00:24,634 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:24,708 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 04:00:24,708 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:24,819 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 04:00:24,819 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:24,821 - app.py:96 - server_info - response result = <StreamResponse OK GET /static/fonts/fontawesome-webfont.woff >
2016-06-01 04:00:32,193 - app.py:72 - server_info - Request: GET /register
2016-06-01 04:00:32,193 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:32,193 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 04:00:32,193 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 04:00:32,290 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 04:00:32,291 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:32,293 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 04:00:32,293 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:32,294 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 04:00:32,294 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:32,296 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 04:00:32,296 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:32,297 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 04:00:32,297 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:32,298 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 04:00:32,298 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:32,299 - app.py:72 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 04:00:32,299 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:32,300 - app.py:96 - server_info - response result = <StreamResponse OK GET /static/js/sticky.min.js >
2016-06-01 04:00:32,300 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 04:00:32,300 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:32,301 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 04:00:32,301 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:32,427 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 04:00:32,428 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:32,486 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 04:00:32,486 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:38,359 - app.py:72 - server_info - Request: GET /
2016-06-01 04:00:38,359 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:38,359 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 04:00:38,359 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464724718.35982, 'name': 'Test Blog', 'id': '1'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464721238.359827, 'name': 'Something New', 'id': '2'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464717638.35983, 'name': 'Learn Swift', 'id': '3'}]}
2016-06-01 04:00:38,387 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 04:00:38,387 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:38,451 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 04:00:38,451 - app.py:93 - server_info - Response handler...
2016-06-01 04:00:41,607 - app.py:72 - server_info - Request: GET /manage/users
2016-06-01 04:00:41,607 - app.py:93 - server_info - Response handler...
2016-06-01 04:01:01,930 - app.py:72 - server_info - Request: GET /signin
2016-06-01 04:01:01,931 - app.py:93 - server_info - Response handler...
2016-06-01 04:01:01,931 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 04:01:01,931 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 04:01:02,066 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 04:01:02,066 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:28,390 - app.py:72 - server_info - Request: GET /
2016-06-01 04:16:28,390 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:28,390 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 04:16:28,390 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464725668.390896, 'name': 'Test Blog', 'id': '1'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464722188.390903, 'name': 'Something New', 'id': '2'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464718588.390906, 'name': 'Learn Swift', 'id': '3'}]}
2016-06-01 04:16:28,488 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 04:16:28,488 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:28,624 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 04:16:28,625 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:29,227 - app.py:72 - server_info - Request: GET /
2016-06-01 04:16:29,227 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:29,227 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 04:16:29,227 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464725669.227699, 'name': 'Test Blog', 'id': '1'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464722189.227716, 'name': 'Something New', 'id': '2'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464718589.227719, 'name': 'Learn Swift', 'id': '3'}]}
2016-06-01 04:16:29,283 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 04:16:29,283 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:29,356 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 04:16:29,357 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:31,094 - app.py:72 - server_info - Request: GET /register
2016-06-01 04:16:31,095 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:31,095 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 04:16:31,095 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 04:16:31,231 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 04:16:31,231 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:55,743 - app.py:72 - server_info - Request: POST /api/users
2016-06-01 04:16:55,744 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:55,744 - coroweb.py:215 - server_info - call with args: {'email': '23456@qq.com', 'name': '尧亚光', 'passwd': 'e0b348891dcc1ecb5576b10e7d7987a3b0bda7fc'}
2016-06-01 04:16:55,744 - orm.py:23 - server_info - SQL: select `id`, `email`,`name`,`passwd`,`created_at`,`image`,`admin` from `users` where email=?, ARGS: ['23456@qq.com']
2016-06-01 04:16:55,745 - orm.py:57 - server_info - rows returned: 0
2016-06-01 04:16:55,746 - orm.py:194 - server_info - using default value for created_at: 1464725815.746042
2016-06-01 04:16:55,746 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 04:16:55,746 - orm.py:23 - server_info - SQL: insert into `users` (`email`,`name`,`passwd`,`created_at`,`image`,`admin`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 04:16:55,749 - orm.py:72 - server_info - commit success!
2016-06-01 04:16:55,749 - app.py:96 - server_info - response result = <Response OK not started>
2016-06-01 04:16:55,760 - app.py:72 - server_info - Request: GET /
2016-06-01 04:16:55,760 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:55,760 - coroweb.py:215 - server_info - call with args: {'request': <Request GET / >}
2016-06-01 04:16:55,760 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464725695.760624, 'name': 'Test Blog', 'id': '1'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464722215.76063, 'name': 'Something New', 'id': '2'}, {'summary': 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.', 'created_at': 1464718615.760633, 'name': 'Learn Swift', 'id': '3'}]}
2016-06-01 04:16:55,839 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 04:16:55,839 - app.py:93 - server_info - Response handler...
2016-06-01 04:16:55,915 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 04:16:55,915 - app.py:93 - server_info - Response handler...
2016-06-01 04:17:00,662 - app.py:72 - server_info - Request: GET /register
2016-06-01 04:17:00,662 - app.py:93 - server_info - Response handler...
2016-06-01 04:17:00,662 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 04:17:00,662 - app.py:96 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 04:17:00,798 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 04:17:00,798 - app.py:93 - server_info - Response handler...
2016-06-01 04:17:02,046 - app.py:72 - server_info - Request: GET /signin
2016-06-01 04:17:02,046 - app.py:93 - server_info - Response handler...
2016-06-01 04:17:02,046 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 04:17:02,047 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 04:17:02,136 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 04:17:02,137 - app.py:93 - server_info - Response handler...
2016-06-01 04:17:04,238 - app.py:72 - server_info - Request: GET /signin
2016-06-01 04:17:04,238 - app.py:93 - server_info - Response handler...
2016-06-01 04:17:04,239 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 04:17:04,239 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 04:17:04,374 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 04:17:04,374 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:30,540 - orm.py:27 - server_info - create database connection pool...
2016-06-01 17:59:30,547 - app.py:41 - server_info - init jinja2....
2016-06-01 17:59:30,547 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 17:59:30,550 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 17:59:30,550 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,550 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 17:59:30,550 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,550 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 17:59:30,550 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,550 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 17:59:30,551 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,551 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 17:59:30,551 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,551 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,551 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 17:59:30,551 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 17:59:30,551 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,551 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 17:59:30,551 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 17:59:30,551 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,552 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 17:59:30,552 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,552 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 17:59:30,552 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 17:59:30,552 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 17:59:30,552 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,552 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,552 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 17:59:30,554 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 17:59:36,250 - app.py:72 - server_info - Request: GET /
2016-06-01 17:59:36,250 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:36,251 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 17:59:36,251 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 17:59:36,258 - orm.py:57 - server_info - rows returned: 1
2016-06-01 17:59:36,258 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 17:59:36,258 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'page': '1', 'blogs': []}
2016-06-01 17:59:36,377 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 17:59:36,377 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:36,379 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 17:59:36,379 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:36,380 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 17:59:36,380 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:36,381 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 17:59:36,381 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:36,495 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 17:59:36,495 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:36,685 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 17:59:36,685 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:40,808 - app.py:72 - server_info - Request: GET /manage/blogs
2016-06-01 17:59:40,809 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:40,909 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 17:59:40,909 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:50,703 - app.py:72 - server_info - Request: GET /signin
2016-06-01 17:59:50,703 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:50,703 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 17:59:50,703 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 17:59:50,726 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 17:59:50,726 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:50,727 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 17:59:50,728 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:50,797 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 17:59:50,797 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:52,703 - app.py:72 - server_info - Request: GET /signin
2016-06-01 17:59:52,704 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:52,704 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 17:59:52,704 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 17:59:52,836 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 17:59:52,836 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:55,598 - app.py:72 - server_info - Request: GET /signin
2016-06-01 17:59:55,598 - app.py:93 - server_info - Response handler...
2016-06-01 17:59:55,598 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 17:59:55,598 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 17:59:55,719 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 17:59:55,719 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:01,941 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:02:01,941 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:01,941 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:02:01,941 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:02:02,060 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:02:02,060 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:03,083 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:02:03,083 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:03,083 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:02:03,084 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:02:03,174 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:02:03,174 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:03,839 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:02:03,840 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:03,840 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:02:03,840 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:02:03,930 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:02:03,930 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:50,493 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:02:50,493 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:50,494 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:02:50,494 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:02:50,591 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:02:50,591 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:59,248 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:02:59,249 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:59,249 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:02:59,249 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:02:59,369 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:02:59,370 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:59,961 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:02:59,961 - app.py:93 - server_info - Response handler...
2016-06-01 18:02:59,961 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:02:59,961 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:03:00,066 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:03:00,066 - app.py:93 - server_info - Response handler...
2016-06-01 18:03:00,581 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:03:00,581 - app.py:93 - server_info - Response handler...
2016-06-01 18:03:00,582 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:03:00,582 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:03:00,690 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:03:00,690 - app.py:93 - server_info - Response handler...
2016-06-01 18:05:56,817 - orm.py:27 - server_info - create database connection pool...
2016-06-01 18:05:56,821 - app.py:41 - server_info - init jinja2....
2016-06-01 18:05:56,822 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 18:05:56,822 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 18:05:56,822 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,822 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 18:05:56,822 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,823 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 18:05:56,823 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,823 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 18:05:56,823 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,823 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 18:05:56,823 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,823 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 18:05:56,823 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,823 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,823 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 18:05:56,823 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 18:05:56,824 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,824 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 18:05:56,824 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 18:05:56,824 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,824 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 18:05:56,824 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,824 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,824 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 18:05:56,824 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 18:05:56,824 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 18:05:56,826 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 18:06:00,119 - app.py:72 - server_info - Request: GET /
2016-06-01 18:06:00,119 - app.py:93 - server_info - Response handler...
2016-06-01 18:06:00,119 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:06:00,119 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:06:00,120 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:06:00,120 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:06:00,120 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:06:00,392 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:06:00,392 - app.py:93 - server_info - Response handler...
2016-06-01 18:06:00,516 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:06:00,516 - app.py:93 - server_info - Response handler...
2016-06-01 18:06:00,720 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 18:06:00,721 - app.py:93 - server_info - Response handler...
2016-06-01 18:06:02,555 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:06:02,555 - app.py:93 - server_info - Response handler...
2016-06-01 18:06:02,556 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:06:02,556 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:06:02,645 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:06:02,645 - app.py:93 - server_info - Response handler...
2016-06-01 18:06:05,150 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:06:05,150 - app.py:93 - server_info - Response handler...
2016-06-01 18:06:05,151 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:06:05,151 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:06:05,246 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:06:05,246 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:22,800 - app.py:72 - server_info - Request: GET /
2016-06-01 18:10:22,800 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:22,800 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:10:22,800 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:10:22,801 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:10:22,801 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:10:22,801 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:10:22,841 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:10:22,841 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:22,911 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:10:22,911 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:24,845 - app.py:72 - server_info - Request: GET /
2016-06-01 18:10:24,845 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:24,845 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:10:24,845 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:10:24,846 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:10:24,846 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:10:24,846 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:10:24,872 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:10:24,872 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:24,925 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:10:24,925 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:27,227 - app.py:72 - server_info - Request: GET /manage/blogs
2016-06-01 18:10:27,227 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:27,321 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 18:10:27,321 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:30,319 - app.py:72 - server_info - Request: GET /
2016-06-01 18:10:30,319 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:30,319 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:10:30,319 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:10:30,320 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:10:30,320 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:10:30,320 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:10:30,340 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:10:30,340 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:30,439 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:10:30,439 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:31,386 - app.py:72 - server_info - Request: GET /
2016-06-01 18:10:31,387 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:31,387 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:10:31,387 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:10:31,388 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:10:31,388 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:10:31,388 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:10:31,407 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:10:31,407 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:31,488 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:10:31,489 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:34,836 - app.py:72 - server_info - Request: GET /
2016-06-01 18:10:34,836 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:34,836 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:10:34,836 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:10:34,837 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:10:34,837 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:10:34,837 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:10:34,856 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:10:34,857 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:34,914 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:10:34,914 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:35,584 - app.py:72 - server_info - Request: GET /
2016-06-01 18:10:35,585 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:35,585 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:10:35,585 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:10:35,586 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:10:35,586 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:10:35,586 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:10:35,605 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:10:35,606 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:35,663 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:10:35,664 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:36,198 - app.py:72 - server_info - Request: GET /
2016-06-01 18:10:36,199 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:36,199 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:10:36,199 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:10:36,199 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:10:36,200 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:10:36,200 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:10:36,218 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:10:36,219 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:36,277 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:10:36,277 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:36,829 - app.py:72 - server_info - Request: GET /
2016-06-01 18:10:36,830 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:36,830 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:10:36,830 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:10:36,831 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:10:36,831 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:10:36,831 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:10:36,851 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:10:36,851 - app.py:93 - server_info - Response handler...
2016-06-01 18:10:36,897 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:10:36,898 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:33,359 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:13:33,360 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:33,360 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:13:33,360 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:13:33,462 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:13:33,462 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:34,667 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:13:34,667 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:34,667 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:13:34,667 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:13:34,752 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:13:34,752 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:37,643 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:13:37,644 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:37,644 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:13:37,644 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:13:37,719 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:13:37,720 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:39,234 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:13:39,235 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:39,235 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:13:39,235 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:13:39,318 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:13:39,318 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:53,362 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:13:53,362 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:53,362 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:13:53,362 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:13:53,453 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 18:13:53,453 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:53,455 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 18:13:53,455 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:53,456 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 18:13:53,456 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:53,457 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 18:13:53,457 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:53,458 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 18:13:53,458 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:53,460 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 18:13:53,461 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:53,462 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 18:13:53,462 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:53,574 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:13:53,574 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:53,609 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 18:13:53,609 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:54,867 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 18:13:54,867 - app.py:93 - server_info - Response handler...
2016-06-01 18:13:54,868 - coroweb.py:215 - server_info - call with args: {'passwd': 'e0b348891dcc1ecb5576b10e7d7987a3b0bda7fc', 'email': '23456@qq.com'}
2016-06-01 18:13:54,868 - orm.py:23 - server_info - SQL: select `id`, `image`,`passwd`,`created_at`,`name`,`admin`,`email` from `users` where email=?, ARGS: ['23456@qq.com']
2016-06-01 18:13:54,871 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:13:54,872 - app.py:96 - server_info - response result = <Response OK not started>
2016-06-01 18:14:00,964 - app.py:72 - server_info - Request: GET /
2016-06-01 18:14:00,964 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:00,964 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:14:00,965 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:14:00,966 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:14:00,966 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:14:00,966 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:14:00,991 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:14:00,991 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:01,053 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:14:01,053 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:13,013 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:14:13,013 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:13,013 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:14:13,013 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:14:13,111 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:14:13,111 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:14,243 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 18:14:14,243 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:14,243 - coroweb.py:215 - server_info - call with args: {'passwd': 'e0b348891dcc1ecb5576b10e7d7987a3b0bda7fc', 'email': '23456@qq.com'}
2016-06-01 18:14:14,243 - orm.py:23 - server_info - SQL: select `id`, `image`,`passwd`,`created_at`,`name`,`admin`,`email` from `users` where email=?, ARGS: ['23456@qq.com']
2016-06-01 18:14:14,244 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:14:14,245 - app.py:96 - server_info - response result = <Response OK not started>
2016-06-01 18:14:39,321 - app.py:72 - server_info - Request: GET /
2016-06-01 18:14:39,321 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:39,321 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:14:39,321 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:14:39,322 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:14:39,322 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:14:39,322 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:14:39,360 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:14:39,360 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:39,417 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:14:39,417 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:41,473 - app.py:72 - server_info - Request: GET /signin
2016-06-01 18:14:41,473 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:41,473 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:14:41,473 - app.py:96 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 18:14:41,548 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:14:41,548 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:42,839 - app.py:72 - server_info - Request: POST /api/authenticate
2016-06-01 18:14:42,839 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:42,839 - coroweb.py:215 - server_info - call with args: {'passwd': 'e0b348891dcc1ecb5576b10e7d7987a3b0bda7fc', 'email': '23456@qq.com'}
2016-06-01 18:14:42,839 - orm.py:23 - server_info - SQL: select `id`, `image`,`passwd`,`created_at`,`name`,`admin`,`email` from `users` where email=?, ARGS: ['23456@qq.com']
2016-06-01 18:14:42,841 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:14:42,841 - app.py:96 - server_info - response result = <Response OK not started>
2016-06-01 18:14:42,852 - app.py:72 - server_info - Request: GET /
2016-06-01 18:14:42,852 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:42,852 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:14:42,852 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:14:42,853 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:14:42,853 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:14:42,853 - app.py:96 - server_info - response result = {'blogs': [], 'page': '1', '__template__': 'blogs.html'}
2016-06-01 18:14:42,874 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:14:42,875 - app.py:93 - server_info - Response handler...
2016-06-01 18:14:42,931 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:14:42,931 - app.py:93 - server_info - Response handler...
2016-06-01 18:42:42,480 - orm.py:27 - server_info - create database connection pool...
2016-06-01 18:42:42,484 - app.py:41 - server_info - init jinja2....
2016-06-01 18:42:42,485 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 18:42:42,487 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 18:42:42,487 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,487 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 18:42:42,487 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 18:42:42,487 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,487 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,488 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 18:42:42,488 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,488 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 18:42:42,488 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,488 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 18:42:42,488 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,488 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 18:42:42,488 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,488 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 18:42:42,488 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 18:42:42,488 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,489 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 18:42:42,489 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,489 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,489 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 18:42:42,489 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 18:42:42,489 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 18:42:42,489 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,489 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 18:42:42,491 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 18:42:42,644 - app.py:72 - server_info - Request: GET /
2016-06-01 18:42:42,645 - app.py:93 - server_info - Response handler...
2016-06-01 18:42:42,645 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:42:42,645 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:42:42,646 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:42:42,646 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:42:42,646 - app.py:96 - server_info - response result = {'blogs': [], '__template__': 'blogs.html', 'page': '1'}
2016-06-01 18:42:42,696 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 18:42:42,696 - app.py:93 - server_info - Response handler...
2016-06-01 18:42:42,697 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 18:42:42,698 - app.py:93 - server_info - Response handler...
2016-06-01 18:42:42,700 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 18:42:42,700 - app.py:93 - server_info - Response handler...
2016-06-01 18:42:42,701 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 18:42:42,701 - app.py:93 - server_info - Response handler...
2016-06-01 18:42:42,703 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 18:42:42,703 - app.py:93 - server_info - Response handler...
2016-06-01 18:42:42,704 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:42:42,704 - app.py:93 - server_info - Response handler...
2016-06-01 18:42:42,706 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 18:42:42,706 - app.py:93 - server_info - Response handler...
2016-06-01 18:42:42,750 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:42:42,750 - app.py:93 - server_info - Response handler...
2016-06-01 18:42:42,819 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 18:42:42,819 - app.py:93 - server_info - Response handler...
2016-06-01 18:42:45,588 - app.py:72 - server_info - Request: GET /manage/blogs
2016-06-01 18:42:45,588 - app.py:93 - server_info - Response handler...
2016-06-01 18:44:00,272 - orm.py:27 - server_info - create database connection pool...
2016-06-01 18:44:00,276 - app.py:41 - server_info - init jinja2....
2016-06-01 18:44:00,277 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 18:44:00,279 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 18:44:00,279 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 18:44:00,279 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,279 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 18:44:00,279 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,279 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 18:44:00,280 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,280 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,280 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 18:44:00,280 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 18:44:00,280 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 18:44:00,280 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,280 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 18:44:00,280 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,280 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,280 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,280 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 18:44:00,281 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 18:44:00,281 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,281 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 18:44:00,281 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 18:44:00,281 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,281 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,281 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 18:44:00,281 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 18:44:18,292 - orm.py:27 - server_info - create database connection pool...
2016-06-01 18:44:18,296 - app.py:41 - server_info - init jinja2....
2016-06-01 18:44:18,297 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 18:44:18,297 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 18:44:18,297 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:44:18,297 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 18:44:18,297 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 18:44:18,298 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 18:44:18,298 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 18:44:18,298 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 18:44:18,298 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 18:44:18,298 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 18:44:18,298 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:44:18,298 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 18:44:18,298 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 18:44:18,298 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 18:44:18,298 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 18:44:18,298 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 18:44:18,299 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 18:44:18,299 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 18:44:18,299 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 18:44:18,299 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:44:18,299 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 18:44:18,299 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 18:44:18,299 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 18:44:18,299 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 18:44:18,299 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 18:44:18,299 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,272 - orm.py:27 - server_info - create database connection pool...
2016-06-01 18:44:31,277 - app.py:41 - server_info - init jinja2....
2016-06-01 18:44:31,277 - app.py:56 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 18:44:31,279 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 18:44:31,279 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,280 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,280 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 18:44:31,280 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,280 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 18:44:31,280 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,280 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 18:44:31,280 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 18:44:31,280 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 18:44:31,280 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,280 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 18:44:31,280 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,280 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 18:44:31,281 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 18:44:31,281 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,281 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,281 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 18:44:31,281 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,281 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,281 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,281 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 18:44:31,281 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 18:44:31,281 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 18:44:31,282 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 18:44:31,284 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 18:44:34,286 - app.py:72 - server_info - Request: GET /
2016-06-01 18:44:34,286 - app.py:93 - server_info - Response handler...
2016-06-01 18:44:34,286 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:44:34,287 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:44:34,287 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:44:34,288 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:44:34,288 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'page': '1', 'blogs': []}
2016-06-01 18:44:34,628 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:44:34,629 - app.py:93 - server_info - Response handler...
2016-06-01 18:44:34,739 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:44:34,739 - app.py:93 - server_info - Response handler...
2016-06-01 18:44:34,975 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 18:44:34,976 - app.py:93 - server_info - Response handler...
2016-06-01 18:44:37,554 - app.py:72 - server_info - Request: GET /manage/blogs
2016-06-01 18:44:37,554 - app.py:93 - server_info - Response handler...
2016-06-01 18:44:37,669 - app.py:72 - server_info - Request: GET /favicon.ico
2016-06-01 18:44:37,669 - app.py:93 - server_info - Response handler...
2016-06-01 18:44:40,406 - app.py:72 - server_info - Request: GET /manage/comments
2016-06-01 18:44:40,406 - app.py:93 - server_info - Response handler...
2016-06-01 18:44:56,932 - app.py:72 - server_info - Request: GET /manage/blogs/create
2016-06-01 18:44:56,932 - app.py:93 - server_info - Response handler...
2016-06-01 18:44:56,932 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:44:56,932 - app.py:96 - server_info - response result = {'action': '/api/blogs', '__template__': 'manage_blog_edit.html', 'id': ''}
2016-06-01 18:44:56,976 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:44:56,976 - app.py:93 - server_info - Response handler...
2016-06-01 18:44:57,198 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:44:57,199 - app.py:93 - server_info - Response handler...
2016-06-01 18:44:59,595 - app.py:72 - server_info - Request: GET /manage/comments
2016-06-01 18:44:59,595 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:02,949 - app.py:72 - server_info - Request: GET /manage/blogs
2016-06-01 18:45:02,949 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:17,014 - app.py:72 - server_info - Request: GET /manage/blogs/create
2016-06-01 18:45:17,015 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:17,015 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:45:17,015 - app.py:96 - server_info - response result = {'action': '/api/blogs', '__template__': 'manage_blog_edit.html', 'id': ''}
2016-06-01 18:45:17,044 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 18:45:17,044 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:17,046 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 18:45:17,046 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:17,047 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 18:45:17,047 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:17,048 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 18:45:17,048 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:17,050 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 18:45:17,050 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:17,051 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:45:17,051 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:17,052 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 18:45:17,052 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:17,094 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:45:17,094 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:17,131 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 18:45:17,132 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,232 - app.py:72 - server_info - Request: GET /manage/blogs/create
2016-06-01 18:45:19,232 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,232 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:45:19,232 - app.py:96 - server_info - response result = {'action': '/api/blogs', '__template__': 'manage_blog_edit.html', 'id': ''}
2016-06-01 18:45:19,268 - app.py:72 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 18:45:19,268 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,270 - app.py:72 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 18:45:19,270 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,271 - app.py:72 - server_info - Request: GET /static/css/awesome.css
2016-06-01 18:45:19,272 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,273 - app.py:72 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 18:45:19,273 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,274 - app.py:72 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 18:45:19,275 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,276 - app.py:72 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 18:45:19,276 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,277 - app.py:72 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 18:45:19,278 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,279 - app.py:72 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 18:45:19,279 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,280 - app.py:72 - server_info - Request: GET /static/js/awesome.js
2016-06-01 18:45:19,280 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,337 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:45:19,337 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:19,415 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 18:45:19,415 - app.py:93 - server_info - Response handler...
2016-06-01 18:45:40,870 - app.py:72 - server_info - Request: POST /api/blogs
2016-06-01 18:45:40,870 - app.py:93 - server_info - Response handler...
2016-06-01 18:46:29,180 - app.py:72 - server_info - Request: GET /manage/users
2016-06-01 18:46:29,181 - app.py:93 - server_info - Response handler...
2016-06-01 18:46:32,879 - app.py:72 - server_info - Request: GET /manage/users
2016-06-01 18:46:32,879 - app.py:93 - server_info - Response handler...
2016-06-01 18:46:36,232 - app.py:72 - server_info - Request: GET /manage/blogs
2016-06-01 18:46:36,232 - app.py:93 - server_info - Response handler...
2016-06-01 18:46:38,791 - app.py:72 - server_info - Request: GET /manage/comments
2016-06-01 18:46:38,791 - app.py:93 - server_info - Response handler...
2016-06-01 18:46:41,281 - app.py:72 - server_info - Request: GET /
2016-06-01 18:46:41,281 - app.py:93 - server_info - Response handler...
2016-06-01 18:46:41,282 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 18:46:41,282 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 18:46:41,282 - orm.py:57 - server_info - rows returned: 1
2016-06-01 18:46:41,282 - handlers.py:140 - server_info - the type of num is: <class 'int'>
2016-06-01 18:46:41,283 - app.py:96 - server_info - response result = {'__template__': 'blogs.html', 'page': '1', 'blogs': []}
2016-06-01 18:46:41,303 - app.py:72 - server_info - Request: GET /static/js/md5.js
2016-06-01 18:46:41,303 - app.py:93 - server_info - Response handler...
2016-06-01 18:46:41,331 - app.py:72 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 18:46:41,332 - app.py:93 - server_info - Response handler...
2016-06-01 18:46:42,853 - app.py:72 - server_info - Request: GET /manage/blogs
2016-06-01 18:46:42,853 - app.py:93 - server_info - Response handler...
2016-06-01 18:46:45,981 - app.py:72 - server_info - Request: GET /manage/users
2016-06-01 18:46:45,981 - app.py:93 - server_info - Response handler...
2016-06-01 18:46:48,248 - app.py:72 - server_info - Request: GET /manage/comments
2016-06-01 18:46:48,249 - app.py:93 - server_info - Response handler...
2016-06-01 18:47:05,574 - app.py:72 - server_info - Request: GET /manage/
2016-06-01 18:47:05,574 - app.py:93 - server_info - Response handler...
2016-06-01 18:47:09,113 - app.py:72 - server_info - Request: GET /http
2016-06-01 18:47:09,113 - app.py:93 - server_info - Response handler...
2016-06-01 18:47:13,581 - app.py:72 - server_info - Request: GET /manage/blogs
2016-06-01 18:47:13,581 - app.py:93 - server_info - Response handler...
2016-06-01 18:47:16,062 - app.py:72 - server_info - Request: GET /manage/comments
2016-06-01 18:47:16,062 - app.py:93 - server_info - Response handler...
2016-06-01 18:49:13,600 - app.py:72 - server_info - Request: GET /manage/blogs
2016-06-01 18:49:13,600 - app.py:93 - server_info - Response handler...
2016-06-01 18:49:16,669 - app.py:72 - server_info - Request: GET /manage/users
2016-06-01 18:49:16,669 - app.py:93 - server_info - Response handler...
2016-06-01 19:13:10,499 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 19:13:10,499 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 19:13:10,500 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 19:13:10,500 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 19:13:10,501 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 19:13:10,501 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,501 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,501 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,501 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 19:13:10,501 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:13:10,501 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 19:13:10,501 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 19:13:10,501 - orm.py:27 - server_info - create database connection pool...
2016-06-01 19:13:10,507 - orm.py:194 - server_info - using default value for created_at: 1464779590.507628
2016-06-01 19:13:10,507 - orm.py:194 - server_info - using default value for id: 00146477959050713770cdc78f74af08ab37e304351f605000
2016-06-01 19:13:10,507 - orm.py:23 - server_info - SQL: insert into `users` (`admin`,`image`,`passwd`,`email`,`name`,`created_at`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 19:13:10,511 - orm.py:72 - server_info - commit success!
2016-06-01 19:16:19,808 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 19:16:19,808 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,808 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 19:16:19,808 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,808 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 19:16:19,808 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 19:16:19,808 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,809 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,809 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 19:16:19,809 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,809 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 19:16:19,809 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,809 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,809 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,809 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 19:16:19,809 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 19:16:19,809 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 19:16:19,809 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 19:16:19,810 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,810 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,810 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,810 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 19:16:19,810 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 19:16:19,810 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 19:16:19,810 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 19:16:19,811 - orm.py:27 - server_info - create database connection pool...
2016-06-01 19:16:19,816 - app.py:42 - server_info - init jinja2....
2016-06-01 19:16:19,816 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 19:16:19,818 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 19:16:24,928 - app.py:73 - server_info - Request: GET /
2016-06-01 19:16:24,928 - app.py:82 - server_info - check user: GET /
2016-06-01 19:16:24,929 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where `id` = ?, ARGS: ['001464725815745286c75fbb18946f09bd0a20e049d32f1000']
2016-06-01 19:16:24,930 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:16:24,930 - app.py:88 - server_info - set current user: 23456@qq.com
2016-06-01 19:16:24,930 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:24,930 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:16:24,930 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:16:24,931 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:16:24,931 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:16:24,931 - app.py:114 - server_info - response result = {'blogs': [], '__template__': 'blogs.html', 'page': '1'}
2016-06-01 19:16:25,045 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:16:25,045 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:16:25,045 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where `id` = ?, ARGS: ['001464725815745286c75fbb18946f09bd0a20e049d32f1000']
2016-06-01 19:16:25,046 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:16:25,046 - app.py:88 - server_info - set current user: 23456@qq.com
2016-06-01 19:16:25,047 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:25,170 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:16:25,171 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:16:25,171 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where `id` = ?, ARGS: ['001464725815745286c75fbb18946f09bd0a20e049d32f1000']
2016-06-01 19:16:25,172 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:16:25,172 - app.py:88 - server_info - set current user: 23456@qq.com
2016-06-01 19:16:25,172 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:28,956 - app.py:73 - server_info - Request: GET /signout
2016-06-01 19:16:28,956 - app.py:82 - server_info - check user: GET /signout
2016-06-01 19:16:28,956 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where `id` = ?, ARGS: ['001464725815745286c75fbb18946f09bd0a20e049d32f1000']
2016-06-01 19:16:28,957 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:16:28,957 - app.py:88 - server_info - set current user: 23456@qq.com
2016-06-01 19:16:28,958 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:28,958 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-01 19:16:28,958 - app.py:114 - server_info - response result = Found
2016-06-01 19:16:28,961 - app.py:73 - server_info - Request: GET /
2016-06-01 19:16:28,961 - app.py:82 - server_info - check user: GET /
2016-06-01 19:16:28,961 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:28,962 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:16:28,962 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:16:28,962 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:16:28,963 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:16:28,963 - app.py:114 - server_info - response result = {'blogs': [], '__template__': 'blogs.html', 'page': '1'}
2016-06-01 19:16:28,985 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:16:28,985 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:16:28,985 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:29,046 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:16:29,046 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:16:29,047 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:30,416 - app.py:73 - server_info - Request: GET /signin
2016-06-01 19:16:30,416 - app.py:82 - server_info - check user: GET /signin
2016-06-01 19:16:30,416 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:30,416 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:16:30,416 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 19:16:30,485 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:16:30,485 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:16:30,485 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:42,803 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:16:42,803 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:16:42,803 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:42,803 - coroweb.py:215 - server_info - call with args: {'passwd': '70e465fa181668e6bb21385e824b3c59a796cc48', 'email': 'jessicastam_love@163.com'}
2016-06-01 19:16:42,803 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where email=?, ARGS: ['jessicastam_love@163.com']
2016-06-01 19:16:42,805 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:16:42,805 - app.py:114 - server_info - response result = {'data': 'passwd', 'error': 'value:invalid', 'message': 'Invalid password.'}
2016-06-01 19:16:50,070 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:16:50,070 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:16:50,070 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:50,071 - coroweb.py:215 - server_info - call with args: {'passwd': '70e465fa181668e6bb21385e824b3c59a796cc48', 'email': 'jessicastam_love@163.com'}
2016-06-01 19:16:50,071 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where email=?, ARGS: ['jessicastam_love@163.com']
2016-06-01 19:16:50,072 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:16:50,072 - app.py:114 - server_info - response result = {'data': 'passwd', 'error': 'value:invalid', 'message': 'Invalid password.'}
2016-06-01 19:16:51,296 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:16:51,296 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:16:51,297 - app.py:111 - server_info - Response handler...
2016-06-01 19:16:51,297 - coroweb.py:215 - server_info - call with args: {'passwd': '70e465fa181668e6bb21385e824b3c59a796cc48', 'email': 'jessicastam_love@163.com'}
2016-06-01 19:16:51,297 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where email=?, ARGS: ['jessicastam_love@163.com']
2016-06-01 19:16:51,298 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:16:51,298 - app.py:114 - server_info - response result = {'data': 'passwd', 'error': 'value:invalid', 'message': 'Invalid password.'}
2016-06-01 19:19:33,236 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:19:33,237 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:19:33,237 - app.py:111 - server_info - Response handler...
2016-06-01 19:19:33,237 - coroweb.py:215 - server_info - call with args: {'passwd': 'f6d41a471deedc330f7d7b5afdcbe930b9859439', 'email': '12345@qq.com'}
2016-06-01 19:19:33,237 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where email=?, ARGS: ['12345@qq.com']
2016-06-01 19:19:33,238 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:19:33,238 - app.py:114 - server_info - response result = {'data': 'passwd', 'error': 'value:invalid', 'message': 'Invalid password.'}
2016-06-01 19:19:34,509 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:19:34,509 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:19:34,509 - app.py:111 - server_info - Response handler...
2016-06-01 19:19:34,510 - coroweb.py:215 - server_info - call with args: {'passwd': 'f6d41a471deedc330f7d7b5afdcbe930b9859439', 'email': '12345@qq.com'}
2016-06-01 19:19:34,510 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where email=?, ARGS: ['12345@qq.com']
2016-06-01 19:19:34,511 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:19:34,511 - app.py:114 - server_info - response result = {'data': 'passwd', 'error': 'value:invalid', 'message': 'Invalid password.'}
2016-06-01 19:20:38,596 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:20:38,597 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:20:38,597 - app.py:111 - server_info - Response handler...
2016-06-01 19:20:38,597 - coroweb.py:215 - server_info - call with args: {'passwd': 'e0b348891dcc1ecb5576b10e7d7987a3b0bda7fc', 'email': '23456@qq.com'}
2016-06-01 19:20:38,597 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where email=?, ARGS: ['23456@qq.com']
2016-06-01 19:20:38,599 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:20:38,599 - app.py:114 - server_info - response result = <Response OK not started>
2016-06-01 19:20:38,615 - app.py:73 - server_info - Request: GET /
2016-06-01 19:20:38,615 - app.py:82 - server_info - check user: GET /
2016-06-01 19:20:38,616 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where `id` = ?, ARGS: ['001464725815745286c75fbb18946f09bd0a20e049d32f1000']
2016-06-01 19:20:38,617 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:20:38,617 - app.py:88 - server_info - set current user: 23456@qq.com
2016-06-01 19:20:38,617 - app.py:111 - server_info - Response handler...
2016-06-01 19:20:38,617 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:20:38,617 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:20:38,618 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:20:38,618 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:20:38,618 - app.py:114 - server_info - response result = {'blogs': [], '__template__': 'blogs.html', 'page': '1'}
2016-06-01 19:20:38,652 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:20:38,652 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:20:38,652 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where `id` = ?, ARGS: ['001464725815745286c75fbb18946f09bd0a20e049d32f1000']
2016-06-01 19:20:38,653 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:20:38,654 - app.py:88 - server_info - set current user: 23456@qq.com
2016-06-01 19:20:38,654 - app.py:111 - server_info - Response handler...
2016-06-01 19:20:38,720 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:20:38,720 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:20:38,720 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where `id` = ?, ARGS: ['001464725815745286c75fbb18946f09bd0a20e049d32f1000']
2016-06-01 19:20:38,721 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:20:38,722 - app.py:88 - server_info - set current user: 23456@qq.com
2016-06-01 19:20:38,722 - app.py:111 - server_info - Response handler...
2016-06-01 19:20:47,304 - app.py:73 - server_info - Request: GET /signout
2016-06-01 19:20:47,304 - app.py:82 - server_info - check user: GET /signout
2016-06-01 19:20:47,305 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where `id` = ?, ARGS: ['001464725815745286c75fbb18946f09bd0a20e049d32f1000']
2016-06-01 19:20:47,306 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:20:47,306 - app.py:88 - server_info - set current user: 23456@qq.com
2016-06-01 19:20:47,306 - app.py:111 - server_info - Response handler...
2016-06-01 19:20:47,306 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-01 19:20:47,306 - app.py:114 - server_info - response result = Found
2016-06-01 19:20:47,309 - app.py:73 - server_info - Request: GET /
2016-06-01 19:20:47,309 - app.py:82 - server_info - check user: GET /
2016-06-01 19:20:47,309 - app.py:111 - server_info - Response handler...
2016-06-01 19:20:47,309 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:20:47,309 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:20:47,310 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:20:47,310 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:20:47,310 - app.py:114 - server_info - response result = {'blogs': [], '__template__': 'blogs.html', 'page': '1'}
2016-06-01 19:20:47,335 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:20:47,335 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:20:47,335 - app.py:111 - server_info - Response handler...
2016-06-01 19:20:47,380 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:20:47,380 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:20:47,380 - app.py:111 - server_info - Response handler...
2016-06-01 19:20:49,013 - app.py:73 - server_info - Request: GET /signin
2016-06-01 19:20:49,013 - app.py:82 - server_info - check user: GET /signin
2016-06-01 19:20:49,013 - app.py:111 - server_info - Response handler...
2016-06-01 19:20:49,013 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:20:49,013 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 19:20:49,077 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:20:49,077 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:20:49,077 - app.py:111 - server_info - Response handler...
2016-06-01 19:21:10,800 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:21:10,800 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:21:10,800 - app.py:111 - server_info - Response handler...
2016-06-01 19:21:10,801 - coroweb.py:215 - server_info - call with args: {'passwd': '70e465fa181668e6bb21385e824b3c59a796cc48', 'email': 'jessicastam_love@163.com'}
2016-06-01 19:21:10,801 - orm.py:23 - server_info - SQL: select `id`, `admin`,`name`,`created_at`,`image`,`passwd`,`email` from `users` where email=?, ARGS: ['jessicastam_love@163.com']
2016-06-01 19:21:10,802 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:21:10,802 - app.py:114 - server_info - response result = {'data': 'passwd', 'error': 'value:invalid', 'message': 'Invalid password.'}
2016-06-01 19:27:22,236 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 19:27:22,237 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 19:27:22,237 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 19:27:22,237 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,237 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,237 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,237 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 19:27:22,237 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,238 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 19:27:22,238 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 19:27:22,238 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 19:27:22,238 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 19:27:22,238 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,238 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 19:27:22,238 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,238 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,238 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,239 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 19:27:22,239 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 19:27:22,239 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 19:27:22,239 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,239 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 19:27:22,239 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,239 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,239 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 19:27:22,240 - orm.py:27 - server_info - create database connection pool...
2016-06-01 19:27:22,245 - app.py:42 - server_info - init jinja2....
2016-06-01 19:27:22,245 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 19:27:22,247 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 19:27:28,021 - app.py:73 - server_info - Request: GET /
2016-06-01 19:27:28,021 - app.py:82 - server_info - check user: GET /
2016-06-01 19:27:28,021 - app.py:111 - server_info - Response handler...
2016-06-01 19:27:28,021 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:27:28,021 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:27:28,022 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:27:28,023 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:27:28,023 - app.py:114 - server_info - response result = {'page': '1', '__template__': 'blogs.html', 'blogs': []}
2016-06-01 19:27:28,311 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:27:28,311 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:27:28,311 - app.py:111 - server_info - Response handler...
2016-06-01 19:27:28,428 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:27:28,428 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:27:28,429 - app.py:111 - server_info - Response handler...
2016-06-01 19:27:28,639 - app.py:73 - server_info - Request: GET /favicon.ico
2016-06-01 19:27:28,639 - app.py:82 - server_info - check user: GET /favicon.ico
2016-06-01 19:27:28,639 - app.py:111 - server_info - Response handler...
2016-06-01 19:27:30,423 - app.py:73 - server_info - Request: GET /signin
2016-06-01 19:27:30,424 - app.py:82 - server_info - check user: GET /signin
2016-06-01 19:27:30,424 - app.py:111 - server_info - Response handler...
2016-06-01 19:27:30,424 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:27:30,424 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 19:27:30,512 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:27:30,512 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:27:30,513 - app.py:111 - server_info - Response handler...
2016-06-01 19:27:39,292 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:27:39,292 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:27:39,292 - app.py:111 - server_info - Response handler...
2016-06-01 19:27:39,293 - coroweb.py:215 - server_info - call with args: {'passwd': '70e465fa181668e6bb21385e824b3c59a796cc48', 'email': 'jessicastam_love@163.com'}
2016-06-01 19:27:39,293 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`admin`,`passwd`,`email`,`image`,`name` from `users` where email=?, ARGS: ['jessicastam_love@163.com']
2016-06-01 19:27:39,294 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:27:39,294 - handlers.py:205 - server_info - user password: 3ebdbd55865a195a4b143b3afcdbae7e10060fde
2016-06-01 19:27:39,294 - handlers.py:206 - server_info - server password: 393d31813a68193ec9a59246b66759244bd46708
2016-06-01 19:27:39,295 - app.py:114 - server_info - response result = {'error': 'value:invalid', 'message': 'Invalid password.', 'data': 'passwd'}
2016-06-01 19:33:37,438 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 19:33:37,438 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,438 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,438 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,438 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 19:33:37,438 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,438 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 19:33:37,438 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 19:33:37,439 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 19:33:37,439 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,439 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,439 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,439 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 19:33:37,439 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,439 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 19:33:37,439 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 19:33:37,439 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 19:33:37,440 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 19:33:37,440 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,440 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,440 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 19:33:37,440 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,440 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 19:33:37,440 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 19:33:37,440 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 19:33:37,441 - orm.py:27 - server_info - create database connection pool...
2016-06-01 19:33:37,446 - app.py:42 - server_info - init jinja2....
2016-06-01 19:33:37,446 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 19:33:37,448 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 19:33:44,799 - app.py:73 - server_info - Request: GET /signin
2016-06-01 19:33:44,800 - app.py:82 - server_info - check user: GET /signin
2016-06-01 19:33:44,800 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:44,800 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:33:44,800 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 19:33:44,893 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 19:33:44,893 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 19:33:44,894 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:44,896 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 19:33:44,896 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 19:33:44,896 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:44,897 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 19:33:44,898 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 19:33:44,898 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:44,899 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 19:33:44,899 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 19:33:44,899 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:44,901 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 19:33:44,901 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 19:33:44,901 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:44,902 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 19:33:44,902 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 19:33:44,902 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:44,904 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 19:33:44,904 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 19:33:44,904 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:45,027 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:33:45,027 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:33:45,027 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:45,064 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 19:33:45,064 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 19:33:45,064 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:50,891 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:33:50,891 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:33:50,891 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:50,891 - coroweb.py:215 - server_info - call with args: {'passwd': '70e465fa181668e6bb21385e824b3c59a796cc48', 'email': 'jessicastam_love@163.com'}
2016-06-01 19:33:50,892 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where email=?, ARGS: ['jessicastam_love@163.com']
2016-06-01 19:33:50,893 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:33:50,893 - handlers.py:207 - server_info - user password: 3ebdbd55865a195a4b143b3afcdbae7e10060fde
2016-06-01 19:33:50,893 - handlers.py:208 - server_info - server password: 393d31813a68193ec9a59246b66759244bd46708
2016-06-01 19:33:50,893 - app.py:114 - server_info - response result = {'data': 'passwd', 'message': 'Invalid password.', 'error': 'value:invalid'}
2016-06-01 19:33:57,716 - app.py:73 - server_info - Request: GET /register
2016-06-01 19:33:57,717 - app.py:82 - server_info - check user: GET /register
2016-06-01 19:33:57,717 - app.py:111 - server_info - Response handler...
2016-06-01 19:33:57,717 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:33:57,717 - app.py:114 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 19:33:57,822 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:33:57,822 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:33:57,822 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:26,866 - app.py:73 - server_info - Request: POST /api/users
2016-06-01 19:34:26,866 - app.py:82 - server_info - check user: POST /api/users
2016-06-01 19:34:26,866 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:26,867 - coroweb.py:215 - server_info - call with args: {'passwd': '735fcf0d1ae7325c203cf422888f43f25db40876', 'name': 'Matt', 'email': '1@qq.com'}
2016-06-01 19:34:26,867 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where email=?, ARGS: ['1@qq.com']
2016-06-01 19:34:26,868 - orm.py:57 - server_info - rows returned: 0
2016-06-01 19:34:26,868 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 19:34:26,868 - orm.py:194 - server_info - using default value for created_at: 1464780866.868925
2016-06-01 19:34:26,869 - orm.py:23 - server_info - SQL: insert into `users` (`passwd`,`email`,`name`,`image`,`admin`,`created_at`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 19:34:26,872 - orm.py:72 - server_info - commit success!
2016-06-01 19:34:26,872 - app.py:114 - server_info - response result = <Response OK not started>
2016-06-01 19:34:26,882 - app.py:73 - server_info - Request: GET /
2016-06-01 19:34:26,882 - app.py:82 - server_info - check user: GET /
2016-06-01 19:34:26,882 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:34:26,883 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:26,883 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:34:26,883 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:26,883 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:34:26,883 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:34:26,884 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:26,884 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:34:26,884 - app.py:114 - server_info - response result = {'page': '1', 'blogs': [], '__template__': 'blogs.html'}
2016-06-01 19:34:26,939 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:34:26,939 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:34:26,940 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:34:26,941 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:26,941 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:34:26,941 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:27,015 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:27,015 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:27,016 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:34:27,017 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:27,017 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:34:27,017 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:30,733 - app.py:73 - server_info - Request: GET /signout
2016-06-01 19:34:30,733 - app.py:82 - server_info - check user: GET /signout
2016-06-01 19:34:30,733 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:34:30,734 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:30,734 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:34:30,735 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:30,735 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-01 19:34:30,735 - app.py:114 - server_info - response result = Found
2016-06-01 19:34:30,738 - app.py:73 - server_info - Request: GET /
2016-06-01 19:34:30,738 - app.py:82 - server_info - check user: GET /
2016-06-01 19:34:30,738 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:30,738 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:34:30,738 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:34:30,739 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:30,739 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:34:30,739 - app.py:114 - server_info - response result = {'page': '1', 'blogs': [], '__template__': 'blogs.html'}
2016-06-01 19:34:30,764 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:34:30,764 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:34:30,764 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:30,815 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:30,815 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:30,816 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:31,887 - app.py:73 - server_info - Request: GET /signin
2016-06-01 19:34:31,887 - app.py:82 - server_info - check user: GET /signin
2016-06-01 19:34:31,887 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:31,888 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:34:31,888 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 19:34:31,967 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:31,967 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:31,967 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:33,640 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:34:33,640 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:34:33,640 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:33,640 - coroweb.py:215 - server_info - call with args: {'passwd': '735fcf0d1ae7325c203cf422888f43f25db40876', 'email': '1@qq.com'}
2016-06-01 19:34:33,641 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where email=?, ARGS: ['1@qq.com']
2016-06-01 19:34:33,642 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:33,642 - handlers.py:207 - server_info - user password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 19:34:33,642 - handlers.py:208 - server_info - server password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 19:34:33,642 - app.py:114 - server_info - response result = <Response OK not started>
2016-06-01 19:34:33,652 - app.py:73 - server_info - Request: GET /
2016-06-01 19:34:33,653 - app.py:82 - server_info - check user: GET /
2016-06-01 19:34:33,653 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:34:33,654 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:33,654 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:34:33,654 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:33,654 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:34:33,654 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:34:33,655 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:33,656 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:34:33,656 - app.py:114 - server_info - response result = {'page': '1', 'blogs': [], '__template__': 'blogs.html'}
2016-06-01 19:34:33,677 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:34:33,677 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:34:33,677 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:34:33,678 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:33,678 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:34:33,678 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:33,765 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:33,766 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:33,766 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:34:33,767 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:33,768 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:34:33,768 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:35,788 - app.py:73 - server_info - Request: GET /signout
2016-06-01 19:34:35,788 - app.py:82 - server_info - check user: GET /signout
2016-06-01 19:34:35,788 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:34:35,789 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:35,790 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:34:35,790 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:35,790 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-01 19:34:35,790 - app.py:114 - server_info - response result = Found
2016-06-01 19:34:35,794 - app.py:73 - server_info - Request: GET /
2016-06-01 19:34:35,794 - app.py:82 - server_info - check user: GET /
2016-06-01 19:34:35,794 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:35,794 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:34:35,795 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:34:35,795 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:35,796 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:34:35,796 - app.py:114 - server_info - response result = {'page': '1', 'blogs': [], '__template__': 'blogs.html'}
2016-06-01 19:34:35,815 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:34:35,815 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:34:35,815 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:35,889 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:35,889 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:35,890 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:52,442 - app.py:73 - server_info - Request: GET /signin
2016-06-01 19:34:52,442 - app.py:82 - server_info - check user: GET /signin
2016-06-01 19:34:52,442 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:52,442 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:34:52,442 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 19:34:52,542 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:52,542 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:52,543 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:53,743 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:34:53,743 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:34:53,744 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:53,744 - coroweb.py:215 - server_info - call with args: {'passwd': '735fcf0d1ae7325c203cf422888f43f25db40876', 'email': '1@qq.com'}
2016-06-01 19:34:53,744 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where email=?, ARGS: ['1@qq.com']
2016-06-01 19:34:53,745 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:53,746 - handlers.py:207 - server_info - user password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 19:34:53,746 - handlers.py:208 - server_info - server password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 19:34:53,746 - app.py:114 - server_info - response result = <Response OK not started>
2016-06-01 19:34:53,757 - app.py:73 - server_info - Request: GET /
2016-06-01 19:34:53,757 - app.py:82 - server_info - check user: GET /
2016-06-01 19:34:53,757 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:34:53,758 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:53,759 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:34:53,759 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:53,759 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:34:53,759 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:34:53,760 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:53,760 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:34:53,760 - app.py:114 - server_info - response result = {'page': '1', 'blogs': [], '__template__': 'blogs.html'}
2016-06-01 19:34:53,784 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:34:53,784 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:34:53,784 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:34:53,785 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:53,786 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:34:53,786 - app.py:111 - server_info - Response handler...
2016-06-01 19:34:53,838 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:53,838 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:34:53,838 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:34:53,839 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:34:53,839 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:34:53,839 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:04,705 - app.py:73 - server_info - Request: GET /signout
2016-06-01 19:37:04,705 - app.py:82 - server_info - check user: GET /signout
2016-06-01 19:37:04,705 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:37:04,706 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:37:04,706 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:37:04,706 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:04,706 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-01 19:37:04,707 - app.py:114 - server_info - response result = Found
2016-06-01 19:37:04,709 - app.py:73 - server_info - Request: GET /
2016-06-01 19:37:04,709 - app.py:82 - server_info - check user: GET /
2016-06-01 19:37:04,710 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:04,710 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:37:04,710 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:37:04,710 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:37:04,711 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:37:04,711 - app.py:114 - server_info - response result = {'page': '1', 'blogs': [], '__template__': 'blogs.html'}
2016-06-01 19:37:04,751 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:37:04,751 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:37:04,752 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:04,794 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:37:04,794 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:37:04,794 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:06,032 - app.py:73 - server_info - Request: GET /signin
2016-06-01 19:37:06,032 - app.py:82 - server_info - check user: GET /signin
2016-06-01 19:37:06,032 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:06,032 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:37:06,032 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 19:37:06,110 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:37:06,110 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:37:06,110 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:07,347 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:37:07,348 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:37:07,348 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:07,348 - coroweb.py:215 - server_info - call with args: {'passwd': '735fcf0d1ae7325c203cf422888f43f25db40876', 'email': '1@qq.com'}
2016-06-01 19:37:07,349 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where email=?, ARGS: ['1@qq.com']
2016-06-01 19:37:07,350 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:37:07,350 - handlers.py:207 - server_info - user password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 19:37:07,350 - handlers.py:208 - server_info - server password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 19:37:07,351 - app.py:114 - server_info - response result = <Response OK not started>
2016-06-01 19:37:07,362 - app.py:73 - server_info - Request: GET /
2016-06-01 19:37:07,362 - app.py:82 - server_info - check user: GET /
2016-06-01 19:37:07,363 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:37:07,363 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:37:07,364 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:37:07,364 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:07,364 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:37:07,364 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:37:07,365 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:37:07,365 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:37:07,365 - app.py:114 - server_info - response result = {'page': '1', 'blogs': [], '__template__': 'blogs.html'}
2016-06-01 19:37:07,385 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:37:07,385 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:37:07,385 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:37:07,386 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:37:07,387 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:37:07,387 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:07,445 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:37:07,445 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:37:07,445 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:37:07,446 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:37:07,447 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:37:07,447 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:08,871 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-01 19:37:08,871 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-01 19:37:08,871 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:37:08,872 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:37:08,873 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:37:08,873 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:11,200 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 19:37:11,200 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 19:37:11,200 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:37:11,201 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:37:11,201 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:37:11,202 - app.py:111 - server_info - Response handler...
2016-06-01 19:37:13,343 - app.py:73 - server_info - Request: GET /manage/users
2016-06-01 19:37:13,343 - app.py:82 - server_info - check user: GET /manage/users
2016-06-01 19:37:13,343 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:37:13,344 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:37:13,344 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:37:13,344 - app.py:111 - server_info - Response handler...
2016-06-01 19:46:43,721 - app.py:73 - server_info - Request: GET /signout
2016-06-01 19:46:43,721 - app.py:82 - server_info - check user: GET /signout
2016-06-01 19:46:43,721 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:46:43,722 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:46:43,722 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:46:43,723 - app.py:111 - server_info - Response handler...
2016-06-01 19:46:43,723 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-01 19:46:43,723 - app.py:114 - server_info - response result = Found
2016-06-01 19:46:43,726 - app.py:73 - server_info - Request: GET /
2016-06-01 19:46:43,726 - app.py:82 - server_info - check user: GET /
2016-06-01 19:46:43,726 - app.py:111 - server_info - Response handler...
2016-06-01 19:46:43,726 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:46:43,726 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:46:43,727 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:46:43,727 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:46:43,727 - app.py:114 - server_info - response result = {'page': '1', 'blogs': [], '__template__': 'blogs.html'}
2016-06-01 19:46:43,767 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:46:43,767 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:46:43,768 - app.py:111 - server_info - Response handler...
2016-06-01 19:46:43,816 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:46:43,816 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:46:43,817 - app.py:111 - server_info - Response handler...
2016-06-01 19:46:44,801 - app.py:73 - server_info - Request: GET /register
2016-06-01 19:46:44,801 - app.py:82 - server_info - check user: GET /register
2016-06-01 19:46:44,801 - app.py:111 - server_info - Response handler...
2016-06-01 19:46:44,801 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:46:44,801 - app.py:114 - server_info - response result = {'__template__': 'register.html'}
2016-06-01 19:46:44,891 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:46:44,892 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:46:44,892 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:06,952 - app.py:73 - server_info - Request: POST /api/users
2016-06-01 19:47:06,952 - app.py:82 - server_info - check user: POST /api/users
2016-06-01 19:47:06,952 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:06,953 - coroweb.py:215 - server_info - call with args: {'passwd': '687b72d3c1423998b8d42779376f40d5e495f92a', 'name': 'kHRYSTAL', 'email': '723526676@qq.com'}
2016-06-01 19:47:06,953 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where email=?, ARGS: ['723526676@qq.com']
2016-06-01 19:47:06,954 - orm.py:57 - server_info - rows returned: 0
2016-06-01 19:47:06,955 - orm.py:194 - server_info - using default value for admin: False
2016-06-01 19:47:06,955 - orm.py:194 - server_info - using default value for created_at: 1464781626.955426
2016-06-01 19:47:06,955 - orm.py:23 - server_info - SQL: insert into `users` (`passwd`,`email`,`name`,`image`,`admin`,`created_at`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 19:47:06,958 - orm.py:72 - server_info - commit success!
2016-06-01 19:47:06,959 - app.py:114 - server_info - response result = <Response OK not started>
2016-06-01 19:47:06,974 - app.py:73 - server_info - Request: GET /
2016-06-01 19:47:06,974 - app.py:82 - server_info - check user: GET /
2016-06-01 19:47:06,974 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-01 19:47:06,975 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:06,975 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-01 19:47:06,975 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:06,975 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:47:06,976 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:47:06,976 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:06,976 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:47:06,976 - app.py:114 - server_info - response result = {'page': '1', 'blogs': [], '__template__': 'blogs.html'}
2016-06-01 19:47:07,013 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:47:07,013 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:47:07,013 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-01 19:47:07,015 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:07,016 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-01 19:47:07,016 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:07,067 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:47:07,067 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:47:07,067 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-01 19:47:07,068 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:07,069 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-01 19:47:07,069 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:30,232 - app.py:73 - server_info - Request: GET /manage/blogs/create
2016-06-01 19:47:30,232 - app.py:82 - server_info - check user: GET /manage/blogs/create
2016-06-01 19:47:30,232 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-01 19:47:30,233 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:30,234 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-01 19:47:30,237 - app.py:73 - server_info - Request: GET /signin
2016-06-01 19:47:30,237 - app.py:82 - server_info - check user: GET /signin
2016-06-01 19:47:30,237 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-01 19:47:30,238 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:30,238 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-01 19:47:30,238 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:30,238 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:47:30,238 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 19:47:30,346 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:47:30,346 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:47:30,346 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-01 19:47:30,347 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:30,348 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-01 19:47:30,348 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:38,123 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 19:47:38,123 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 19:47:38,123 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-01 19:47:38,124 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:38,125 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-01 19:47:38,125 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:38,125 - coroweb.py:215 - server_info - call with args: {'passwd': '735fcf0d1ae7325c203cf422888f43f25db40876', 'email': '1@qq.com'}
2016-06-01 19:47:38,125 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where email=?, ARGS: ['1@qq.com']
2016-06-01 19:47:38,126 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:38,126 - handlers.py:207 - server_info - user password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 19:47:38,126 - handlers.py:208 - server_info - server password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 19:47:38,127 - app.py:114 - server_info - response result = <Response OK not started>
2016-06-01 19:47:38,137 - app.py:73 - server_info - Request: GET /
2016-06-01 19:47:38,138 - app.py:82 - server_info - check user: GET /
2016-06-01 19:47:38,138 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:47:38,139 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:38,139 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:47:38,139 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:38,140 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:47:38,140 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:47:38,140 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:38,140 - handlers.py:145 - server_info - the type of num is: <class 'int'>
2016-06-01 19:47:38,141 - app.py:114 - server_info - response result = {'page': '1', 'blogs': [], '__template__': 'blogs.html'}
2016-06-01 19:47:38,166 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:47:38,166 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:47:38,166 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:47:38,168 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:38,169 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:47:38,169 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:38,264 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:47:38,264 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:47:38,264 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:47:38,265 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:38,266 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:47:38,266 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:44,252 - app.py:73 - server_info - Request: GET /manage/blogs/create
2016-06-01 19:47:44,253 - app.py:82 - server_info - check user: GET /manage/blogs/create
2016-06-01 19:47:44,253 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:47:44,254 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:44,254 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:47:44,254 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:44,254 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:47:44,254 - app.py:114 - server_info - response result = {'id': '', 'action': '/api/blogs', '__template__': 'manage_blog_edit.html'}
2016-06-01 19:47:44,326 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:47:44,326 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:47:44,326 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:47:44,327 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:44,328 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:47:44,328 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:57,049 - app.py:73 - server_info - Request: POST /api/blogs
2016-06-01 19:47:57,049 - app.py:82 - server_info - check user: POST /api/blogs
2016-06-01 19:47:57,049 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:47:57,050 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:57,051 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:47:57,051 - app.py:111 - server_info - Response handler...
2016-06-01 19:47:57,051 - coroweb.py:215 - server_info - call with args: {'summary': '测试', 'request': <Request POST /api/blogs >, 'name': '测试', 'content': '测试'}
2016-06-01 19:47:57,051 - orm.py:194 - server_info - using default value for created_at: 1464781677.051723
2016-06-01 19:47:57,051 - orm.py:194 - server_info - using default value for id: 0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-01 19:47:57,052 - orm.py:23 - server_info - SQL: insert into `blogs` (`user_id`,`name`,`user_name`,`content`,`summary`,`user_image`,`created_at`, `id`) values (?, ?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 19:47:57,053 - orm.py:72 - server_info - commit success!
2016-06-01 19:47:57,053 - app.py:114 - server_info - response result = {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '测试', 'summary': '测试', 'created_at': 1464781677.051723, 'user_name': 'Matt', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'name': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}
2016-06-01 19:47:57,064 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 19:47:57,064 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 19:47:57,064 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:47:57,065 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:47:57,066 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:47:57,066 - app.py:111 - server_info - Response handler...
2016-06-01 19:48:03,340 - app.py:73 - server_info - Request: GET /
2016-06-01 19:48:03,340 - app.py:82 - server_info - check user: GET /
2016-06-01 19:48:03,340 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:48:03,341 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:48:03,342 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:48:03,342 - app.py:111 - server_info - Response handler...
2016-06-01 19:48:03,342 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:48:03,342 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:48:03,343 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:48:03,343 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`summary`,`user_image`,`created_at` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-01 19:48:03,344 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:48:03,344 - app.py:114 - server_info - response result = {'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, 'blogs': [{'name': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '测试', 'summary': '测试', 'created_at': 1464781677.05172, 'user_name': 'Matt', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000'}], '__template__': 'blogs.html'}
2016-06-01 19:48:03,370 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:48:03,371 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:48:03,371 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:48:03,372 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:48:03,372 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:48:03,372 - app.py:111 - server_info - Response handler...
2016-06-01 19:48:03,428 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:48:03,428 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:48:03,428 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`name`,`image`,`admin`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:48:03,429 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:48:03,430 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:48:03,430 - app.py:111 - server_info - Response handler...
2016-06-01 19:54:40,840 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 19:54:40,840 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,840 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 19:54:40,841 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,841 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 19:54:40,841 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,841 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,841 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 19:54:40,841 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 19:54:40,841 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 19:54:40,841 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 19:54:40,842 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,842 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,842 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 19:54:40,842 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 19:54:40,842 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,842 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,842 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 19:54:40,842 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 19:54:40,843 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 19:54:40,843 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 19:54:40,843 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,843 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,843 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,843 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 19:54:40,844 - orm.py:27 - server_info - create database connection pool...
2016-06-01 19:54:40,850 - app.py:42 - server_info - init jinja2....
2016-06-01 19:54:40,850 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 19:54:40,852 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 19:54:43,226 - app.py:73 - server_info - Request: GET /
2016-06-01 19:54:43,226 - app.py:82 - server_info - check user: GET /
2016-06-01 19:54:43,226 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:54:43,227 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:43,227 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:54:43,228 - app.py:111 - server_info - Response handler...
2016-06-01 19:54:43,228 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:54:43,228 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:54:43,228 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:43,229 - orm.py:23 - server_info - SQL: select `id`, `content`,`user_image`,`user_name`,`name`,`created_at`,`summary`,`user_id` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-01 19:54:43,229 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:43,230 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试', 'user_name': 'Matt', 'name': '测试', 'created_at': 1464781677.05172, 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, '__template__': 'blogs.html'}
2016-06-01 19:54:43,464 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:54:43,464 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:54:43,464 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:54:43,465 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:43,466 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:54:43,466 - app.py:111 - server_info - Response handler...
2016-06-01 19:54:43,576 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:54:43,576 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:54:43,576 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:54:43,577 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:43,578 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:54:43,578 - app.py:111 - server_info - Response handler...
2016-06-01 19:54:43,744 - app.py:73 - server_info - Request: GET /favicon.ico
2016-06-01 19:54:43,744 - app.py:82 - server_info - check user: GET /favicon.ico
2016-06-01 19:54:43,744 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:54:43,745 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:43,745 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:54:43,745 - app.py:111 - server_info - Response handler...
2016-06-01 19:54:45,925 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 19:54:45,925 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 19:54:45,925 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:54:45,926 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:45,927 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:54:45,927 - app.py:111 - server_info - Response handler...
2016-06-01 19:54:45,927 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:54:45,927 - app.py:114 - server_info - response result = {'__template__': 'manage_blogs.html', 'page_index': 1}
2016-06-01 19:54:46,028 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:54:46,028 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:54:46,028 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:54:46,029 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:46,029 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:54:46,029 - app.py:111 - server_info - Response handler...
2016-06-01 19:54:46,048 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 19:54:46,049 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 19:54:46,049 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:54:46,050 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:46,050 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:54:46,051 - app.py:111 - server_info - Response handler...
2016-06-01 19:54:52,515 - app.py:73 - server_info - Request: GET /manage/users
2016-06-01 19:54:52,516 - app.py:82 - server_info - check user: GET /manage/users
2016-06-01 19:54:52,516 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:54:52,517 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:52,517 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:54:52,517 - app.py:111 - server_info - Response handler...
2016-06-01 19:54:56,125 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 19:54:56,125 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 19:54:56,126 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:54:56,126 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:56,127 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:54:56,127 - app.py:111 - server_info - Response handler...
2016-06-01 19:54:56,127 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:54:56,127 - app.py:114 - server_info - response result = {'__template__': 'manage_blogs.html', 'page_index': 1}
2016-06-01 19:54:56,197 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:54:56,198 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:54:56,198 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:54:56,199 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 19:54:56,199 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 19:54:56,199 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:54:56,200 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:56,202 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:54:56,203 - app.py:111 - server_info - Response handler...
2016-06-01 19:54:56,204 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:54:56,204 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:54:56,204 - app.py:111 - server_info - Response handler...
2016-06-01 19:55:00,310 - app.py:73 - server_info - Request: GET /
2016-06-01 19:55:00,310 - app.py:82 - server_info - check user: GET /
2016-06-01 19:55:00,310 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:55:00,311 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:55:00,312 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:55:00,312 - app.py:111 - server_info - Response handler...
2016-06-01 19:55:00,312 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:55:00,312 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 19:55:00,313 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:55:00,313 - orm.py:23 - server_info - SQL: select `id`, `content`,`user_image`,`user_name`,`name`,`created_at`,`summary`,`user_id` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-01 19:55:00,314 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:55:00,314 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试', 'user_name': 'Matt', 'name': '测试', 'created_at': 1464781677.05172, 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, '__template__': 'blogs.html'}
2016-06-01 19:55:00,334 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:55:00,334 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:55:00,334 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:55:00,335 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:55:00,335 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:55:00,335 - app.py:111 - server_info - Response handler...
2016-06-01 19:55:00,398 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:55:00,398 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:55:00,398 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:55:00,399 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:55:00,399 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:55:00,400 - app.py:111 - server_info - Response handler...
2016-06-01 19:55:01,279 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 19:55:01,280 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 19:55:01,280 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:55:01,281 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:55:01,281 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:55:01,281 - app.py:111 - server_info - Response handler...
2016-06-01 19:55:01,281 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:55:01,281 - app.py:114 - server_info - response result = {'__template__': 'manage_blogs.html', 'page_index': 1}
2016-06-01 19:55:01,380 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:55:01,381 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:55:01,381 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:55:01,383 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 19:55:01,383 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 19:55:01,383 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:55:01,385 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:55:01,386 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:55:01,386 - app.py:111 - server_info - Response handler...
2016-06-01 19:55:01,389 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:55:01,389 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:55:01,390 - app.py:111 - server_info - Response handler...
2016-06-01 19:57:57,590 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 19:57:57,590 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 19:57:57,590 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:57:57,591 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:57:57,592 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:57:57,592 - app.py:111 - server_info - Response handler...
2016-06-01 19:57:57,592 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 19:57:57,592 - app.py:114 - server_info - response result = {'__template__': 'manage_blogs.html', 'page_index': 1}
2016-06-01 19:57:57,639 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 19:57:57,639 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 19:57:57,639 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:57:57,640 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 19:57:57,640 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 19:57:57,641 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:57:57,641 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 19:57:57,641 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 19:57:57,642 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:57:57,643 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 19:57:57,643 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 19:57:57,643 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:57:57,644 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 19:57:57,644 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 19:57:57,644 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:57:57,645 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:57:57,646 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:57:57,647 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 19:57:57,647 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 19:57:57,647 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:57:57,649 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:57:57,649 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:57:57,649 - app.py:111 - server_info - Response handler...
2016-06-01 19:57:57,651 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:57:57,651 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:57:57,651 - app.py:111 - server_info - Response handler...
2016-06-01 19:57:57,653 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:57:57,654 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 19:57:57,654 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 19:57:57,654 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:57:57,654 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:57:57,654 - app.py:111 - server_info - Response handler...
2016-06-01 19:57:57,655 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:57:57,656 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:57:57,656 - app.py:111 - server_info - Response handler...
2016-06-01 19:57:57,657 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:57:57,657 - app.py:111 - server_info - Response handler...
2016-06-01 19:57:57,658 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:57:57,658 - app.py:111 - server_info - Response handler...
2016-06-01 19:57:57,659 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:57:57,660 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:57:57,660 - app.py:111 - server_info - Response handler...
2016-06-01 19:57:57,700 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:57:57,700 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 19:57:57,700 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:57:57,701 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:57:57,701 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:57:57,701 - app.py:111 - server_info - Response handler...
2016-06-01 19:57:57,716 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 19:57:57,716 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 19:57:57,717 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:57:57,718 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:57:57,718 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:57:57,718 - app.py:111 - server_info - Response handler...
2016-06-01 19:57:57,802 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 19:57:57,802 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 19:57:57,802 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`name`,`created_at`,`email`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 19:57:57,803 - orm.py:57 - server_info - rows returned: 1
2016-06-01 19:57:57,804 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 19:57:57,804 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:07,317 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 20:06:07,317 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 20:06:07,317 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,317 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,317 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 20:06:07,318 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,318 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 20:06:07,318 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,318 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 20:06:07,318 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,318 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,318 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,318 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,318 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 20:06:07,318 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 20:06:07,318 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 20:06:07,319 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 20:06:07,319 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 20:06:07,319 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,319 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,319 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,319 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 20:06:07,319 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 20:06:07,319 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 20:06:07,319 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 20:06:07,320 - orm.py:27 - server_info - create database connection pool...
2016-06-01 20:06:07,325 - app.py:42 - server_info - init jinja2....
2016-06-01 20:06:07,325 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 20:06:07,328 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 20:06:12,461 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:06:12,462 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:06:12,462 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:12,463 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,463 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:12,463 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:12,463 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:06:12,463 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:06:12,519 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:06:12,519 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:06:12,519 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:12,520 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:06:12,520 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:06:12,521 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:12,521 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:06:12,522 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:06:12,522 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:12,522 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:06:12,522 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:06:12,523 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:12,523 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,524 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:06:12,524 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:06:12,525 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:12,525 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:06:12,526 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:06:12,526 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:12,528 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,530 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,531 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:12,531 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:12,533 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,534 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,535 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:12,535 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:12,536 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:12,536 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:12,537 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:12,537 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:12,538 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:12,538 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:12,540 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,540 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:06:12,541 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:06:12,541 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:12,541 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:12,541 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:12,542 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,543 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:12,543 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:12,580 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:06:12,581 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:06:12,581 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:12,582 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,582 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:12,582 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:12,599 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:06:12,599 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:06:12,599 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:12,600 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,600 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:12,601 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:12,601 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:06:12,601 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:06:12,601 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,602 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-01 20:06:12,602 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,603 - app.py:114 - server_info - response result = {'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:06:12,681 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:06:12,681 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:06:12,681 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:12,682 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:12,683 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:12,683 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:16,581 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:06:16,581 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:06:16,582 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:16,583 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:16,583 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:16,583 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:16,583 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:06:16,583 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:06:16,603 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:06:16,603 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:06:16,604 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:16,604 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:16,605 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:16,605 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:16,686 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:06:16,687 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:06:16,687 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:16,688 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:06:16,688 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:06:16,688 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:16,689 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:16,689 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:16,690 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:16,691 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:16,691 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:16,691 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:16,691 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:06:16,691 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:06:16,692 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:16,692 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-01 20:06:16,693 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:16,693 - app.py:114 - server_info - response result = {'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:06:18,879 - app.py:73 - server_info - Request: GET /manage/users
2016-06-01 20:06:18,879 - app.py:82 - server_info - check user: GET /manage/users
2016-06-01 20:06:18,879 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:18,880 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:18,880 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:18,880 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:21,342 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-01 20:06:21,342 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-01 20:06:21,342 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:21,343 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:21,343 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:21,344 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:27,109 - app.py:73 - server_info - Request: GET /manage/users
2016-06-01 20:06:27,109 - app.py:82 - server_info - check user: GET /manage/users
2016-06-01 20:06:27,110 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:27,111 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:27,111 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:27,111 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:29,697 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-01 20:06:29,697 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-01 20:06:29,698 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:29,699 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:29,699 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:29,699 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,378 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:06:41,378 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:06:41,378 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,379 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,379 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,379 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,379 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:06:41,379 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:06:41,413 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:06:41,413 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:06:41,413 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,414 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:06:41,414 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:06:41,414 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,415 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:06:41,415 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:06:41,415 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,415 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:06:41,416 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:06:41,416 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,417 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 20:06:41,417 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 20:06:41,417 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,418 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:06:41,418 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:06:41,418 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,418 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,419 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,419 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,421 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,422 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,423 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,423 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,424 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,424 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,425 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,425 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,425 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,426 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,426 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,426 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,427 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,428 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:06:41,428 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:06:41,428 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,428 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,429 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,430 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 20:06:41,430 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-01 20:06:41,430 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,430 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 20:06:41,431 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 20:06:41,431 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,431 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,432 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,432 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,432 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,434 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,435 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,435 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,436 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,436 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,477 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:06:41,477 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:06:41,478 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,479 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,479 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,479 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,481 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:06:41,481 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:06:41,482 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,483 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,483 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,483 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:41,483 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:06:41,483 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:06:41,484 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,484 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-01 20:06:41,485 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,485 - app.py:114 - server_info - response result = {'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:06:41,535 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:06:41,535 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:06:41,535 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:41,536 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:41,536 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:41,537 - app.py:111 - server_info - Response handler...
2016-06-01 20:06:56,252 - app.py:73 - server_info - Request: GET /manage/blogs/edit
2016-06-01 20:06:56,252 - app.py:82 - server_info - check user: GET /manage/blogs/edit
2016-06-01 20:06:56,252 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:06:56,253 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:06:56,253 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:06:56,254 - app.py:111 - server_info - Response handler...
2016-06-01 20:07:02,074 - app.py:73 - server_info - Request: GET /user/00146478086686801a78cf9479442dc8af2087792f4e56d000
2016-06-01 20:07:02,074 - app.py:82 - server_info - check user: GET /user/00146478086686801a78cf9479442dc8af2087792f4e56d000
2016-06-01 20:07:02,075 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:07:02,075 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:07:02,076 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:07:02,076 - app.py:111 - server_info - Response handler...
2016-06-01 20:07:05,730 - app.py:73 - server_info - Request: GET /manage/blogs/create
2016-06-01 20:07:05,731 - app.py:82 - server_info - check user: GET /manage/blogs/create
2016-06-01 20:07:05,731 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:07:05,732 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:07:05,732 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:07:05,732 - app.py:111 - server_info - Response handler...
2016-06-01 20:07:05,732 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:07:05,732 - app.py:114 - server_info - response result = {'action': '/api/blogs', 'id': '', '__template__': 'manage_blog_edit.html'}
2016-06-01 20:07:05,818 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:07:05,818 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:07:05,818 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:07:05,819 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:07:05,819 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:07:05,819 - app.py:111 - server_info - Response handler...
2016-06-01 20:07:16,982 - app.py:73 - server_info - Request: POST /api/blogs
2016-06-01 20:07:16,982 - app.py:82 - server_info - check user: POST /api/blogs
2016-06-01 20:07:16,982 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:07:16,984 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:07:16,984 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:07:16,984 - app.py:111 - server_info - Response handler...
2016-06-01 20:07:16,984 - coroweb.py:215 - server_info - call with args: {'request': <Request POST /api/blogs >, 'content': '测试2', 'name': '测试2', 'summary': '测试2'}
2016-06-01 20:07:16,984 - orm.py:194 - server_info - using default value for created_at: 1464782836.984957
2016-06-01 20:07:16,985 - orm.py:194 - server_info - using default value for id: 00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-01 20:07:16,985 - orm.py:23 - server_info - SQL: insert into `blogs` (`user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image`, `id`) values (?, ?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-01 20:07:16,986 - orm.py:72 - server_info - commit success!
2016-06-01 20:07:16,986 - app.py:114 - server_info - response result = {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'summary': '测试2', 'user_name': 'Matt', 'created_at': 1464782836.984957, 'name': '测试2'}
2016-06-01 20:07:17,002 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:07:17,002 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:07:17,002 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:07:17,003 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:07:17,004 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:07:17,004 - app.py:111 - server_info - Response handler...
2016-06-01 20:07:17,004 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:07:17,004 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:07:17,085 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:07:17,085 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:07:17,086 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:07:17,086 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:07:17,086 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:07:17,087 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:07:17,087 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:07:17,088 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:07:17,088 - app.py:111 - server_info - Response handler...
2016-06-01 20:07:17,089 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:07:17,090 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:07:17,090 - app.py:111 - server_info - Response handler...
2016-06-01 20:07:17,090 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:07:17,090 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:07:17,090 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:07:17,091 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:07:17,092 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:07:17,092 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:07:22,195 - app.py:73 - server_info - Request: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/delete
2016-06-01 20:07:22,195 - app.py:82 - server_info - check user: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/delete
2016-06-01 20:07:22,195 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:07:22,196 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:07:22,196 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:07:22,196 - app.py:111 - server_info - Response handler...
2016-06-01 20:07:27,520 - app.py:73 - server_info - Request: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/delete
2016-06-01 20:07:27,521 - app.py:82 - server_info - check user: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/delete
2016-06-01 20:07:27,521 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:07:27,522 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:07:27,522 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:07:27,522 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:12,398 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:10:12,398 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:10:12,398 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:12,399 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,399 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:12,400 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:12,400 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:10:12,400 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:10:12,444 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:10:12,444 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:10:12,444 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:12,445 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:10:12,445 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:10:12,446 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:12,447 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:10:12,447 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:10:12,447 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:12,448 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,449 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:10:12,449 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:10:12,449 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:12,450 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,450 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:10:12,451 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:10:12,451 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:12,452 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,452 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:12,452 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:12,453 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:12,453 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:12,455 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:10:12,455 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:10:12,455 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:12,456 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,457 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:12,457 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:12,458 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,459 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:12,459 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:12,460 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:10:12,460 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:10:12,461 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:12,461 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,462 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:12,462 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:12,463 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:12,463 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:12,465 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,465 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:12,466 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:12,504 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:12,504 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:12,504 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:12,505 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,505 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:12,506 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:12,520 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:10:12,520 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:10:12,520 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:12,521 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,521 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:12,521 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:12,521 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:10:12,522 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:10:12,522 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,522 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:10:12,523 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:10:12,523 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:10:12,605 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:10:12,605 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:10:12,606 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:12,607 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:12,607 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:12,607 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:14,527 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:10:14,527 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:10:14,528 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:14,529 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,529 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:14,529 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:14,529 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:10:14,529 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:10:14,555 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:10:14,555 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:10:14,555 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:14,556 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:10:14,556 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:10:14,556 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:14,557 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:10:14,557 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:10:14,557 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:14,558 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:10:14,558 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:10:14,558 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:14,558 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:10:14,559 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:10:14,559 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:14,560 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:10:14,560 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:10:14,560 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:14,561 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,561 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,562 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,562 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,565 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:14,565 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:14,566 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:14,566 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:14,567 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:14,567 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:14,569 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,569 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,569 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:14,570 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:14,570 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:10:14,571 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:10:14,571 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:14,571 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:14,572 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:14,572 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:14,572 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:14,573 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,574 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:14,574 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:14,613 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:14,614 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:14,614 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:14,615 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,615 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:14,615 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:14,630 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:10:14,630 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:10:14,630 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:14,631 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,631 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:14,631 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:14,632 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:10:14,632 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:10:14,632 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,632 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:10:14,633 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:10:14,634 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:10:14,717 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:10:14,717 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:10:14,717 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:14,719 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:14,719 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:14,719 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:16,411 - app.py:73 - server_info - Request: GET /
2016-06-01 20:10:16,411 - app.py:82 - server_info - check user: GET /
2016-06-01 20:10:16,411 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:16,412 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:16,413 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:16,413 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:16,413 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:10:16,413 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:10:16,414 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:16,414 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:10:16,415 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:10:16,415 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}], '__template__': 'blogs.html'}
2016-06-01 20:10:16,438 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:10:16,438 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:10:16,439 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:16,439 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:16,440 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:16,440 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:16,531 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:16,532 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:16,532 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:16,533 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:16,534 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:16,534 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:18,261 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:10:18,261 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:10:18,261 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:18,262 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:18,262 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:18,262 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:18,262 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:10:18,262 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:10:18,283 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:10:18,283 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:10:18,284 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:18,285 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:18,285 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:18,285 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:18,367 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:18,368 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:18,368 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:18,369 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:10:18,369 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:10:18,369 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:18,370 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:18,370 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:18,371 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:18,372 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:18,372 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:18,372 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:18,372 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:10:18,372 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:10:18,373 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:18,373 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:10:18,374 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:10:18,374 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:10:20,092 - app.py:73 - server_info - Request: GET /manage/users
2016-06-01 20:10:20,092 - app.py:82 - server_info - check user: GET /manage/users
2016-06-01 20:10:20,092 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:20,093 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:20,094 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:20,094 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:24,291 - app.py:73 - server_info - Request: GET /signout
2016-06-01 20:10:24,292 - app.py:82 - server_info - check user: GET /signout
2016-06-01 20:10:24,292 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:24,293 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:24,293 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:24,293 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:24,293 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-01 20:10:24,293 - app.py:114 - server_info - response result = Found
2016-06-01 20:10:24,296 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:10:24,296 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:10:24,299 - app.py:73 - server_info - Request: GET /signin
2016-06-01 20:10:24,299 - app.py:82 - server_info - check user: GET /signin
2016-06-01 20:10:24,299 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:24,299 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:10:24,300 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 20:10:24,373 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:24,373 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:24,373 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:25,697 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 20:10:25,697 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 20:10:25,697 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:25,698 - coroweb.py:215 - server_info - call with args: {'email': '1@qq.com', 'passwd': '735fcf0d1ae7325c203cf422888f43f25db40876'}
2016-06-01 20:10:25,698 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where email=?, ARGS: ['1@qq.com']
2016-06-01 20:10:25,699 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:25,699 - handlers.py:207 - server_info - user password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 20:10:25,699 - handlers.py:208 - server_info - server password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 20:10:25,700 - app.py:114 - server_info - response result = <Response OK not started>
2016-06-01 20:10:25,708 - app.py:73 - server_info - Request: GET /
2016-06-01 20:10:25,708 - app.py:82 - server_info - check user: GET /
2016-06-01 20:10:25,708 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:25,709 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:25,709 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:25,709 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:25,709 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:10:25,709 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:10:25,710 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:25,710 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:10:25,711 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:10:25,711 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}], '__template__': 'blogs.html'}
2016-06-01 20:10:25,736 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:10:25,736 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:10:25,737 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:25,738 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:25,738 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:25,739 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:25,793 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:25,793 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:25,793 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:25,794 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:25,794 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:25,795 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:27,597 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:10:27,597 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:10:27,597 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:27,598 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:27,598 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:27,599 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:27,599 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:10:27,599 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:10:27,620 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:10:27,620 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:10:27,620 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:27,621 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:27,621 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:27,621 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:27,675 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:27,675 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:27,676 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:27,676 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:10:27,676 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:10:27,676 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:27,677 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:27,678 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:27,678 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:27,679 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:27,679 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:27,679 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:27,679 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:10:27,680 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:10:27,680 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:27,680 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:10:27,681 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:10:27,682 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:10:54,316 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:10:54,316 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:10:54,316 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:54,317 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:54,318 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:54,318 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:54,318 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:10:54,318 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:10:58,877 - app.py:73 - server_info - Request: GET /
2016-06-01 20:10:58,878 - app.py:82 - server_info - check user: GET /
2016-06-01 20:10:58,878 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:58,879 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:58,879 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:58,879 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:58,879 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:10:58,879 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:10:58,880 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:58,880 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:10:58,881 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:10:58,881 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}], '__template__': 'blogs.html'}
2016-06-01 20:10:58,902 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:10:58,902 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:10:58,903 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:58,904 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:10:58,904 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:10:58,905 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:58,905 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:10:58,905 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:10:58,905 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:58,906 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:10:58,906 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:10:58,906 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:58,907 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:10:58,907 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:10:58,907 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:58,908 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:58,909 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:58,909 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:58,910 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:58,910 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:58,911 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:58,911 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:58,912 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:58,912 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:58,912 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:58,913 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:58,913 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:58,914 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:58,914 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:58,914 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:58,915 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:10:58,915 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:10:58,916 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:58,916 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:10:58,916 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:10:58,916 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:58,917 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:58,917 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:58,917 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:58,918 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:58,918 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:58,918 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:58,981 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:58,981 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:10:58,982 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:58,983 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:58,983 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:58,983 - app.py:111 - server_info - Response handler...
2016-06-01 20:10:59,024 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:10:59,025 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:10:59,025 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:10:59,026 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:10:59,026 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:10:59,026 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:00,100 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:11:00,100 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:11:00,100 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:00,101 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:00,102 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:00,102 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:00,102 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:11:00,102 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:11:00,126 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:11:00,127 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:11:00,127 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:00,128 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:00,128 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:00,128 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:00,207 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:11:00,208 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:11:00,208 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:00,209 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:11:00,209 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:11:00,209 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:00,210 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:00,211 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:00,211 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:00,212 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:00,213 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:00,213 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:00,213 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:11:00,213 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:11:00,214 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:00,214 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:11:00,215 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:11:00,216 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:11:52,400 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:11:52,400 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:11:52,401 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:52,401 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,402 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:52,402 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:52,402 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:11:52,402 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:11:52,442 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:11:52,443 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:11:52,443 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:52,444 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:11:52,445 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:11:52,445 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:52,445 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:11:52,445 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:11:52,446 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:52,446 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:11:52,446 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:11:52,447 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:52,447 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:11:52,447 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:11:52,448 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:52,448 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:11:52,448 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:11:52,449 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:52,450 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,451 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,451 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,452 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,453 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,454 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:52,454 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:52,455 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:52,455 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:52,456 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:52,456 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:52,457 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,458 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:52,458 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:52,459 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:11:52,459 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:11:52,459 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:52,460 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:52,460 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:52,461 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:52,461 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:52,462 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,462 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:52,462 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:52,502 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:11:52,502 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:11:52,502 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:52,503 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,504 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:52,504 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:52,518 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:11:52,518 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:11:52,519 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:52,520 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,520 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:52,520 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:52,521 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:11:52,521 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:11:52,521 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,522 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:11:52,523 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:11:52,523 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:11:52,593 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:11:52,593 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:11:52,593 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:52,595 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:52,595 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:52,595 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,854 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:11:59,854 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:11:59,854 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,855 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,855 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,856 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,856 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:11:59,856 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:11:59,886 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:11:59,887 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:11:59,887 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,888 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:11:59,888 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:11:59,888 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,889 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:11:59,889 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:11:59,890 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,890 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:11:59,890 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:11:59,890 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,891 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,892 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 20:11:59,892 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 20:11:59,892 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,892 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:11:59,892 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:11:59,893 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,893 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,894 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,894 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,894 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,895 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,896 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,896 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,897 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,897 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,898 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,898 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,899 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,899 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,900 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,900 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,900 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,901 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,901 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 20:11:59,902 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 20:11:59,902 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,902 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:11:59,903 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:11:59,903 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,903 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 20:11:59,903 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-01 20:11:59,904 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,904 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,905 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,905 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,905 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,906 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,906 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,907 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,907 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,907 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,966 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:11:59,966 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:11:59,966 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,967 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,967 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,968 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,983 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:11:59,983 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:11:59,983 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:11:59,984 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,985 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:11:59,985 - app.py:111 - server_info - Response handler...
2016-06-01 20:11:59,985 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:11:59,985 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:11:59,985 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:11:59,986 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:11:59,986 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:11:59,987 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:12:00,066 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:12:00,066 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:12:00,066 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:00,068 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:00,068 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:00,068 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:10,218 - app.py:73 - server_info - Request: GET /
2016-06-01 20:12:10,219 - app.py:82 - server_info - check user: GET /
2016-06-01 20:12:10,219 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:10,220 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:10,220 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:10,220 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:10,220 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:12:10,221 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:12:10,221 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:10,221 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:12:10,222 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:12:10,222 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}], '__template__': 'blogs.html'}
2016-06-01 20:12:10,315 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:12:10,315 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:12:10,316 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:10,317 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:10,317 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:10,317 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:10,398 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:10,398 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:10,399 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:10,399 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:10,400 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:10,400 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:12,344 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:12:12,344 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:12:12,344 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:12,346 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:12,346 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:12,346 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:12,347 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:12:12,347 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:12:12,461 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:12,462 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:12,462 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:12,463 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:12:12,463 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:12:12,464 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:12,464 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:12,465 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:12,465 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:12,467 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:12,467 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:12,467 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:12,467 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:12:12,467 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:12:12,468 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:12,468 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:12:12,469 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:12:12,470 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:12:13,501 - app.py:73 - server_info - Request: GET /
2016-06-01 20:12:13,501 - app.py:82 - server_info - check user: GET /
2016-06-01 20:12:13,502 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:13,503 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:13,503 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:13,503 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:13,503 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:12:13,503 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:12:13,504 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:13,504 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:12:13,505 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:12:13,505 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}], '__template__': 'blogs.html'}
2016-06-01 20:12:13,525 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:12:13,525 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:12:13,526 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:13,526 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:13,527 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:13,527 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:13,612 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:13,613 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:13,613 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:13,614 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:13,615 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:13,615 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:45,868 - app.py:73 - server_info - Request: GET /
2016-06-01 20:12:45,868 - app.py:82 - server_info - check user: GET /
2016-06-01 20:12:45,868 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:45,869 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:45,869 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:45,869 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:45,870 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:12:45,870 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:12:45,870 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:45,871 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:12:45,872 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:12:45,872 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}], '__template__': 'blogs.html'}
2016-06-01 20:12:45,919 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:12:45,920 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:12:45,920 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:45,921 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:12:45,921 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:12:45,921 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:45,922 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:12:45,922 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:12:45,922 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:45,923 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:12:45,923 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:12:45,924 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:45,924 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 20:12:45,924 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 20:12:45,925 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:45,925 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:12:45,925 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:12:45,926 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:45,927 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:45,927 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:45,928 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:45,928 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:45,929 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:45,929 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:45,929 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:45,930 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:45,931 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:45,931 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:45,932 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:45,932 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:45,933 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:45,933 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:45,934 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:45,934 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:45,935 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:45,935 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:45,937 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 20:12:45,937 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-01 20:12:45,937 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:45,937 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 20:12:45,938 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 20:12:45,938 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:45,939 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:12:45,939 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:12:45,939 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:45,940 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:45,940 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:45,941 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:45,941 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:45,941 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:45,942 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:45,942 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:45,943 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:45,943 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:46,016 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:46,017 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:46,017 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:46,018 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:46,018 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:46,018 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:46,134 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:12:46,134 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:12:46,134 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:46,135 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:46,135 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:46,136 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:47,187 - app.py:73 - server_info - Request: GET /
2016-06-01 20:12:47,188 - app.py:82 - server_info - check user: GET /
2016-06-01 20:12:47,188 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:47,189 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:47,189 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:47,190 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:47,190 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:12:47,190 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:12:47,190 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:47,191 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:12:47,192 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:12:47,192 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}], '__template__': 'blogs.html'}
2016-06-01 20:12:47,285 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:47,285 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:47,286 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:47,286 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:47,287 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:47,287 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:48,132 - app.py:73 - server_info - Request: GET /
2016-06-01 20:12:48,132 - app.py:82 - server_info - check user: GET /
2016-06-01 20:12:48,132 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:48,133 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:48,133 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:48,133 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:48,133 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:12:48,134 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:12:48,134 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:48,134 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:12:48,135 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:12:48,135 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}], '__template__': 'blogs.html'}
2016-06-01 20:12:48,228 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:48,228 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:48,228 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:48,229 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:48,229 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:48,229 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:49,631 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:12:49,631 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:12:49,631 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:49,632 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:49,632 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:49,632 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:49,633 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:12:49,633 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:12:49,726 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:49,726 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:12:49,727 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:49,727 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:12:49,728 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:12:49,728 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:12:49,729 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:49,729 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:49,730 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:49,731 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:49,731 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:12:49,731 - app.py:111 - server_info - Response handler...
2016-06-01 20:12:49,731 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:12:49,731 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:12:49,732 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:12:49,732 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:12:49,734 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:12:49,734 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:13:07,543 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:13:07,544 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:13:07,544 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,545 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,545 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,545 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,545 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:13:07,545 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:13:07,587 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:13:07,587 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:13:07,588 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,589 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:13:07,589 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:13:07,589 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,590 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:13:07,590 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:13:07,590 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,590 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:13:07,591 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:13:07,591 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,591 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 20:13:07,591 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 20:13:07,592 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,593 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:13:07,593 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:13:07,593 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,594 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,595 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,596 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,596 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,597 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,597 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,597 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,598 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,598 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,598 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,599 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,599 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,600 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,600 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,601 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,601 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,602 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,602 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,603 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 20:13:07,603 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-01 20:13:07,604 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,604 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 20:13:07,604 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 20:13:07,604 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,605 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:13:07,605 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:13:07,606 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,606 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,607 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,607 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,607 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,608 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,608 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,609 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,609 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,610 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,681 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:07,681 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:07,681 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,682 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,683 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,683 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,698 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:13:07,699 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:13:07,699 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,700 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,700 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,701 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:07,701 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:13:07,701 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:13:07,702 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,702 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:13:07,703 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:13:07,703 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:13:07,802 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:13:07,802 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:13:07,802 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:07,803 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:07,804 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:07,804 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:09,966 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:13:09,966 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:13:09,966 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:09,967 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:09,967 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:09,967 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:09,967 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:13:09,967 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:13:10,000 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:13:10,000 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:13:10,000 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,001 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:13:10,001 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:13:10,001 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,002 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:13:10,002 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:13:10,002 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,002 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:13:10,002 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:13:10,003 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,003 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 20:13:10,003 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 20:13:10,003 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,004 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:13:10,004 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:13:10,004 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,005 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,006 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,006 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,007 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,007 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,007 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:10,008 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,009 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,009 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,009 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:10,010 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,010 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:10,011 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,011 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:10,012 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,012 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:10,012 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,013 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:10,013 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 20:13:10,014 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-01 20:13:10,014 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,014 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 20:13:10,015 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 20:13:10,015 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,015 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:13:10,015 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:13:10,015 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,016 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,017 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,017 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,017 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:10,018 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,018 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,018 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:10,019 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,019 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:10,091 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:10,091 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:10,091 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,092 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,092 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,093 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:10,107 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:13:10,108 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:13:10,108 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,109 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,109 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,109 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:10,109 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:13:10,109 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:13:10,110 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,110 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:13:10,111 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:13:10,111 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:13:10,193 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:13:10,193 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:13:10,193 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:10,194 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:10,194 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:10,195 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:11,916 - app.py:73 - server_info - Request: GET /
2016-06-01 20:13:11,916 - app.py:82 - server_info - check user: GET /
2016-06-01 20:13:11,916 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:11,917 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:11,917 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:11,917 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:11,917 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:13:11,917 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:13:11,918 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:11,918 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:13:11,919 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:13:11,919 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}], '__template__': 'blogs.html'}
2016-06-01 20:13:11,991 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:11,992 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:11,992 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:11,993 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:11,993 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:11,993 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:12,990 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:13:12,990 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:13:12,990 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:12,991 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:12,992 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:12,992 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:12,992 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:13:12,992 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:13:13,070 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:13,071 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:13,071 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:13,072 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:13:13,072 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:13:13,072 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:13,073 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:13,073 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:13,073 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:13,075 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:13,075 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:13,075 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:13,075 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:13:13,076 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:13:13,076 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:13,076 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:13:13,077 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:13:13,078 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:13:39,427 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:13:39,427 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:13:39,427 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:39,428 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,428 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:39,428 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:39,429 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:13:39,429 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:13:39,474 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:13:39,474 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:13:39,474 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:39,475 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:13:39,475 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:13:39,475 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:39,476 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:13:39,476 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:13:39,476 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:39,477 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:13:39,477 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:13:39,477 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:39,478 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:13:39,478 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:13:39,478 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:39,478 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:13:39,479 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:13:39,479 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:39,480 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,481 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,481 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,482 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,483 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,483 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:39,483 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:39,485 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,485 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:39,485 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:39,486 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:39,486 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:39,487 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:39,487 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:39,488 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:39,488 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:39,489 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:39,489 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:39,490 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:13:39,491 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:13:39,491 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:39,492 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,492 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:39,492 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:39,552 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:39,552 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:39,552 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:39,553 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,554 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:39,554 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:39,569 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:13:39,569 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:13:39,569 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:39,570 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,570 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:39,571 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:39,571 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:13:39,571 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:13:39,571 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,572 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:13:39,573 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:13:39,573 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:13:39,673 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:13:39,673 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:13:39,673 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:39,674 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:39,675 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:39,675 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:45,736 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:13:45,737 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:13:45,737 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:45,738 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,738 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:45,738 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:45,738 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:13:45,738 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:13:45,759 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:13:45,759 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:13:45,760 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:45,761 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:13:45,761 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:13:45,761 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:45,762 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:13:45,762 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:13:45,762 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:45,764 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:13:45,764 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:13:45,764 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:45,764 - app.py:73 - server_info - Request: GET /static/js/md5.js
2016-06-01 20:13:45,765 - app.py:82 - server_info - check user: GET /static/js/md5.js
2016-06-01 20:13:45,765 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:45,765 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:13:45,765 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:13:45,766 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:45,766 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,767 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,767 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,768 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,768 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,769 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:45,769 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:45,770 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,770 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:45,770 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:45,771 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:45,771 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:45,772 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:45,772 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:45,773 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:45,773 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:45,774 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:45,774 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:45,775 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:13:45,775 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:13:45,775 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:45,776 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,777 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:45,777 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:45,831 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:45,831 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:13:45,832 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:45,832 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:13:45,833 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:13:45,833 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:45,834 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,834 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:45,834 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:45,836 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,837 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:45,837 - app.py:111 - server_info - Response handler...
2016-06-01 20:13:45,837 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:13:45,837 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:13:45,838 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,838 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`name`,`user_name`,`content`,`created_at`,`summary`,`user_image` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:13:45,840 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:13:45,840 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试2', 'summary': '测试2', 'user_name': 'Matt', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}, {'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': '测试', 'summary': '测试', 'user_name': 'Matt', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120'}]}
2016-06-01 20:13:45,879 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:13:45,879 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:13:45,880 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`passwd`,`admin`,`email`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:13:45,881 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:13:45,881 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:13:45,881 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:12,032 - orm.py:137 - server_info - found model: User (table: users)
2016-06-01 20:14:12,032 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,032 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-01 20:14:12,032 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 20:14:12,032 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,032 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-01 20:14:12,032 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,032 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,033 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-01 20:14:12,033 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,033 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 20:14:12,033 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 20:14:12,033 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-01 20:14:12,033 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,033 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-01 20:14:12,033 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,033 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,034 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-01 20:14:12,034 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,034 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-01 20:14:12,034 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-01 20:14:12,034 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,034 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-01 20:14:12,034 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,034 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-01 20:14:12,035 - orm.py:27 - server_info - create database connection pool...
2016-06-01 20:14:12,040 - app.py:42 - server_info - init jinja2....
2016-06-01 20:14:12,040 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-01 20:14:12,042 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-01 20:14:13,692 - app.py:73 - server_info - Request: GET /
2016-06-01 20:14:13,692 - app.py:82 - server_info - check user: GET /
2016-06-01 20:14:13,693 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:13,694 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:13,694 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:13,694 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:13,694 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:14:13,694 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:14:13,695 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:13,695 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:14:13,696 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:14:13,696 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-01 20:14:13,921 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:14:13,922 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:14:13,922 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:13,923 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:14:13,923 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:14:13,923 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:13,924 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:13,926 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:14:13,926 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:14:13,926 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:13,927 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:14:13,928 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:14:13,928 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:13,928 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 20:14:13,929 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 20:14:13,929 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:13,929 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:14:13,929 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:14:13,930 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:13,930 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:13,930 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:13,932 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:13,933 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:13,933 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 20:14:13,933 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-01 20:14:13,934 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:13,935 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:13,935 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:13,939 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:13,940 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:13,940 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:13,944 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:13,945 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:13,945 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:13,946 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:13,947 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 20:14:13,947 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 20:14:13,947 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:13,948 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:13,948 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:13,949 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:13,950 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:14:13,950 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:14:13,950 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:13,951 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:13,951 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:13,951 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:13,951 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:13,953 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:13,953 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:13,953 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:13,953 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:13,954 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:13,954 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:14,064 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:14:14,064 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:14:14,064 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:14,065 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:14,066 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:14,066 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:14,165 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:14:14,165 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:14:14,166 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:14,167 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:14,167 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:14,167 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:14,233 - app.py:73 - server_info - Request: GET /favicon.ico
2016-06-01 20:14:14,233 - app.py:82 - server_info - check user: GET /favicon.ico
2016-06-01 20:14:14,233 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:14,234 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:14,235 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:14,235 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:15,281 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:14:15,281 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:14:15,281 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:15,282 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:15,283 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:15,283 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:15,283 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:14:15,283 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:14:15,365 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:14:15,365 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:14:15,365 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:15,366 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:15,366 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:15,366 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:15,451 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:14:15,451 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:14:15,452 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:14:15,453 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:15,453 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:14:15,453 - app.py:111 - server_info - Response handler...
2016-06-01 20:14:15,453 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:14:15,453 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:14:15,454 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:14:15,454 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:14:15,455 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:14:15,456 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-01 20:18:28,083 - app.py:73 - server_info - Request: GET /
2016-06-01 20:18:28,083 - app.py:82 - server_info - check user: GET /
2016-06-01 20:18:28,084 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:18:28,085 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:18:28,085 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:18:28,085 - app.py:111 - server_info - Response handler...
2016-06-01 20:18:28,085 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:18:28,085 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:18:28,086 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:18:28,086 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:18:28,087 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:18:28,087 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-01 20:18:28,173 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:18:28,173 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:18:28,173 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:18:28,174 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:18:28,175 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:18:28,175 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:35,927 - app.py:73 - server_info - Request: GET /
2016-06-01 20:19:35,927 - app.py:82 - server_info - check user: GET /
2016-06-01 20:19:35,928 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:35,928 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:35,929 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:35,929 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:35,929 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:19:35,929 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:19:35,930 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:35,930 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:19:35,931 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:19:35,931 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-01 20:19:35,981 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:19:35,982 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:19:35,982 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:35,983 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:19:35,983 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:19:35,983 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:35,984 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:19:35,984 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:19:35,984 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:35,985 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:19:35,985 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:19:35,985 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:35,987 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 20:19:35,988 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 20:19:35,988 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:35,988 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:19:35,988 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:19:35,989 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:35,989 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:35,990 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:35,990 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:35,992 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:35,992 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:35,993 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:35,994 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:35,994 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:35,994 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:35,995 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:35,996 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:35,996 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:35,996 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:35,997 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:35,997 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:35,998 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:35,999 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 20:19:35,999 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-01 20:19:35,999 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:35,999 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:35,999 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:36,000 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 20:19:36,000 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 20:19:36,001 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:36,001 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:19:36,001 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:19:36,001 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:36,002 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:36,002 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:36,003 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:36,003 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:36,004 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:36,004 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:36,004 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:36,005 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:36,005 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:36,057 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:19:36,057 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:19:36,057 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:36,058 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:36,059 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:36,059 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:36,163 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:19:36,163 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:19:36,163 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:36,165 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:36,165 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:36,165 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,464 - app.py:73 - server_info - Request: GET /
2016-06-01 20:19:38,464 - app.py:82 - server_info - check user: GET /
2016-06-01 20:19:38,464 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,465 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,465 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,465 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,466 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:19:38,466 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:19:38,467 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,467 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:19:38,468 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:19:38,468 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-01 20:19:38,542 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:19:38,542 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:19:38,543 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,544 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:19:38,544 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:19:38,544 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,544 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:19:38,545 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:19:38,545 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,545 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:19:38,545 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:19:38,545 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,546 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 20:19:38,546 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 20:19:38,546 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,547 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:19:38,547 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:19:38,547 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,548 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,549 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,549 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,550 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,551 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,551 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,552 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,552 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,553 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,553 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,554 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,555 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,555 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,555 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,556 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 20:19:38,556 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-01 20:19:38,556 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,557 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,557 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,558 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,558 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,559 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 20:19:38,559 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 20:19:38,559 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,559 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:19:38,559 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:19:38,560 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,560 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,561 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,561 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,561 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,562 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,562 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,563 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,563 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,563 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,653 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:19:38,653 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:19:38,653 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,654 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,654 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,654 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:38,689 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:19:38,689 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:19:38,689 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:38,690 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:38,690 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:38,690 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,673 - app.py:73 - server_info - Request: GET /
2016-06-01 20:19:46,673 - app.py:82 - server_info - check user: GET /
2016-06-01 20:19:46,673 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,674 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,674 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,675 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,675 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:19:46,675 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:19:46,675 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,676 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:19:46,676 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:19:46,677 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-01 20:19:46,708 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:19:46,709 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:19:46,709 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,710 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:19:46,710 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:19:46,710 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,711 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:19:46,711 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:19:46,711 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,712 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:19:46,712 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:19:46,712 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,713 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 20:19:46,713 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 20:19:46,713 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,714 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:19:46,714 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:19:46,714 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,715 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,715 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,716 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,716 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,717 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,718 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,718 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,719 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,719 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,720 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,720 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,721 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,722 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,722 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,723 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 20:19:46,723 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-01 20:19:46,723 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,724 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,724 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,724 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,725 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,725 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 20:19:46,726 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 20:19:46,726 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,726 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:19:46,726 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:19:46,727 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,727 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,728 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,728 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,728 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,729 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,729 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,730 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,730 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,731 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,763 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:19:46,763 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:19:46,763 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,764 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,764 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,764 - app.py:111 - server_info - Response handler...
2016-06-01 20:19:46,817 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:19:46,817 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:19:46,817 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:19:46,818 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:19:46,818 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:19:46,819 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,722 - app.py:73 - server_info - Request: GET /
2016-06-01 20:20:26,722 - app.py:82 - server_info - check user: GET /
2016-06-01 20:20:26,722 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,723 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,724 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,724 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,724 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:20:26,724 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:20:26,724 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,725 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:20:26,726 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:20:26,726 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-01 20:20:26,778 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:20:26,778 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:20:26,779 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,779 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:20:26,780 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:20:26,780 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,780 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:20:26,780 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:20:26,781 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,781 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:20:26,782 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:20:26,782 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,782 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 20:20:26,783 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 20:20:26,783 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,784 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:20:26,784 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:20:26,784 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,785 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,785 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,786 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,786 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,787 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,787 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,787 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,788 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,788 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,788 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,789 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,790 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,790 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,790 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,791 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,791 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,793 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,793 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,794 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 20:20:26,794 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-01 20:20:26,794 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,795 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 20:20:26,795 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 20:20:26,795 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,796 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:20:26,796 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:20:26,796 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,797 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,797 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,797 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,797 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,798 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,798 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,799 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,799 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,800 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,856 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:20:26,856 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:20:26,856 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,857 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,857 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,857 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:26,961 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:20:26,962 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:20:26,962 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:26,963 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:26,963 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:26,963 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,307 - app.py:73 - server_info - Request: GET /
2016-06-01 20:20:35,307 - app.py:82 - server_info - check user: GET /
2016-06-01 20:20:35,307 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,308 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,309 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,309 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,309 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:20:35,309 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:20:35,309 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,310 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:20:35,311 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:20:35,311 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-01 20:20:35,346 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-01 20:20:35,346 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-01 20:20:35,346 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,347 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-01 20:20:35,347 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-01 20:20:35,348 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,348 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-01 20:20:35,348 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-01 20:20:35,349 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,349 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-01 20:20:35,349 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-01 20:20:35,349 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,350 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-01 20:20:35,350 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-01 20:20:35,350 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,351 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,351 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-01 20:20:35,351 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-01 20:20:35,352 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,352 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,353 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,353 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,353 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,353 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,354 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,355 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,355 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,356 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,356 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,357 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,357 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,358 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,358 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,358 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,360 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,360 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,361 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-01 20:20:35,361 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-01 20:20:35,361 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,362 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-01 20:20:35,362 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-01 20:20:35,362 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,362 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-01 20:20:35,363 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-01 20:20:35,363 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,363 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,364 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,364 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,364 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,365 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,365 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,366 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,366 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,366 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,422 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:20:35,423 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:20:35,423 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,424 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,424 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,424 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:35,494 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:20:35,494 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-01 20:20:35,494 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:35,495 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:35,496 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:35,496 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:38,743 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:20:38,743 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:20:38,744 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:38,745 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:38,745 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:38,745 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:38,745 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:20:38,745 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:20:38,814 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:20:38,814 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:20:38,814 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:38,815 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:20:38,815 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:20:38,815 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:38,816 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:38,817 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:38,817 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:38,817 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:38,818 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:38,818 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:38,818 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:20:38,818 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:20:38,819 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:38,819 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:20:38,820 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:20:38,820 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-01 20:20:40,155 - app.py:73 - server_info - Request: GET /
2016-06-01 20:20:40,155 - app.py:82 - server_info - check user: GET /
2016-06-01 20:20:40,156 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:40,156 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:40,157 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:40,157 - app.py:111 - server_info - Response handler...
2016-06-01 20:20:40,157 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:20:40,157 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:20:40,157 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:40,158 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:20:40,159 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:20:40,159 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-01 20:20:40,245 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:20:40,245 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:20:40,245 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:20:40,247 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:20:40,247 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:20:40,247 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:35,767 - app.py:73 - server_info - Request: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-01 20:23:35,767 - app.py:82 - server_info - check user: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-01 20:23:35,767 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:23:35,768 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:35,768 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:23:35,769 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:38,475 - app.py:73 - server_info - Request: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-01 20:23:38,475 - app.py:82 - server_info - check user: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-01 20:23:38,475 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:23:38,476 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:38,477 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:23:38,477 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:43,204 - app.py:73 - server_info - Request: GET /signout
2016-06-01 20:23:43,205 - app.py:82 - server_info - check user: GET /signout
2016-06-01 20:23:43,205 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:23:43,206 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:43,206 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:23:43,206 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:43,206 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-01 20:23:43,207 - app.py:114 - server_info - response result = Found
2016-06-01 20:23:43,210 - app.py:73 - server_info - Request: GET /
2016-06-01 20:23:43,210 - app.py:82 - server_info - check user: GET /
2016-06-01 20:23:43,210 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:43,210 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:23:43,210 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:23:43,211 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:43,211 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:23:43,212 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:23:43,212 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-01 20:23:43,296 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:23:43,296 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:23:43,296 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:45,111 - app.py:73 - server_info - Request: GET /signin
2016-06-01 20:23:45,111 - app.py:82 - server_info - check user: GET /signin
2016-06-01 20:23:45,111 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:45,111 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:23:45,111 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-01 20:23:45,192 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:23:45,192 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:23:45,192 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:46,588 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-01 20:23:46,588 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-01 20:23:46,588 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:46,589 - coroweb.py:215 - server_info - call with args: {'email': '1@qq.com', 'passwd': '735fcf0d1ae7325c203cf422888f43f25db40876'}
2016-06-01 20:23:46,589 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where email=?, ARGS: ['1@qq.com']
2016-06-01 20:23:46,590 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:46,590 - handlers.py:207 - server_info - user password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 20:23:46,591 - handlers.py:208 - server_info - server password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-01 20:23:46,591 - app.py:114 - server_info - response result = <Response OK not started>
2016-06-01 20:23:46,601 - app.py:73 - server_info - Request: GET /
2016-06-01 20:23:46,601 - app.py:82 - server_info - check user: GET /
2016-06-01 20:23:46,601 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:23:46,602 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:46,602 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:23:46,603 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:46,603 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:23:46,603 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:23:46,603 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:46,604 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:23:46,605 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:23:46,605 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-01 20:23:46,686 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:23:46,686 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:23:46,686 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:23:46,689 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:46,690 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:23:46,691 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:48,517 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-01 20:23:48,517 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-01 20:23:48,517 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:23:48,518 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:48,518 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:23:48,518 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:48,518 - coroweb.py:215 - server_info - call with args: {}
2016-06-01 20:23:48,519 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-01 20:23:48,608 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:23:48,608 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-01 20:23:48,608 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:23:48,610 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:48,610 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-01 20:23:48,610 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-01 20:23:48,611 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:23:48,611 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:23:48,611 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:48,613 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:48,613 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:23:48,613 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:48,613 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-01 20:23:48,614 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-01 20:23:48,614 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:48,615 - orm.py:23 - server_info - SQL: select `id`, `user_id`,`content`,`user_image`,`created_at`,`user_name`,`summary`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-01 20:23:48,616 - orm.py:57 - server_info - rows returned: 2
2016-06-01 20:23:48,616 - app.py:114 - server_info - response result = {'blogs': [{'summary': '测试2', 'content': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496}, {'summary': '测试', 'content': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'name': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-01 20:23:49,750 - app.py:73 - server_info - Request: GET /manage/users
2016-06-01 20:23:49,750 - app.py:82 - server_info - check user: GET /manage/users
2016-06-01 20:23:49,750 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:23:49,751 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:49,751 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:23:49,751 - app.py:111 - server_info - Response handler...
2016-06-01 20:23:54,303 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-01 20:23:54,303 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-01 20:23:54,303 - orm.py:23 - server_info - SQL: select `id`, `email`,`admin`,`created_at`,`passwd`,`image`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-01 20:23:54,304 - orm.py:57 - server_info - rows returned: 1
2016-06-01 20:23:54,304 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-01 20:23:54,304 - app.py:111 - server_info - Response handler...
2016-06-02 02:01:45,270 - orm.py:137 - server_info - found model: User (table: users)
2016-06-02 02:01:45,270 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,270 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,270 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-02 02:01:45,271 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,271 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-02 02:01:45,271 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,271 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-02 02:01:45,271 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-02 02:01:45,271 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,271 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-02 02:01:45,271 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-02 02:01:45,271 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-02 02:01:45,271 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,271 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,272 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,272 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-02 02:01:45,272 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-02 02:01:45,272 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,272 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-02 02:01:45,272 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-02 02:01:45,272 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-02 02:01:45,272 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,272 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,272 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-02 02:01:45,273 - orm.py:27 - server_info - create database connection pool...
2016-06-02 02:01:45,278 - app.py:42 - server_info - init jinja2....
2016-06-02 02:01:45,278 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-02 02:01:45,284 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-02 02:02:24,649 - app.py:73 - server_info - Request: GET /
2016-06-02 02:02:24,649 - app.py:82 - server_info - check user: GET /
2016-06-02 02:02:24,649 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:24,651 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:24,651 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:24,651 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:24,651 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:02:24,651 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:02:24,652 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:24,652 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`content`,`user_image`,`name`,`user_id`,`user_name`,`summary` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:02:24,653 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:02:24,653 - app.py:114 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'content': '测试2', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'summary': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': '测试2'}, {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'content': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'summary': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': '测试'}]}
2016-06-02 02:02:24,765 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-02 02:02:24,765 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-02 02:02:24,765 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:24,766 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:24,767 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:24,767 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:24,772 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-02 02:02:24,772 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-02 02:02:24,772 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:24,773 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:24,774 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:24,774 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:24,777 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-02 02:02:24,777 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-02 02:02:24,777 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:24,778 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:24,778 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:24,778 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:24,786 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-02 02:02:24,786 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-02 02:02:24,786 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:24,787 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:24,788 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:24,788 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:24,792 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-02 02:02:24,792 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-02 02:02:24,792 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:24,793 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:24,793 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:24,793 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:24,907 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:24,907 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:24,907 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:24,908 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:24,908 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:24,908 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:25,366 - app.py:73 - server_info - Request: GET /
2016-06-02 02:02:25,366 - app.py:82 - server_info - check user: GET /
2016-06-02 02:02:25,366 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:25,367 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:25,367 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:25,367 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:25,368 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:02:25,368 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:02:25,368 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:25,369 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`content`,`user_image`,`name`,`user_id`,`user_name`,`summary` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:02:25,369 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:02:25,370 - app.py:114 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'content': '测试2', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'summary': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': '测试2'}, {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'content': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'summary': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': '测试'}]}
2016-06-02 02:02:25,531 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:25,531 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:25,532 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:25,534 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:25,534 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:25,534 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:27,431 - app.py:73 - server_info - Request: GET /manage/users
2016-06-02 02:02:27,431 - app.py:82 - server_info - check user: GET /manage/users
2016-06-02 02:02:27,432 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:27,433 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:27,433 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:27,433 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:27,433 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:02:27,433 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_users.html'}
2016-06-02 02:02:27,539 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:27,539 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:27,539 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:27,540 - app.py:73 - server_info - Request: GET /api/users
2016-06-02 02:02:27,540 - app.py:82 - server_info - check user: GET /api/users
2016-06-02 02:02:27,540 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:27,541 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:27,543 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:27,543 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:27,544 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:27,544 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:27,544 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:27,544 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /api/users >}
2016-06-02 02:02:27,545 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` order by created_at desc, ARGS: []
2016-06-02 02:02:27,545 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:02:27,546 - app.py:114 - server_info - response result = {'users': [{'id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'admin': 0, 'created_at': 1464781626.95543, 'email': '723526676@qq.com', 'name': 'kHRYSTAL', 'image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'passwd': '******'}, {'id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'admin': 1, 'created_at': 1464780866.86893, 'email': '1@qq.com', 'name': 'Matt', 'image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'passwd': '******'}]}
2016-06-02 02:02:30,984 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:02:30,984 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:02:30,984 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:30,985 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:30,985 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:30,985 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:30,985 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:02:30,986 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:02:31,114 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:31,114 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:31,115 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:31,115 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:02:31,116 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:02:31,116 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:31,117 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:31,117 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:31,117 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:31,118 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:31,118 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:31,118 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:31,118 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:02:31,118 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:02:31,119 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:31,119 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`content`,`user_image`,`name`,`user_id`,`user_name`,`summary` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:02:31,120 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:02:31,121 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'content': '测试2', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'summary': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': '测试2'}, {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'content': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'summary': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': '测试'}]}
2016-06-02 02:02:33,385 - app.py:73 - server_info - Request: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:02:33,385 - app.py:82 - server_info - check user: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:02:33,385 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:33,386 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:33,386 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:33,386 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:33,386 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:02:33,386 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`content`,`user_image`,`name`,`user_id`,`user_name`,`summary` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:02:33,387 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:33,388 - orm.py:23 - server_info - SQL: select `id`, `create_at`,`content`,`user_image`,`user_id`,`blog_id`,`user_name` from `comments` where blog_id=? order by created_at desc, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:02:33,388 - orm.py:56 - server_info - (1054, "Unknown column 'create_at' in 'field list'")
2016-06-02 02:02:33,388 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:02:37,511 - app.py:73 - server_info - Request: GET /manage/users
2016-06-02 02:02:37,511 - app.py:82 - server_info - check user: GET /manage/users
2016-06-02 02:02:37,511 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:37,512 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:37,513 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:37,513 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:37,513 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:02:37,513 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_users.html'}
2016-06-02 02:02:37,590 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:37,591 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:37,591 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:37,594 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:37,594 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:37,594 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:37,596 - app.py:73 - server_info - Request: GET /api/users
2016-06-02 02:02:37,596 - app.py:82 - server_info - check user: GET /api/users
2016-06-02 02:02:37,596 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:37,597 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:37,598 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:37,598 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:37,598 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /api/users >}
2016-06-02 02:02:37,598 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` order by created_at desc, ARGS: []
2016-06-02 02:02:37,599 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:02:37,599 - app.py:114 - server_info - response result = {'users': [{'id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'admin': 0, 'created_at': 1464781626.95543, 'email': '723526676@qq.com', 'name': 'kHRYSTAL', 'image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'passwd': '******'}, {'id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'admin': 1, 'created_at': 1464780866.86893, 'email': '1@qq.com', 'name': 'Matt', 'image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'passwd': '******'}]}
2016-06-02 02:02:52,553 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-02 02:02:52,553 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-02 02:02:52,553 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:52,554 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:52,555 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:52,555 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:52,555 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:02:52,555 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_comments.html'}
2016-06-02 02:02:52,776 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:52,776 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:52,776 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:52,777 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:52,778 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:52,778 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:52,795 - app.py:73 - server_info - Request: GET /api/comments
2016-06-02 02:02:52,796 - app.py:82 - server_info - check user: GET /api/comments
2016-06-02 02:02:52,796 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:52,797 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:52,797 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:52,797 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:52,797 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:02:52,798 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `comments`, ARGS: None
2016-06-02 02:02:52,801 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:52,801 - app.py:114 - server_info - response result = {'page': item_count: 0, page_count: 0, page_index: 1, page_size: 20, offset: 0, limit: 0, 'comments': ()}
2016-06-02 02:02:54,807 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:02:54,807 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:02:54,807 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:54,808 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:54,809 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:54,809 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:54,809 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:02:54,809 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:02:54,911 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:54,911 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:54,911 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:54,911 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:02:54,912 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:02:54,912 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:54,912 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:54,913 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:54,913 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:54,914 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:54,914 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:54,914 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:54,914 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:02:54,914 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:02:54,915 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:54,915 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`content`,`user_image`,`name`,`user_id`,`user_name`,`summary` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:02:54,916 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:02:54,916 - app.py:114 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'content': '测试2', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'summary': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': '测试2'}, {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'content': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'summary': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': '测试'}]}
2016-06-02 02:02:56,321 - app.py:73 - server_info - Request: GET /
2016-06-02 02:02:56,321 - app.py:82 - server_info - check user: GET /
2016-06-02 02:02:56,321 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:56,322 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:56,323 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:56,323 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:56,323 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:02:56,323 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:02:56,324 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:56,324 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`content`,`user_image`,`name`,`user_id`,`user_name`,`summary` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:02:56,325 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:02:56,326 - app.py:114 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'created_at': 1464782836.98496, 'content': '测试2', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'summary': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': '测试2'}, {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'created_at': 1464781677.05172, 'content': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'summary': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': '测试'}]}
2016-06-02 02:02:56,446 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:56,446 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:02:56,447 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:56,448 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:56,448 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:56,449 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:57,504 - app.py:73 - server_info - Request: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:02:57,504 - app.py:82 - server_info - check user: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:02:57,504 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`admin`,`email`,`created_at`,`name`,`image` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:02:57,505 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:57,505 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:02:57,505 - app.py:111 - server_info - Response handler...
2016-06-02 02:02:57,505 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:02:57,506 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`content`,`user_image`,`name`,`user_id`,`user_name`,`summary` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:02:57,506 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:02:57,507 - orm.py:23 - server_info - SQL: select `id`, `create_at`,`content`,`user_image`,`user_id`,`blog_id`,`user_name` from `comments` where blog_id=? order by created_at desc, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:02:57,507 - orm.py:56 - server_info - (1054, "Unknown column 'create_at' in 'field list'")
2016-06-02 02:02:57,507 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:03:46,787 - orm.py:137 - server_info - found model: User (table: users)
2016-06-02 02:03:46,787 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,787 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,787 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-02 02:03:46,787 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,788 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-02 02:03:46,788 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-02 02:03:46,788 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,788 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-02 02:03:46,788 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,788 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,788 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-02 02:03:46,788 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-02 02:03:46,788 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-02 02:03:46,789 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-02 02:03:46,789 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,789 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,789 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-02 02:03:46,789 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,789 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,789 - orm.py:144 - server_info - found mapping: create_at ==> <FloatField, real:None>
2016-06-02 02:03:46,789 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-02 02:03:46,790 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-02 02:03:46,790 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,790 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:03:46,792 - orm.py:27 - server_info - create database connection pool...
2016-06-02 02:03:46,797 - app.py:42 - server_info - init jinja2....
2016-06-02 02:03:46,797 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-02 02:03:46,802 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-02 02:03:55,983 - app.py:73 - server_info - Request: GET /
2016-06-02 02:03:55,983 - app.py:82 - server_info - check user: GET /
2016-06-02 02:03:55,984 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`admin`,`name`,`image`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:03:55,985 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:03:55,985 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:03:55,985 - app.py:111 - server_info - Response handler...
2016-06-02 02:03:55,985 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:03:55,985 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:03:55,986 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:03:55,986 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`name`,`created_at`,`summary`,`content`,`user_image`,`user_id` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:03:55,987 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:03:55,987 - app.py:114 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': '测试2', 'summary': '测试2', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'created_at': 1464782836.98496, 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}, {'name': '测试', 'summary': '测试', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'created_at': 1464781677.05172, 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:03:56,185 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:03:56,185 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:03:56,185 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`admin`,`name`,`image`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:03:56,186 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:03:56,186 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:03:56,186 - app.py:111 - server_info - Response handler...
2016-06-02 02:03:56,409 - app.py:73 - server_info - Request: GET /favicon.ico
2016-06-02 02:03:56,410 - app.py:82 - server_info - check user: GET /favicon.ico
2016-06-02 02:03:56,410 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`admin`,`name`,`image`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:03:56,411 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:03:56,411 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:03:56,411 - app.py:111 - server_info - Response handler...
2016-06-02 02:03:58,397 - app.py:73 - server_info - Request: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:03:58,397 - app.py:82 - server_info - check user: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:03:58,397 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`admin`,`name`,`image`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:03:58,398 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:03:58,398 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:03:58,398 - app.py:111 - server_info - Response handler...
2016-06-02 02:03:58,398 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:03:58,398 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`name`,`created_at`,`summary`,`content`,`user_image`,`user_id` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:03:58,399 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:03:58,400 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`create_at`,`content`,`user_image`,`user_id` from `comments` where blog_id=? order by created_at desc, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:03:58,400 - orm.py:56 - server_info - (1054, "Unknown column 'create_at' in 'field list'")
2016-06-02 02:03:58,400 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:03:58,405 - app.py:114 - server_info - response result = {'__template__': 'blog.html', 'blog': {'name': '测试2', 'summary': '测试2', 'html_content': '<p>测试2</p>\n', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'created_at': 1464782836.98496, 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}, 'comments': []}
2016-06-02 02:03:58,503 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:03:58,503 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:03:58,503 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`admin`,`name`,`image`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:03:58,504 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:03:58,505 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:03:58,505 - app.py:111 - server_info - Response handler...
2016-06-02 02:04:03,905 - app.py:73 - server_info - Request: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/comments
2016-06-02 02:04:03,905 - app.py:82 - server_info - check user: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/comments
2016-06-02 02:04:03,905 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`email`,`admin`,`name`,`image`,`created_at` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:04:03,906 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:04:03,907 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:04:03,907 - app.py:111 - server_info - Response handler...
2016-06-02 02:04:03,907 - coroweb.py:215 - server_info - call with args: {'request': <Request POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/comments >, 'content': '啊飒飒撒上', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:04:03,908 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`name`,`created_at`,`summary`,`content`,`user_image`,`user_id` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:04:03,909 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:04:03,909 - orm.py:194 - server_info - using default value for create_at: 1464804243.909707
2016-06-02 02:04:03,910 - orm.py:194 - server_info - using default value for id: 001464804243909f9ce6ef2ccf34d6589a33c61078307cf000
2016-06-02 02:04:03,910 - orm.py:23 - server_info - SQL: insert into `comments` (`user_name`,`blog_id`,`create_at`,`content`,`user_image`,`user_id`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-02 02:06:19,463 - orm.py:137 - server_info - found model: User (table: users)
2016-06-02 02:06:19,464 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-02 02:06:19,464 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-02 02:06:19,464 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,464 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,464 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-02 02:06:19,464 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,464 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,464 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-02 02:06:19,464 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-02 02:06:19,464 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,464 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-02 02:06:19,465 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-02 02:06:19,465 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,465 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,465 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,465 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-02 02:06:19,465 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-02 02:06:19,465 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,465 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,465 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-02 02:06:19,465 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-02 02:06:19,465 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,466 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:06:19,466 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-02 02:06:19,467 - orm.py:27 - server_info - create database connection pool...
2016-06-02 02:06:19,471 - app.py:42 - server_info - init jinja2....
2016-06-02 02:06:19,471 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-02 02:06:19,478 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-02 02:06:25,054 - app.py:73 - server_info - Request: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:06:25,054 - app.py:82 - server_info - check user: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:06:25,054 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,055 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,055 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,055 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:25,056 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:06:25,056 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:06:25,057 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,057 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`created_at`,`user_image`,`user_id`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:06:25,060 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:06:25,066 - app.py:114 - server_info - response result = {'__template__': 'blog.html', 'blog': {'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'html_content': '<p>测试2</p>\n'}, 'comments': []}
2016-06-02 02:06:25,127 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-02 02:06:25,127 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-02 02:06:25,128 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,129 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-02 02:06:25,129 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-02 02:06:25,129 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,130 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-02 02:06:25,131 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-02 02:06:25,131 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,132 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-02 02:06:25,132 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-02 02:06:25,132 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,132 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-02 02:06:25,132 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-02 02:06:25,133 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,133 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-02 02:06:25,133 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-02 02:06:25,133 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,134 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,136 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,137 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,139 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,139 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,139 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:25,141 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,141 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,141 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:25,142 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,142 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,142 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:25,143 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,143 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:25,145 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-02 02:06:25,145 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-02 02:06:25,145 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,146 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,146 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:25,147 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-02 02:06:25,147 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-02 02:06:25,147 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,148 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,148 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:25,149 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-02 02:06:25,149 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-02 02:06:25,149 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,150 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,151 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,151 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:25,152 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,152 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,153 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,153 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:25,153 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,154 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:25,204 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:06:25,204 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:06:25,205 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,206 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,206 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,206 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:25,313 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-02 02:06:25,313 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-02 02:06:25,313 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:25,314 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:25,315 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:25,315 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:27,645 - app.py:73 - server_info - Request: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/comments
2016-06-02 02:06:27,645 - app.py:82 - server_info - check user: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/comments
2016-06-02 02:06:27,645 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:27,646 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:27,647 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:27,647 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:27,647 - coroweb.py:215 - server_info - call with args: {'request': <Request POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/comments >, 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'content': 'as'}
2016-06-02 02:06:27,647 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:06:27,648 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:27,649 - orm.py:194 - server_info - using default value for created_at: 1464804387.649168
2016-06-02 02:06:27,649 - orm.py:194 - server_info - using default value for id: 001464804387649d2ffe61296614407aa663807768a4c80000
2016-06-02 02:06:27,649 - orm.py:23 - server_info - SQL: insert into `comments` (`user_name`,`blog_id`,`created_at`,`user_image`,`user_id`,`content`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-02 02:06:27,652 - orm.py:72 - server_info - commit success!
2016-06-02 02:06:27,652 - app.py:114 - server_info - response result = {'id': '001464804387649d2ffe61296614407aa663807768a4c80000', 'created_at': 1464804387.649168, 'blog_id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'user_name': 'Matt', 'content': 'as'}
2016-06-02 02:06:27,661 - app.py:73 - server_info - Request: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:06:27,661 - app.py:82 - server_info - check user: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:06:27,661 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:27,663 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:27,663 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:27,663 - app.py:111 - server_info - Response handler...
2016-06-02 02:06:27,663 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:06:27,664 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:06:27,665 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:27,665 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`created_at`,`user_image`,`user_id`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:06:27,666 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:27,666 - app.py:114 - server_info - response result = {'__template__': 'blog.html', 'blog': {'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'html_content': '<p>测试2</p>\n'}, 'comments': [{'user_name': 'Matt', 'blog_id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'html_content': '<p>as</p>', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464804387.64917, 'id': '001464804387649d2ffe61296614407aa663807768a4c80000', 'content': 'as'}]}
2016-06-02 02:06:27,750 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:06:27,750 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:06:27,750 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:06:27,751 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:06:27,752 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:06:27,752 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:15,441 - app.py:73 - server_info - Request: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:07:15,441 - app.py:82 - server_info - check user: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:07:15,441 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:15,442 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:15,442 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:15,443 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:15,443 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:07:15,443 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:07:15,444 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:15,444 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`created_at`,`user_image`,`user_id`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:07:15,444 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:15,445 - app.py:114 - server_info - response result = {'__template__': 'blog.html', 'blog': {'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'html_content': '<p>测试2</p>\n'}, 'comments': [{'user_name': 'Matt', 'blog_id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'html_content': '<p>as</p>', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464804387.64917, 'id': '001464804387649d2ffe61296614407aa663807768a4c80000', 'content': 'as'}]}
2016-06-02 02:07:15,737 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:15,737 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:15,737 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:15,738 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:15,738 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:15,739 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:24,412 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:07:24,412 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:07:24,412 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:24,413 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:24,413 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:24,414 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:24,414 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:07:24,414 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:07:24,521 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:24,522 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:24,522 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:24,523 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:24,523 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:24,523 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:24,531 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:07:24,531 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:07:24,531 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:24,533 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:24,533 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:24,533 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:24,533 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:07:24,533 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:07:24,534 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:24,534 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:07:24,535 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:07:24,535 - app.py:114 - server_info - response result = {'blogs': [{'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496}, {'name': '测试', 'user_name': 'Matt', 'summary': '测试', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:07:25,713 - app.py:73 - server_info - Request: GET /manage/users
2016-06-02 02:07:25,714 - app.py:82 - server_info - check user: GET /manage/users
2016-06-02 02:07:25,714 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:25,715 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:25,715 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:25,715 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:25,715 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:07:25,715 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_users.html'}
2016-06-02 02:07:25,796 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:25,796 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:25,796 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:25,797 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:25,797 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:25,797 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:25,812 - app.py:73 - server_info - Request: GET /api/users
2016-06-02 02:07:25,812 - app.py:82 - server_info - check user: GET /api/users
2016-06-02 02:07:25,812 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:25,813 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:25,813 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:25,813 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:25,813 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /api/users >}
2016-06-02 02:07:25,813 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` order by created_at desc, ARGS: []
2016-06-02 02:07:25,814 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:07:25,815 - app.py:114 - server_info - response result = {'users': [{'admin': 0, 'image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'email': '723526676@qq.com', 'passwd': '******', 'created_at': 1464781626.95543, 'id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'name': 'kHRYSTAL'}, {'admin': 1, 'image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'email': '1@qq.com', 'passwd': '******', 'created_at': 1464780866.86893, 'id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'name': 'Matt'}]}
2016-06-02 02:07:27,342 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-02 02:07:27,342 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-02 02:07:27,342 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:27,343 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:27,343 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:27,343 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:27,344 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:07:27,344 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_comments.html'}
2016-06-02 02:07:27,425 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:27,425 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:27,426 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:27,426 - app.py:73 - server_info - Request: GET /api/comments
2016-06-02 02:07:27,427 - app.py:82 - server_info - check user: GET /api/comments
2016-06-02 02:07:27,427 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:27,428 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:27,428 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:27,429 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:27,430 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:27,430 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:27,430 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:27,430 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:07:27,430 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `comments`, ARGS: None
2016-06-02 02:07:27,431 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:27,431 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`created_at`,`user_image`,`user_id`,`content` from `comments` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:07:27,432 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:27,432 - app.py:114 - server_info - response result = {'comments': [{'user_name': 'Matt', 'blog_id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464804387.64917, 'id': '001464804387649d2ffe61296614407aa663807768a4c80000', 'content': 'as'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1}
2016-06-02 02:07:31,696 - app.py:73 - server_info - Request: POST /api/comments/001464804387649d2ffe61296614407aa663807768a4c80000/delete
2016-06-02 02:07:31,697 - app.py:82 - server_info - check user: POST /api/comments/001464804387649d2ffe61296614407aa663807768a4c80000/delete
2016-06-02 02:07:31,697 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:31,698 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:31,698 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:31,698 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:31,698 - coroweb.py:215 - server_info - call with args: {'request': <Request POST /api/comments/001464804387649d2ffe61296614407aa663807768a4c80000/delete >, 'id': '001464804387649d2ffe61296614407aa663807768a4c80000'}
2016-06-02 02:07:31,698 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`created_at`,`user_image`,`user_id`,`content` from `comments` where `id` = ?, ARGS: ['001464804387649d2ffe61296614407aa663807768a4c80000']
2016-06-02 02:07:31,699 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:31,699 - orm.py:23 - server_info - SQL: delete from `comments` where `id` = ?, ARGS: ()
2016-06-02 02:07:31,702 - orm.py:72 - server_info - commit success!
2016-06-02 02:07:31,702 - app.py:114 - server_info - response result = {'id': '001464804387649d2ffe61296614407aa663807768a4c80000'}
2016-06-02 02:07:31,734 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-02 02:07:31,734 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-02 02:07:31,735 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:31,736 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:31,736 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:31,736 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:31,736 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:07:31,736 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_comments.html'}
2016-06-02 02:07:31,836 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:31,836 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:31,836 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:31,837 - app.py:73 - server_info - Request: GET /api/comments
2016-06-02 02:07:31,838 - app.py:82 - server_info - check user: GET /api/comments
2016-06-02 02:07:31,838 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:31,838 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:31,839 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:31,839 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:31,840 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:31,840 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:31,840 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:31,840 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:07:31,841 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `comments`, ARGS: None
2016-06-02 02:07:31,841 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:31,841 - app.py:114 - server_info - response result = {'comments': (), 'page': item_count: 0, page_count: 0, page_index: 1, page_size: 20, offset: 0, limit: 0}
2016-06-02 02:07:33,234 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-02 02:07:33,234 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-02 02:07:33,234 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:33,235 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:33,236 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:33,236 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:33,236 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:07:33,236 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_comments.html'}
2016-06-02 02:07:33,312 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:33,313 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:33,313 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:33,314 - app.py:73 - server_info - Request: GET /api/comments
2016-06-02 02:07:33,314 - app.py:82 - server_info - check user: GET /api/comments
2016-06-02 02:07:33,314 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:33,315 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:33,316 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:33,316 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:33,317 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:33,317 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:33,317 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:33,318 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:07:33,318 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `comments`, ARGS: None
2016-06-02 02:07:33,318 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:33,319 - app.py:114 - server_info - response result = {'comments': (), 'page': item_count: 0, page_count: 0, page_index: 1, page_size: 20, offset: 0, limit: 0}
2016-06-02 02:07:39,566 - app.py:73 - server_info - Request: GET /
2016-06-02 02:07:39,566 - app.py:82 - server_info - check user: GET /
2016-06-02 02:07:39,566 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:39,567 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:39,567 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:39,568 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:39,568 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:07:39,568 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:07:39,568 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:39,569 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:07:39,569 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:07:39,570 - app.py:114 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496}, {'name': '测试', 'user_name': 'Matt', 'summary': '测试', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:07:39,649 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:39,649 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:39,649 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:39,650 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:39,652 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:39,652 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:45,924 - app.py:73 - server_info - Request: GET /
2016-06-02 02:07:45,924 - app.py:82 - server_info - check user: GET /
2016-06-02 02:07:45,925 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:45,926 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:45,926 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:45,926 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:45,926 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:07:45,926 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:07:45,927 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:45,927 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:07:45,928 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:07:45,928 - app.py:114 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496}, {'name': '测试', 'user_name': 'Matt', 'summary': '测试', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:07:46,017 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:46,018 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:46,018 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:46,019 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:46,020 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:46,020 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:59,470 - app.py:73 - server_info - Request: GET /
2016-06-02 02:07:59,470 - app.py:82 - server_info - check user: GET /
2016-06-02 02:07:59,471 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:59,472 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:59,472 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:59,472 - app.py:111 - server_info - Response handler...
2016-06-02 02:07:59,472 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:07:59,472 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:07:59,473 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:59,473 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:07:59,474 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:07:59,475 - app.py:114 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496}, {'name': '测试', 'user_name': 'Matt', 'summary': '测试', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:07:59,583 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:59,583 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:07:59,584 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:07:59,585 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:07:59,585 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:07:59,585 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:00,391 - app.py:73 - server_info - Request: GET /
2016-06-02 02:08:00,391 - app.py:82 - server_info - check user: GET /
2016-06-02 02:08:00,391 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:00,392 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:00,393 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:00,393 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:00,393 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:08:00,393 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:08:00,394 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:00,394 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:08:00,395 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:08:00,395 - app.py:114 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496}, {'name': '测试', 'user_name': 'Matt', 'summary': '测试', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:08:00,519 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:08:00,519 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:08:00,519 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:00,521 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:00,521 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:00,521 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:02,416 - app.py:73 - server_info - Request: GET /
2016-06-02 02:08:02,417 - app.py:82 - server_info - check user: GET /
2016-06-02 02:08:02,417 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:02,418 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:02,418 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:02,418 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:02,418 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:08:02,418 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:08:02,419 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:02,419 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:08:02,420 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:08:02,420 - app.py:114 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496}, {'name': '测试', 'user_name': 'Matt', 'summary': '测试', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:08:02,489 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:08:02,489 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:08:02,489 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:02,490 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:02,491 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:02,491 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:04,510 - app.py:73 - server_info - Request: GET /
2016-06-02 02:08:04,510 - app.py:82 - server_info - check user: GET /
2016-06-02 02:08:04,510 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:04,511 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:04,511 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:04,511 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:04,512 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:08:04,512 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:08:04,512 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:04,513 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:08:04,513 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:08:04,514 - app.py:114 - server_info - response result = {'__template__': 'blogs.html', 'blogs': [{'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496}, {'name': '测试', 'user_name': 'Matt', 'summary': '测试', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:08:04,581 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:08:04,581 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:08:04,582 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:04,583 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:04,583 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:04,583 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:08,824 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:08:08,824 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:08:08,824 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:08,825 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:08,826 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:08,826 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:08,826 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:08:08,826 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:08:08,916 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:08:08,916 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:08:08,916 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:08,917 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:08:08,917 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:08:08,917 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:08,918 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:08,919 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:08,919 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:08,920 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:08,921 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:08,921 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:08,921 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:08:08,921 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:08:08,922 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:08,922 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:08:08,923 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:08:08,923 - app.py:114 - server_info - response result = {'blogs': [{'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496}, {'name': '测试', 'user_name': 'Matt', 'summary': '测试', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:08:10,808 - app.py:73 - server_info - Request: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:08:10,809 - app.py:82 - server_info - check user: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:08:10,809 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:10,810 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:10,810 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:10,810 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:10,810 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:08:10,810 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:08:10,811 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:10,811 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`created_at`,`user_image`,`user_id`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:08:10,812 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:08:10,813 - app.py:114 - server_info - response result = {'__template__': 'blog.html', 'blog': {'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'html_content': '<p>测试2</p>\n'}, 'comments': []}
2016-06-02 02:08:10,898 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:08:10,898 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:08:10,899 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:10,900 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:10,900 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:10,900 - app.py:111 - server_info - Response handler...
2016-06-02 02:08:17,533 - app.py:73 - server_info - Request: GET /manage/blogs/edit
2016-06-02 02:08:17,533 - app.py:82 - server_info - check user: GET /manage/blogs/edit
2016-06-02 02:08:17,533 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:08:17,534 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:08:17,535 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:08:17,535 - app.py:111 - server_info - Response handler...
2016-06-02 02:11:42,602 - app.py:73 - server_info - Request: GET /manage/blogs/edit
2016-06-02 02:11:42,602 - app.py:82 - server_info - check user: GET /manage/blogs/edit
2016-06-02 02:11:42,602 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:11:42,603 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:11:42,603 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:11:42,603 - app.py:111 - server_info - Response handler...
2016-06-02 02:11:47,794 - app.py:73 - server_info - Request: GET /manage/blogs/edit
2016-06-02 02:11:47,795 - app.py:82 - server_info - check user: GET /manage/blogs/edit
2016-06-02 02:11:47,795 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:11:47,796 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:11:47,797 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:11:47,797 - app.py:111 - server_info - Response handler...
2016-06-02 02:12:27,705 - app.py:73 - server_info - Request: GET /manage/blogs/modify
2016-06-02 02:12:27,705 - app.py:82 - server_info - check user: GET /manage/blogs/modify
2016-06-02 02:12:27,705 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:12:27,706 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:12:27,706 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:12:27,706 - app.py:111 - server_info - Response handler...
2016-06-02 02:12:36,769 - app.py:73 - server_info - Request: GET /manage/blogs/modify/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:12:36,769 - app.py:82 - server_info - check user: GET /manage/blogs/modify/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:12:36,769 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:12:36,770 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:12:36,770 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:12:36,770 - app.py:111 - server_info - Response handler...
2016-06-02 02:12:36,771 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:12:36,771 - app.py:114 - server_info - response result = {'action': '/api/blogs/modify', '__template__': 'manage_blog_modify.html', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:12:36,866 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:12:36,866 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:12:36,866 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:12:36,867 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:12:36,867 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:12:36,868 - app.py:111 - server_info - Response handler...
2016-06-02 02:12:36,889 - app.py:73 - server_info - Request: GET /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:12:36,889 - app.py:82 - server_info - check user: GET /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:12:36,890 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:12:36,891 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:12:36,891 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:12:36,892 - app.py:111 - server_info - Response handler...
2016-06-02 02:12:36,892 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:12:36,892 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`summary`,`user_image`,`user_id`,`user_name`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:12:36,893 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:12:36,894 - app.py:114 - server_info - response result = {'name': '测试2', 'user_name': 'Matt', 'summary': '测试2', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496}
2016-06-02 02:13:00,013 - app.py:73 - server_info - Request: GET /manage/blogs/edit
2016-06-02 02:13:00,014 - app.py:82 - server_info - check user: GET /manage/blogs/edit
2016-06-02 02:13:00,014 - orm.py:23 - server_info - SQL: select `id`, `admin`,`image`,`email`,`passwd`,`created_at`,`name` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:13:00,015 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:00,015 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:13:00,015 - app.py:111 - server_info - Response handler...
2016-06-02 02:13:44,072 - orm.py:137 - server_info - found model: User (table: users)
2016-06-02 02:13:44,072 - orm.py:144 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-02 02:13:44,072 - orm.py:144 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-02 02:13:44,072 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,072 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,072 - orm.py:144 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,072 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-02 02:13:44,072 - orm.py:144 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,073 - orm.py:137 - server_info - found model: Blog (table: blogs)
2016-06-02 02:13:44,073 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,073 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,073 - orm.py:144 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-02 02:13:44,073 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-02 02:13:44,073 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,073 - orm.py:144 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,073 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-02 02:13:44,073 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-02 02:13:44,073 - orm.py:137 - server_info - found model: Comment (table: comments)
2016-06-02 02:13:44,074 - orm.py:144 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,074 - orm.py:144 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,074 - orm.py:144 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,074 - orm.py:144 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-02 02:13:44,074 - orm.py:144 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-02 02:13:44,074 - orm.py:144 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-02 02:13:44,074 - orm.py:144 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-02 02:13:44,075 - orm.py:27 - server_info - create database connection pool...
2016-06-02 02:13:44,080 - app.py:42 - server_info - init jinja2....
2016-06-02 02:13:44,080 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-02 02:13:44,085 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-02 02:13:48,147 - app.py:73 - server_info - Request: GET /
2016-06-02 02:13:48,148 - app.py:82 - server_info - check user: GET /
2016-06-02 02:13:48,148 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:13:48,149 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:48,149 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:13:48,149 - app.py:111 - server_info - Response handler...
2016-06-02 02:13:48,150 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:13:48,150 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:13:48,150 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:48,150 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:13:48,151 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:13:48,151 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-02 02:13:48,365 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:13:48,366 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:13:48,366 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:13:48,367 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:48,367 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:13:48,367 - app.py:111 - server_info - Response handler...
2016-06-02 02:13:48,593 - app.py:73 - server_info - Request: GET /favicon.ico
2016-06-02 02:13:48,593 - app.py:82 - server_info - check user: GET /favicon.ico
2016-06-02 02:13:48,593 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:13:48,594 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:48,595 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:13:48,595 - app.py:111 - server_info - Response handler...
2016-06-02 02:13:50,310 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:13:50,310 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:13:50,310 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:13:50,311 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:50,312 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:13:50,312 - app.py:111 - server_info - Response handler...
2016-06-02 02:13:50,312 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:13:50,312 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:13:50,402 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:13:50,402 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:13:50,402 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:13:50,403 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:50,404 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:13:50,404 - app.py:111 - server_info - Response handler...
2016-06-02 02:13:50,425 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:13:50,425 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:13:50,425 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:13:50,426 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:50,427 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:13:50,427 - app.py:111 - server_info - Response handler...
2016-06-02 02:13:50,427 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:13:50,427 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:13:50,428 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:50,428 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:13:50,429 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:13:50,429 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:13:52,468 - app.py:73 - server_info - Request: GET /manage/blogs/modify/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:13:52,468 - app.py:82 - server_info - check user: GET /manage/blogs/modify/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:13:52,468 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:13:52,469 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:52,469 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:13:52,469 - app.py:111 - server_info - Response handler...
2016-06-02 02:13:52,469 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:13:52,470 - app.py:114 - server_info - response result = {'action': '/api/blogs/modify', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', '__template__': 'manage_blog_modify.html'}
2016-06-02 02:13:52,546 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:13:52,546 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:13:52,547 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:13:52,548 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:52,548 - app.py:73 - server_info - Request: GET /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:13:52,548 - app.py:82 - server_info - check user: GET /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:13:52,549 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:13:52,549 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:13:52,549 - app.py:111 - server_info - Response handler...
2016-06-02 02:13:52,550 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:52,550 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:13:52,550 - app.py:111 - server_info - Response handler...
2016-06-02 02:13:52,550 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:13:52,551 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:13:52,551 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:13:52,552 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2', 'user_name': 'Matt'}
2016-06-02 02:14:00,464 - app.py:73 - server_info - Request: POST /api/blogs/modify
2016-06-02 02:14:00,464 - app.py:82 - server_info - check user: POST /api/blogs/modify
2016-06-02 02:14:00,465 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:00,466 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:00,466 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:00,466 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:00,467 - coroweb.py:215 - server_info - call with args: {'name': '测试2as', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'request': <Request POST /api/blogs/modify >}
2016-06-02 02:14:00,467 - handlers.py:368 - server_info - 修改的博客的博客ID为：00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:14:00,467 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:14:00,468 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:00,468 - orm.py:23 - server_info - SQL: update `blogs` set `user_name`=?, `summary`=?, `user_image`=?, `user_id`=?, `name`=?, `created_at`=?, `content`=? where `id` = ?, ARGS: ()
2016-06-02 02:14:00,469 - orm.py:72 - server_info - commit success!
2016-06-02 02:14:00,470 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}
2016-06-02 02:14:00,478 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:14:00,479 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:14:00,479 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:00,480 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:00,480 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:00,480 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:00,480 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:00,480 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:14:00,554 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:00,554 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:00,554 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:00,555 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:14:00,555 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:14:00,555 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:00,557 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:00,558 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:00,558 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:00,560 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:00,560 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:00,560 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:00,560 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:14:00,561 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:14:00,561 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:00,562 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:14:00,563 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:14:00,563 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:14:13,234 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-02 02:14:13,234 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-02 02:14:13,234 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:13,235 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:13,236 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:13,236 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:13,236 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:13,236 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_comments.html'}
2016-06-02 02:14:13,320 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:13,320 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:13,320 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:13,321 - app.py:73 - server_info - Request: GET /api/comments
2016-06-02 02:14:13,321 - app.py:82 - server_info - check user: GET /api/comments
2016-06-02 02:14:13,321 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:13,322 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:13,322 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:13,323 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:13,324 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:13,324 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:13,324 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:13,324 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:14:13,324 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `comments`, ARGS: None
2016-06-02 02:14:13,325 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:13,325 - app.py:114 - server_info - response result = {'comments': (), 'page': item_count: 0, page_count: 0, page_index: 1, page_size: 20, offset: 0, limit: 0}
2016-06-02 02:14:15,839 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:14:15,839 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:14:15,840 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:15,841 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:15,841 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:15,841 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:15,841 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:15,841 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:14:15,936 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:15,936 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:15,936 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:15,937 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:14:15,938 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:14:15,938 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:15,939 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:15,939 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:15,940 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:15,941 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:15,941 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:15,941 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:15,941 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:14:15,942 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:14:15,942 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:15,943 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:14:15,944 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:14:15,944 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:14:17,149 - app.py:73 - server_info - Request: GET /
2016-06-02 02:14:17,149 - app.py:82 - server_info - check user: GET /
2016-06-02 02:14:17,149 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:17,150 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:17,150 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:17,150 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:17,151 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:17,151 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:14:17,151 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:17,151 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:14:17,152 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:14:17,152 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-02 02:14:17,261 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:17,261 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:17,261 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:17,263 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:17,263 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:17,263 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:18,773 - app.py:73 - server_info - Request: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-02 02:14:18,773 - app.py:82 - server_info - check user: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-02 02:14:18,773 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:18,774 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:18,774 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:18,775 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:18,775 - coroweb.py:215 - server_info - call with args: {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000'}
2016-06-02 02:14:18,775 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:14:18,776 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:18,776 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:14:18,777 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:14:18,781 - app.py:114 - server_info - response result = {'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'html_content': '<p>测试</p>\n', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:14:18,879 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:18,879 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:18,880 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:18,881 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:18,881 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:18,882 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:24,815 - app.py:73 - server_info - Request: POST /api/blogs/0014647816770511bc4f896e60f46beb4f7798df92a6baa000/comments
2016-06-02 02:14:24,815 - app.py:82 - server_info - check user: POST /api/blogs/0014647816770511bc4f896e60f46beb4f7798df92a6baa000/comments
2016-06-02 02:14:24,816 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:24,817 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:24,817 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:24,817 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:24,818 - coroweb.py:215 - server_info - call with args: {'content': 'asasas', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'request': <Request POST /api/blogs/0014647816770511bc4f896e60f46beb4f7798df92a6baa000/comments >}
2016-06-02 02:14:24,818 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:14:24,819 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:24,819 - orm.py:194 - server_info - using default value for created_at: 1464804864.819843
2016-06-02 02:14:24,820 - orm.py:194 - server_info - using default value for id: 001464804864819b3a9115f633542c8b2ce954866c79601000
2016-06-02 02:14:24,820 - orm.py:23 - server_info - SQL: insert into `comments` (`user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-02 02:14:24,822 - orm.py:72 - server_info - commit success!
2016-06-02 02:14:24,822 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': 'asasas', 'id': '001464804864819b3a9115f633542c8b2ce954866c79601000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464804864.819843, 'user_name': 'Matt'}
2016-06-02 02:14:24,831 - app.py:73 - server_info - Request: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-02 02:14:24,831 - app.py:82 - server_info - check user: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-02 02:14:24,831 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:24,832 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:24,832 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:24,832 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:24,833 - coroweb.py:215 - server_info - call with args: {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000'}
2016-06-02 02:14:24,833 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:14:24,833 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:24,834 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:14:24,834 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:24,835 - app.py:114 - server_info - response result = {'comments': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_name': 'Matt', 'html_content': '<p>asasas</p>', 'id': '001464804864819b3a9115f633542c8b2ce954866c79601000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464804864.81984, 'content': 'asasas'}], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'html_content': '<p>测试</p>\n', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:14:24,933 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:24,933 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:24,933 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:24,935 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:24,935 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:24,935 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:26,372 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-02 02:14:26,372 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-02 02:14:26,372 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:26,374 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:26,374 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:26,374 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:26,374 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:26,374 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_comments.html'}
2016-06-02 02:14:26,448 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:26,448 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:26,448 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:26,449 - app.py:73 - server_info - Request: GET /api/comments
2016-06-02 02:14:26,449 - app.py:82 - server_info - check user: GET /api/comments
2016-06-02 02:14:26,449 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:26,450 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:26,450 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:26,450 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:26,451 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:26,452 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:26,452 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:26,452 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:14:26,452 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `comments`, ARGS: None
2016-06-02 02:14:26,453 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:26,453 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:14:26,454 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:26,454 - app.py:114 - server_info - response result = {'comments': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_name': 'Matt', 'id': '001464804864819b3a9115f633542c8b2ce954866c79601000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464804864.81984, 'content': 'asasas'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1}
2016-06-02 02:14:30,435 - app.py:73 - server_info - Request: GET /manage/users
2016-06-02 02:14:30,436 - app.py:82 - server_info - check user: GET /manage/users
2016-06-02 02:14:30,436 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:30,437 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:30,437 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:30,437 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:30,437 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:30,437 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_users.html'}
2016-06-02 02:14:30,511 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:30,512 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:30,512 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:30,513 - app.py:73 - server_info - Request: GET /api/users
2016-06-02 02:14:30,513 - app.py:82 - server_info - check user: GET /api/users
2016-06-02 02:14:30,513 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:30,514 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:30,514 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:30,515 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:30,516 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:30,516 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:30,517 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:30,517 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /api/users >}
2016-06-02 02:14:30,517 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` order by created_at desc, ARGS: []
2016-06-02 02:14:30,518 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:14:30,518 - app.py:114 - server_info - response result = {'users': [{'name': 'kHRYSTAL', 'admin': 0, 'id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'passwd': '******', 'created_at': 1464781626.95543, 'email': '723526676@qq.com'}, {'name': 'Matt', 'admin': 1, 'id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'passwd': '******', 'created_at': 1464780866.86893, 'email': '1@qq.com'}]}
2016-06-02 02:14:35,867 - app.py:73 - server_info - Request: GET /manage/users
2016-06-02 02:14:35,867 - app.py:82 - server_info - check user: GET /manage/users
2016-06-02 02:14:35,867 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:35,868 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:35,868 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:35,869 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:35,869 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:35,869 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_users.html'}
2016-06-02 02:14:35,952 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:35,952 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:35,952 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:35,953 - app.py:73 - server_info - Request: GET /api/users
2016-06-02 02:14:35,953 - app.py:82 - server_info - check user: GET /api/users
2016-06-02 02:14:35,954 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:35,955 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:35,955 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:35,955 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:35,957 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:35,957 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:35,958 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:35,958 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /api/users >}
2016-06-02 02:14:35,958 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` order by created_at desc, ARGS: []
2016-06-02 02:14:35,959 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:14:35,959 - app.py:114 - server_info - response result = {'users': [{'name': 'kHRYSTAL', 'admin': 0, 'id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'passwd': '******', 'created_at': 1464781626.95543, 'email': '723526676@qq.com'}, {'name': 'Matt', 'admin': 1, 'id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'passwd': '******', 'created_at': 1464780866.86893, 'email': '1@qq.com'}]}
2016-06-02 02:14:36,921 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:14:36,921 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:14:36,921 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:36,922 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:36,922 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:36,922 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:36,922 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:36,923 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:14:37,050 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:37,051 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:37,051 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:37,052 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:14:37,052 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:14:37,052 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:37,053 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:37,053 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:37,054 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:37,056 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:37,056 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:37,057 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:37,057 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:14:37,057 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:14:37,058 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:37,058 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:14:37,059 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:14:37,059 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:14:39,639 - app.py:73 - server_info - Request: GET /
2016-06-02 02:14:39,639 - app.py:82 - server_info - check user: GET /
2016-06-02 02:14:39,640 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:39,641 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:39,641 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:39,641 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:39,641 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:39,641 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:14:39,642 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:39,642 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:14:39,643 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:14:39,643 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-02 02:14:39,749 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:39,749 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:39,750 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:39,751 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:39,751 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:39,751 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:42,547 - app.py:73 - server_info - Request: GET /
2016-06-02 02:14:42,547 - app.py:82 - server_info - check user: GET /
2016-06-02 02:14:42,548 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:42,549 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:42,549 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:42,549 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:42,549 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:42,550 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:14:42,550 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:42,551 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:14:42,552 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:14:42,552 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-02 02:14:42,618 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:42,618 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:42,618 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:42,619 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:42,619 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:42,619 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:51,043 - app.py:73 - server_info - Request: GET /signout
2016-06-02 02:14:51,043 - app.py:82 - server_info - check user: GET /signout
2016-06-02 02:14:51,043 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:14:51,044 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:51,044 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:14:51,044 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:51,044 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-02 02:14:51,045 - app.py:114 - server_info - response result = Found
2016-06-02 02:14:51,048 - app.py:73 - server_info - Request: GET /
2016-06-02 02:14:51,048 - app.py:82 - server_info - check user: GET /
2016-06-02 02:14:51,048 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:51,048 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:51,048 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:14:51,049 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:51,049 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:14:51,050 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:14:51,050 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-02 02:14:51,134 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:51,134 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:51,134 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:52,448 - app.py:73 - server_info - Request: GET /signin
2016-06-02 02:14:52,448 - app.py:82 - server_info - check user: GET /signin
2016-06-02 02:14:52,448 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:52,449 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:52,449 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-02 02:14:52,520 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:52,520 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:52,520 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:56,730 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-02 02:14:56,730 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-02 02:14:56,730 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:56,730 - coroweb.py:215 - server_info - call with args: {'passwd': '687b72d3c1423998b8d42779376f40d5e495f92a', 'email': '723526676@qq.com'}
2016-06-02 02:14:56,730 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where email=?, ARGS: ['723526676@qq.com']
2016-06-02 02:14:56,731 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:56,732 - handlers.py:215 - server_info - user password: 9e2b45bdfa3bf76d5476acaacc0a3f0e2b505e78
2016-06-02 02:14:56,732 - handlers.py:216 - server_info - server password: 9e2b45bdfa3bf76d5476acaacc0a3f0e2b505e78
2016-06-02 02:14:56,732 - app.py:114 - server_info - response result = <Response OK not started>
2016-06-02 02:14:56,742 - app.py:73 - server_info - Request: GET /
2016-06-02 02:14:56,742 - app.py:82 - server_info - check user: GET /
2016-06-02 02:14:56,742 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:14:56,743 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:56,743 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:14:56,743 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:56,744 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:14:56,744 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:14:56,744 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:56,745 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:14:56,746 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:14:56,746 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-02 02:14:56,857 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:56,857 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:56,857 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:14:56,858 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:56,859 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:14:56,859 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:59,340 - app.py:73 - server_info - Request: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:14:59,340 - app.py:82 - server_info - check user: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:14:59,340 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:14:59,341 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:59,342 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:14:59,342 - app.py:111 - server_info - Response handler...
2016-06-02 02:14:59,342 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:14:59,342 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:14:59,343 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:59,343 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:14:59,344 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:14:59,344 - app.py:114 - server_info - response result = {'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'html_content': '<p>测试2as</p>\n', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:14:59,477 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:59,477 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:14:59,477 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:14:59,478 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:14:59,478 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:14:59,478 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:02,522 - app.py:73 - server_info - Request: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/comments
2016-06-02 02:15:02,522 - app.py:82 - server_info - check user: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/comments
2016-06-02 02:15:02,522 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:15:02,523 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:02,524 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:15:02,524 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:02,524 - coroweb.py:215 - server_info - call with args: {'content': 'asasasasasa', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'request': <Request POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/comments >}
2016-06-02 02:15:02,524 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:15:02,525 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:02,525 - orm.py:194 - server_info - using default value for created_at: 1464804902.525757
2016-06-02 02:15:02,525 - orm.py:194 - server_info - using default value for id: 00146480490252599b5702d0e004045bd502c1cee26aa1a000
2016-06-02 02:15:02,526 - orm.py:23 - server_info - SQL: insert into `comments` (`user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-02 02:15:02,528 - orm.py:72 - server_info - commit success!
2016-06-02 02:15:02,528 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'content': 'asasasasasa', 'id': '00146480490252599b5702d0e004045bd502c1cee26aa1a000', 'blog_id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'created_at': 1464804902.525757, 'user_name': 'kHRYSTAL'}
2016-06-02 02:15:02,536 - app.py:73 - server_info - Request: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:15:02,536 - app.py:82 - server_info - check user: GET /blog/00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:15:02,537 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:15:02,538 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:02,538 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:15:02,538 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:02,538 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:15:02,538 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:15:02,539 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:02,539 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:15:02,540 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:02,540 - app.py:114 - server_info - response result = {'comments': [{'user_image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'user_name': 'kHRYSTAL', 'html_content': '<p>asasasasasa</p>', 'id': '00146480490252599b5702d0e004045bd502c1cee26aa1a000', 'blog_id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'created_at': 1464804902.52576, 'content': 'asasasasasa'}], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'html_content': '<p>测试2as</p>\n', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:15:02,613 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:02,613 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:02,613 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:15:02,614 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:02,614 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:15:02,614 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:07,548 - app.py:73 - server_info - Request: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-02 02:15:07,548 - app.py:82 - server_info - check user: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-02 02:15:07,548 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:15:07,549 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:07,549 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:15:07,549 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:07,549 - coroweb.py:215 - server_info - call with args: {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000'}
2016-06-02 02:15:07,550 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:15:07,550 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:07,551 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:15:07,552 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:07,552 - app.py:114 - server_info - response result = {'comments': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_name': 'Matt', 'html_content': '<p>asasas</p>', 'id': '001464804864819b3a9115f633542c8b2ce954866c79601000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464804864.81984, 'content': 'asasas'}], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'html_content': '<p>测试</p>\n', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:15:07,654 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:07,654 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:07,655 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:15:07,656 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:07,656 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:15:07,656 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:10,693 - app.py:73 - server_info - Request: POST /api/blogs/0014647816770511bc4f896e60f46beb4f7798df92a6baa000/comments
2016-06-02 02:15:10,693 - app.py:82 - server_info - check user: POST /api/blogs/0014647816770511bc4f896e60f46beb4f7798df92a6baa000/comments
2016-06-02 02:15:10,694 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:15:10,695 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:10,695 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:15:10,695 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:10,695 - coroweb.py:215 - server_info - call with args: {'content': 'asasasa', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'request': <Request POST /api/blogs/0014647816770511bc4f896e60f46beb4f7798df92a6baa000/comments >}
2016-06-02 02:15:10,695 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:15:10,696 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:10,696 - orm.py:194 - server_info - using default value for created_at: 1464804910.696592
2016-06-02 02:15:10,696 - orm.py:194 - server_info - using default value for id: 001464804910696583a888699c04ec09381b5a710d0806e000
2016-06-02 02:15:10,696 - orm.py:23 - server_info - SQL: insert into `comments` (`user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-02 02:15:10,699 - orm.py:72 - server_info - commit success!
2016-06-02 02:15:10,699 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'content': 'asasasa', 'id': '001464804910696583a888699c04ec09381b5a710d0806e000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'created_at': 1464804910.696592, 'user_name': 'kHRYSTAL'}
2016-06-02 02:15:10,708 - app.py:73 - server_info - Request: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-02 02:15:10,708 - app.py:82 - server_info - check user: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-02 02:15:10,708 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:15:10,709 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:10,710 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:15:10,710 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:10,710 - coroweb.py:215 - server_info - call with args: {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000'}
2016-06-02 02:15:10,710 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:15:10,710 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:10,711 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:15:10,712 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:15:10,712 - app.py:114 - server_info - response result = {'comments': [{'user_image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'user_name': 'kHRYSTAL', 'html_content': '<p>asasasa</p>', 'id': '001464804910696583a888699c04ec09381b5a710d0806e000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'created_at': 1464804910.69659, 'content': 'asasasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_name': 'Matt', 'html_content': '<p>asasas</p>', 'id': '001464804864819b3a9115f633542c8b2ce954866c79601000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464804864.81984, 'content': 'asasas'}], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'html_content': '<p>测试</p>\n', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:15:10,814 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:10,815 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:10,815 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:15:10,816 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:10,816 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:15:10,816 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:18,440 - app.py:73 - server_info - Request: GET /signout
2016-06-02 02:15:18,440 - app.py:82 - server_info - check user: GET /signout
2016-06-02 02:15:18,440 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-02 02:15:18,441 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:18,441 - app.py:88 - server_info - set current user: 723526676@qq.com
2016-06-02 02:15:18,441 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:18,441 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-02 02:15:18,442 - app.py:114 - server_info - response result = Found
2016-06-02 02:15:18,444 - app.py:73 - server_info - Request: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-02 02:15:18,444 - app.py:82 - server_info - check user: GET /blog/0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-02 02:15:18,444 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:18,444 - coroweb.py:215 - server_info - call with args: {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000'}
2016-06-02 02:15:18,445 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:15:18,445 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:18,446 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:15:18,446 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:15:18,447 - app.py:114 - server_info - response result = {'comments': [{'user_image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'user_name': 'kHRYSTAL', 'html_content': '<p>asasasa</p>', 'id': '001464804910696583a888699c04ec09381b5a710d0806e000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'created_at': 1464804910.69659, 'content': 'asasasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_name': 'Matt', 'html_content': '<p>asasas</p>', 'id': '001464804864819b3a9115f633542c8b2ce954866c79601000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464804864.81984, 'content': 'asasas'}], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'html_content': '<p>测试</p>\n', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:15:18,555 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:18,555 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:18,556 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:23,848 - app.py:73 - server_info - Request: GET /signin
2016-06-02 02:15:23,849 - app.py:82 - server_info - check user: GET /signin
2016-06-02 02:15:23,849 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:23,849 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:15:23,849 - app.py:114 - server_info - response result = {'__template__': 'signin.html'}
2016-06-02 02:15:23,927 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:23,927 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:23,927 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:26,852 - app.py:73 - server_info - Request: POST /api/authenticate
2016-06-02 02:15:26,852 - app.py:82 - server_info - check user: POST /api/authenticate
2016-06-02 02:15:26,853 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:26,853 - coroweb.py:215 - server_info - call with args: {'passwd': '735fcf0d1ae7325c203cf422888f43f25db40876', 'email': '1@qq.com'}
2016-06-02 02:15:26,853 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where email=?, ARGS: ['1@qq.com']
2016-06-02 02:15:26,854 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:26,855 - handlers.py:215 - server_info - user password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-02 02:15:26,855 - handlers.py:216 - server_info - server password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-02 02:15:26,855 - app.py:114 - server_info - response result = <Response OK not started>
2016-06-02 02:15:26,864 - app.py:73 - server_info - Request: GET /
2016-06-02 02:15:26,865 - app.py:82 - server_info - check user: GET /
2016-06-02 02:15:26,865 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:26,866 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:26,866 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:26,866 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:26,866 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:15:26,866 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:15:26,867 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:26,867 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:15:26,868 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:15:26,868 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-02 02:15:26,940 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:26,940 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:26,941 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:26,942 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:26,942 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:26,943 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:29,685 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-02 02:15:29,685 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-02 02:15:29,686 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:29,687 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:29,687 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:29,688 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:29,688 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:15:29,688 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_comments.html'}
2016-06-02 02:15:29,775 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:29,775 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:29,775 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:29,776 - app.py:73 - server_info - Request: GET /api/comments
2016-06-02 02:15:29,776 - app.py:82 - server_info - check user: GET /api/comments
2016-06-02 02:15:29,777 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:29,777 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:29,778 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:29,778 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:29,779 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:29,779 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:29,780 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:29,780 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:15:29,780 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `comments`, ARGS: None
2016-06-02 02:15:29,780 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:29,781 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` order by created_at desc limit ?, ?, ARGS: [0, 3]
2016-06-02 02:15:29,781 - orm.py:57 - server_info - rows returned: 3
2016-06-02 02:15:29,782 - app.py:114 - server_info - response result = {'comments': [{'user_image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'user_name': 'kHRYSTAL', 'id': '001464804910696583a888699c04ec09381b5a710d0806e000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'created_at': 1464804910.69659, 'content': 'asasasa'}, {'user_image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'user_name': 'kHRYSTAL', 'id': '00146480490252599b5702d0e004045bd502c1cee26aa1a000', 'blog_id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'created_at': 1464804902.52576, 'content': 'asasasasasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_name': 'Matt', 'id': '001464804864819b3a9115f633542c8b2ce954866c79601000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464804864.81984, 'content': 'asasas'}], 'page': item_count: 3, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 3}
2016-06-02 02:15:31,712 - app.py:73 - server_info - Request: GET /manage/users
2016-06-02 02:15:31,712 - app.py:82 - server_info - check user: GET /manage/users
2016-06-02 02:15:31,713 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:31,714 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:31,714 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:31,714 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:31,714 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:15:31,714 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_users.html'}
2016-06-02 02:15:31,808 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:31,808 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:31,809 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:31,809 - app.py:73 - server_info - Request: GET /api/users
2016-06-02 02:15:31,809 - app.py:82 - server_info - check user: GET /api/users
2016-06-02 02:15:31,810 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:31,811 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:31,811 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:31,811 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:31,812 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:31,813 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:31,813 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:31,813 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /api/users >}
2016-06-02 02:15:31,813 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` order by created_at desc, ARGS: []
2016-06-02 02:15:31,814 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:15:31,814 - app.py:114 - server_info - response result = {'users': [{'name': 'kHRYSTAL', 'admin': 0, 'id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'passwd': '******', 'created_at': 1464781626.95543, 'email': '723526676@qq.com'}, {'name': 'Matt', 'admin': 1, 'id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'passwd': '******', 'created_at': 1464780866.86893, 'email': '1@qq.com'}]}
2016-06-02 02:15:32,614 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:15:32,614 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:15:32,614 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:32,615 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:32,615 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:32,615 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:32,615 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:15:32,615 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:15:32,709 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:32,709 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:32,710 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:32,710 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:15:32,711 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:15:32,711 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:32,711 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:32,712 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:32,712 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:32,713 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:32,713 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:32,713 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:32,714 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:15:32,714 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:15:32,714 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:32,715 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:15:32,715 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:15:32,716 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:15:34,647 - app.py:73 - server_info - Request: GET /
2016-06-02 02:15:34,647 - app.py:82 - server_info - check user: GET /
2016-06-02 02:15:34,648 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:34,649 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:34,649 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:34,649 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:34,649 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:15:34,649 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:15:34,650 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:34,650 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:15:34,651 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:15:34,651 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-02 02:15:34,740 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:34,740 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:34,740 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:34,741 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:34,741 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:34,741 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:35,732 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:15:35,732 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:15:35,732 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:35,733 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:35,733 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:35,733 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:35,733 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:15:35,733 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:15:35,804 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:35,804 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:35,804 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:35,805 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:15:35,805 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:15:35,805 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:35,806 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:35,806 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:35,806 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:35,807 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:35,808 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:35,808 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:35,808 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:15:35,808 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:15:35,809 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:35,809 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:15:35,810 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:15:35,810 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:15:42,300 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:15:42,300 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:15:42,300 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:42,301 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:42,301 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:42,302 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:42,302 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:15:42,302 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:15:42,366 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:42,367 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:42,367 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:42,368 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:15:42,368 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:15:42,368 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:42,369 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:42,369 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:42,369 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:42,370 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:42,370 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:42,370 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:42,370 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:15:42,371 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:15:42,371 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:42,371 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:15:42,372 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:15:42,373 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:15:43,650 - app.py:73 - server_info - Request: GET /manage/blogs/create
2016-06-02 02:15:43,651 - app.py:82 - server_info - check user: GET /manage/blogs/create
2016-06-02 02:15:43,651 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:43,652 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:43,652 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:43,652 - app.py:111 - server_info - Response handler...
2016-06-02 02:15:43,652 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:15:43,652 - app.py:114 - server_info - response result = {'action': '/api/blogs', 'id': '', '__template__': 'manage_blog_edit.html'}
2016-06-02 02:15:43,746 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:43,747 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:15:43,747 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:15:43,748 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:15:43,749 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:15:43,749 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:15,195 - app.py:73 - server_info - Request: POST /api/blogs
2016-06-02 02:17:15,196 - app.py:82 - server_info - check user: POST /api/blogs
2016-06-02 02:17:15,196 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:15,198 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:15,200 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:15,200 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:15,201 - coroweb.py:215 - server_info - call with args: {'name': 'Markdown test', 'content': '# KRecyclerView\n\n------\n\nKRecyclerView is a RecyclerView,\ndependent on [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) and [HeaderAndFooterRecyclerView](https://github.com/cundong/HeaderAndFooterRecyclerView)\n,it\'s support：\n\n> * pull to refresh\n> * load more\n> * showEmptyView\n> * addHeaderView\n> * support sticky header(need fix,couldn\'t support click)\n> * support multi-type when use sticky header\n\nlater:\n> * can modify load more UI  \n\n\nit\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use [RecyclerViewAdapterDelegate][3]\n\n\n##screenshot\n![ss-1](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif)\n![ss-2](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif)\n![ss-3](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif)\n![ss-4](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif)\n![ss-5](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif)\n![ss-6](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif)\n![ss-7](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif)\n![ss-8](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif)\n\n\n##Setup with Android Studio\n```\n    allprojects {\n    \t\trepositories {\n    \t\t\t...\n    \t\t\tmaven { url "https://jitpack.io" }\n    \t\t}\n    \t}\n```\n```\n    \tdependencies {\n    \t        compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n    \t}\n```\n\nthe library minSdkVersion is 13 and targetSdkVersion is 23\n\n------\n\n###Attribute\n\n```xml\n    <me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view">\n```\n\n### Usage\n\n####init\n```java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter<>\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column <= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n```\n\n### setRefreshHeader\n\nyou can watch [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) to know how to use\n\nsample has a custom refresh header\n\n```java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n```\n\nif you want to use **SwipRefreshLayout** you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }\n\n    @Override\n    public void onRefresh() {\n        swipeRefreshLayout.setRefreshing(true);\n        //this method will set page=1 and called loadData(int page)\n        kRecyclerView.setPageAndRefresh(1);\n        swipeRefreshLayout.setRefreshing(true);\n    }\n\n```\n###show|hide EmptyView\n```java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n```\n\n###set KRecycerView reenable load more or cant load more\n```java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n```\n###addheaderView\n```java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n```\n\n\n###more usage can watch sample\n\n#Thanks\n[@liaohuqiu][1]\n[@cundong][2]\n\n\n\n[1]:https://github.com/liaohuqiu\n[2]:https://github.com/cundong\n[3]:https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate\n', 'request': <Request POST /api/blogs >, 'summary': 'markdown'}
2016-06-02 02:17:15,201 - orm.py:194 - server_info - using default value for created_at: 1464805035.201572
2016-06-02 02:17:15,201 - orm.py:194 - server_info - using default value for id: 001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:17:15,201 - orm.py:23 - server_info - SQL: insert into `blogs` (`user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content`, `id`) values (?, ?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-02 02:17:15,204 - orm.py:72 - server_info - commit success!
2016-06-02 02:17:15,204 - app.py:114 - server_info - response result = {'name': 'Markdown test', 'content': '# KRecyclerView\n\n------\n\nKRecyclerView is a RecyclerView,\ndependent on [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) and [HeaderAndFooterRecyclerView](https://github.com/cundong/HeaderAndFooterRecyclerView)\n,it\'s support：\n\n> * pull to refresh\n> * load more\n> * showEmptyView\n> * addHeaderView\n> * support sticky header(need fix,couldn\'t support click)\n> * support multi-type when use sticky header\n\nlater:\n> * can modify load more UI  \n\n\nit\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use [RecyclerViewAdapterDelegate][3]\n\n\n##screenshot\n![ss-1](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif)\n![ss-2](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif)\n![ss-3](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif)\n![ss-4](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif)\n![ss-5](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif)\n![ss-6](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif)\n![ss-7](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif)\n![ss-8](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif)\n\n\n##Setup with Android Studio\n```\n    allprojects {\n    \t\trepositories {\n    \t\t\t...\n    \t\t\tmaven { url "https://jitpack.io" }\n    \t\t}\n    \t}\n```\n```\n    \tdependencies {\n    \t        compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n    \t}\n```\n\nthe library minSdkVersion is 13 and targetSdkVersion is 23\n\n------\n\n###Attribute\n\n```xml\n    <me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view">\n```\n\n### Usage\n\n####init\n```java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter<>\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column <= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n```\n\n### setRefreshHeader\n\nyou can watch [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) to know how to use\n\nsample has a custom refresh header\n\n```java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n```\n\nif you want to use **SwipRefreshLayout** you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }\n\n    @Override\n    public void onRefresh() {\n        swipeRefreshLayout.setRefreshing(true);\n        //this method will set page=1 and called loadData(int page)\n        kRecyclerView.setPageAndRefresh(1);\n        swipeRefreshLayout.setRefreshing(true);\n    }\n\n```\n###show|hide EmptyView\n```java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n```\n\n###set KRecycerView reenable load more or cant load more\n```java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n```\n###addheaderView\n```java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n```\n\n\n###more usage can watch sample\n\n#Thanks\n[@liaohuqiu][1]\n[@cundong][2]\n\n\n\n[1]:https://github.com/liaohuqiu\n[2]:https://github.com/cundong\n[3]:https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'markdown', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.201572, 'user_name': 'Matt'}
2016-06-02 02:17:15,217 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:17:15,218 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:17:15,218 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:15,220 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:15,220 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:15,220 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:15,221 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:17:15,221 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:17:15,394 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:17:15,395 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:17:15,395 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:15,397 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:15,397 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:15,398 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:15,411 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:17:15,411 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:17:15,411 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:15,413 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:15,413 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:15,413 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:15,414 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:17:15,414 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:17:15,414 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:15,415 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 3]
2016-06-02 02:17:15,416 - orm.py:57 - server_info - rows returned: 3
2016-06-02 02:17:15,416 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '# KRecyclerView\n\n------\n\nKRecyclerView is a RecyclerView,\ndependent on [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) and [HeaderAndFooterRecyclerView](https://github.com/cundong/HeaderAndFooterRecyclerView)\n,it\'s support：\n\n> * pull to refresh\n> * load more\n> * showEmptyView\n> * addHeaderView\n> * support sticky header(need fix,couldn\'t support click)\n> * support multi-type when use sticky header\n\nlater:\n> * can modify load more UI  \n\n\nit\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use [RecyclerViewAdapterDelegate][3]\n\n\n##screenshot\n![ss-1](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif)\n![ss-2](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif)\n![ss-3](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif)\n![ss-4](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif)\n![ss-5](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif)\n![ss-6](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif)\n![ss-7](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif)\n![ss-8](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif)\n\n\n##Setup with Android Studio\n```\n    allprojects {\n    \t\trepositories {\n    \t\t\t...\n    \t\t\tmaven { url "https://jitpack.io" }\n    \t\t}\n    \t}\n```\n```\n    \tdependencies {\n    \t        compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n    \t}\n```\n\nthe library minSdkVersion is 13 and targetSdkVersion is 23\n\n------\n\n###Attribute\n\n```xml\n    <me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view">\n```\n\n### Usage\n\n####init\n```java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter<>\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column <= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n```\n\n### setRefreshHeader\n\nyou can watch [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) to know how to use\n\nsample has a custom refresh header\n\n```java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n```\n\nif you want to use **SwipRefreshLayout** you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }\n\n    @Override\n    public void onRefresh() {\n        swipeRefreshLayout.setRefreshing(true);\n        //this method will set page=1 and called loadData(int page)\n        kRecyclerView.setPageAndRefresh(1);\n        swipeRefreshLayout.setRefreshing(true);\n    }\n\n```\n###show|hide EmptyView\n```java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n```\n\n###set KRecycerView reenable load more or cant load more\n```java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n```\n###addheaderView\n```java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n```\n\n\n###more usage can watch sample\n\n#Thanks\n[@liaohuqiu][1]\n[@cundong][2]\n\n\n\n[1]:https://github.com/liaohuqiu\n[2]:https://github.com/cundong\n[3]:https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'markdown', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Markdown test', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试2as', 'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'summary': '测试2as', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464782836.98496, 'name': '测试2as', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 3, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 3}
2016-06-02 02:17:17,602 - app.py:73 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:17:17,602 - app.py:82 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:17:17,603 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:17,605 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:17,605 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:17,606 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:17,606 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:17:17,606 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:17:17,607 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:17,607 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:17:17,608 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:17:17,642 - app.py:114 - server_info - response result = {'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '# KRecyclerView\n\n------\n\nKRecyclerView is a RecyclerView,\ndependent on [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) and [HeaderAndFooterRecyclerView](https://github.com/cundong/HeaderAndFooterRecyclerView)\n,it\'s support：\n\n> * pull to refresh\n> * load more\n> * showEmptyView\n> * addHeaderView\n> * support sticky header(need fix,couldn\'t support click)\n> * support multi-type when use sticky header\n\nlater:\n> * can modify load more UI  \n\n\nit\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use [RecyclerViewAdapterDelegate][3]\n\n\n##screenshot\n![ss-1](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif)\n![ss-2](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif)\n![ss-3](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif)\n![ss-4](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif)\n![ss-5](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif)\n![ss-6](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif)\n![ss-7](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif)\n![ss-8](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif)\n\n\n##Setup with Android Studio\n```\n    allprojects {\n    \t\trepositories {\n    \t\t\t...\n    \t\t\tmaven { url "https://jitpack.io" }\n    \t\t}\n    \t}\n```\n```\n    \tdependencies {\n    \t        compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n    \t}\n```\n\nthe library minSdkVersion is 13 and targetSdkVersion is 23\n\n------\n\n###Attribute\n\n```xml\n    <me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view">\n```\n\n### Usage\n\n####init\n```java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter<>\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column <= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n```\n\n### setRefreshHeader\n\nyou can watch [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) to know how to use\n\nsample has a custom refresh header\n\n```java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n```\n\nif you want to use **SwipRefreshLayout** you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }\n\n    @Override\n    public void onRefresh() {\n        swipeRefreshLayout.setRefreshing(true);\n        //this method will set page=1 and called loadData(int page)\n        kRecyclerView.setPageAndRefresh(1);\n        swipeRefreshLayout.setRefreshing(true);\n    }\n\n```\n###show|hide EmptyView\n```java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n```\n\n###set KRecycerView reenable load more or cant load more\n```java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n```\n###addheaderView\n```java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n```\n\n\n###more usage can watch sample\n\n#Thanks\n[@liaohuqiu][1]\n[@cundong][2]\n\n\n\n[1]:https://github.com/liaohuqiu\n[2]:https://github.com/cundong\n[3]:https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate', 'html_content': '<h1>KRecyclerView</h1>\n\n<hr />\n\n<p>KRecyclerView is a RecyclerView,\ndependent on <a href="https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh">Ultra-Pull-To-Refresh</a> and <a href="https://github.com/cundong/HeaderAndFooterRecyclerView">HeaderAndFooterRecyclerView</a>\n,it\'s support：</p>\n\n<blockquote>\n  <ul>\n  <li>pull to refresh</li>\n  <li>load more</li>\n  <li>showEmptyView</li>\n  <li>addHeaderView</li>\n  <li>support sticky header(need fix,couldn\'t support click)</li>\n  <li>support multi-type when use sticky header</li>\n  </ul>\n</blockquote>\n\n<p>later:</p>\n\n<blockquote>\n  <ul>\n  <li>can modify load more UI  </li>\n  </ul>\n</blockquote>\n\n<p>it\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use <a href="https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate">RecyclerViewAdapterDelegate</a></p>\n\n<h2>screenshot</h2>\n\n<p><img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif" alt="ss-1" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif" alt="ss-2" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif" alt="ss-3" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif" alt="ss-4" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif" alt="ss-5" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif" alt="ss-6" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif" alt="ss-7" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif" alt="ss-8" /></p>\n\n<h2>Setup with Android Studio</h2>\n\n<p><code>\n    allprojects {\n            repositories {\n                ...\n                maven { url "https://jitpack.io" }\n            }\n        }\n</code>\n<code>\n        dependencies {\n                compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n        }\n</code></p>\n\n<p>the library minSdkVersion is 13 and targetSdkVersion is 23</p>\n\n<hr />\n\n<h3>Attribute</h3>\n\n<p><code>xml\n    &lt;me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view"&gt;\n</code></p>\n\n<h3>Usage</h3>\n\n<h4>init</h4>\n\n<p><code>java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter&lt;&gt;\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column &lt;= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n</code></p>\n\n<h3>setRefreshHeader</h3>\n\n<p>you can watch <a href="https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh">Ultra-Pull-To-Refresh</a> to know how to use</p>\n\n<p>sample has a custom refresh header</p>\n\n<p><code>java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n</code></p>\n\n<p>if you want to use <strong>SwipRefreshLayout</strong> you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }</p>\n\n<pre><code>@Override\npublic void onRefresh() {\n    swipeRefreshLayout.setRefreshing(true);\n    //this method will set page=1 and called loadData(int page)\n    kRecyclerView.setPageAndRefresh(1);\n    swipeRefreshLayout.setRefreshing(true);\n}\n</code></pre>\n\n<p>```</p>\n\n<h3>show|hide EmptyView</h3>\n\n<p><code>java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n</code></p>\n\n<h3>set KRecycerView reenable load more or cant load more</h3>\n\n<p><code>java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n</code></p>\n\n<h3>addheaderView</h3>\n\n<p><code>java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n</code></p>\n\n<h3>more usage can watch sample</h3>\n\n<h1>Thanks</h1>\n\n<p><a href="https://github.com/liaohuqiu">@liaohuqiu</a>\n<a href="https://github.com/cundong">@cundong</a></p>\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'markdown', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Markdown test', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:17:17,800 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:17:17,800 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:17:17,801 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:17,802 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:17,802 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:17,802 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,045 - app.py:73 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:17:40,046 - app.py:82 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:17:40,046 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,047 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,047 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,047 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,047 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:17:40,048 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:17:40,048 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,049 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:17:40,050 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:17:40,086 - app.py:114 - server_info - response result = {'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '# KRecyclerView\n\n------\n\nKRecyclerView is a RecyclerView,\ndependent on [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) and [HeaderAndFooterRecyclerView](https://github.com/cundong/HeaderAndFooterRecyclerView)\n,it\'s support：\n\n> * pull to refresh\n> * load more\n> * showEmptyView\n> * addHeaderView\n> * support sticky header(need fix,couldn\'t support click)\n> * support multi-type when use sticky header\n\nlater:\n> * can modify load more UI  \n\n\nit\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use [RecyclerViewAdapterDelegate][3]\n\n\n##screenshot\n![ss-1](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif)\n![ss-2](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif)\n![ss-3](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif)\n![ss-4](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif)\n![ss-5](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif)\n![ss-6](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif)\n![ss-7](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif)\n![ss-8](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif)\n\n\n##Setup with Android Studio\n```\n    allprojects {\n    \t\trepositories {\n    \t\t\t...\n    \t\t\tmaven { url "https://jitpack.io" }\n    \t\t}\n    \t}\n```\n```\n    \tdependencies {\n    \t        compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n    \t}\n```\n\nthe library minSdkVersion is 13 and targetSdkVersion is 23\n\n------\n\n###Attribute\n\n```xml\n    <me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view">\n```\n\n### Usage\n\n####init\n```java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter<>\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column <= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n```\n\n### setRefreshHeader\n\nyou can watch [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) to know how to use\n\nsample has a custom refresh header\n\n```java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n```\n\nif you want to use **SwipRefreshLayout** you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }\n\n    @Override\n    public void onRefresh() {\n        swipeRefreshLayout.setRefreshing(true);\n        //this method will set page=1 and called loadData(int page)\n        kRecyclerView.setPageAndRefresh(1);\n        swipeRefreshLayout.setRefreshing(true);\n    }\n\n```\n###show|hide EmptyView\n```java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n```\n\n###set KRecycerView reenable load more or cant load more\n```java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n```\n###addheaderView\n```java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n```\n\n\n###more usage can watch sample\n\n#Thanks\n[@liaohuqiu][1]\n[@cundong][2]\n\n\n\n[1]:https://github.com/liaohuqiu\n[2]:https://github.com/cundong\n[3]:https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate', 'html_content': '<h1>KRecyclerView</h1>\n\n<hr />\n\n<p>KRecyclerView is a RecyclerView,\ndependent on <a href="https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh">Ultra-Pull-To-Refresh</a> and <a href="https://github.com/cundong/HeaderAndFooterRecyclerView">HeaderAndFooterRecyclerView</a>\n,it\'s support：</p>\n\n<blockquote>\n  <ul>\n  <li>pull to refresh</li>\n  <li>load more</li>\n  <li>showEmptyView</li>\n  <li>addHeaderView</li>\n  <li>support sticky header(need fix,couldn\'t support click)</li>\n  <li>support multi-type when use sticky header</li>\n  </ul>\n</blockquote>\n\n<p>later:</p>\n\n<blockquote>\n  <ul>\n  <li>can modify load more UI  </li>\n  </ul>\n</blockquote>\n\n<p>it\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use <a href="https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate">RecyclerViewAdapterDelegate</a></p>\n\n<h2>screenshot</h2>\n\n<p><img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif" alt="ss-1" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif" alt="ss-2" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif" alt="ss-3" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif" alt="ss-4" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif" alt="ss-5" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif" alt="ss-6" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif" alt="ss-7" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif" alt="ss-8" /></p>\n\n<h2>Setup with Android Studio</h2>\n\n<p><code>\n    allprojects {\n            repositories {\n                ...\n                maven { url "https://jitpack.io" }\n            }\n        }\n</code>\n<code>\n        dependencies {\n                compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n        }\n</code></p>\n\n<p>the library minSdkVersion is 13 and targetSdkVersion is 23</p>\n\n<hr />\n\n<h3>Attribute</h3>\n\n<p><code>xml\n    &lt;me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view"&gt;\n</code></p>\n\n<h3>Usage</h3>\n\n<h4>init</h4>\n\n<p><code>java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter&lt;&gt;\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column &lt;= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n</code></p>\n\n<h3>setRefreshHeader</h3>\n\n<p>you can watch <a href="https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh">Ultra-Pull-To-Refresh</a> to know how to use</p>\n\n<p>sample has a custom refresh header</p>\n\n<p><code>java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n</code></p>\n\n<p>if you want to use <strong>SwipRefreshLayout</strong> you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }</p>\n\n<pre><code>@Override\npublic void onRefresh() {\n    swipeRefreshLayout.setRefreshing(true);\n    //this method will set page=1 and called loadData(int page)\n    kRecyclerView.setPageAndRefresh(1);\n    swipeRefreshLayout.setRefreshing(true);\n}\n</code></pre>\n\n<p>```</p>\n\n<h3>show|hide EmptyView</h3>\n\n<p><code>java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n</code></p>\n\n<h3>set KRecycerView reenable load more or cant load more</h3>\n\n<p><code>java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n</code></p>\n\n<h3>addheaderView</h3>\n\n<p><code>java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n</code></p>\n\n<h3>more usage can watch sample</h3>\n\n<h1>Thanks</h1>\n\n<p><a href="https://github.com/liaohuqiu">@liaohuqiu</a>\n<a href="https://github.com/cundong">@cundong</a></p>\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'markdown', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Markdown test', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:17:40,162 - app.py:73 - server_info - Request: GET /static/css/uikit.min.css
2016-06-02 02:17:40,163 - app.py:82 - server_info - check user: GET /static/css/uikit.min.css
2016-06-02 02:17:40,163 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,164 - app.py:73 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-02 02:17:40,164 - app.py:82 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-02 02:17:40,165 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,165 - app.py:73 - server_info - Request: GET /static/css/awesome.css
2016-06-02 02:17:40,165 - app.py:82 - server_info - check user: GET /static/css/awesome.css
2016-06-02 02:17:40,165 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,166 - app.py:73 - server_info - Request: GET /static/js/jquery.min.js
2016-06-02 02:17:40,167 - app.py:82 - server_info - check user: GET /static/js/jquery.min.js
2016-06-02 02:17:40,167 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,167 - app.py:73 - server_info - Request: GET /static/js/sha1.min.js
2016-06-02 02:17:40,167 - app.py:82 - server_info - check user: GET /static/js/sha1.min.js
2016-06-02 02:17:40,168 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,168 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,169 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,170 - app.py:73 - server_info - Request: GET /static/js/uikit.min.js
2016-06-02 02:17:40,170 - app.py:82 - server_info - check user: GET /static/js/uikit.min.js
2016-06-02 02:17:40,170 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,172 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,172 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,173 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,174 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,174 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,174 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,176 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,177 - app.py:73 - server_info - Request: GET /static/js/sticky.min.js
2016-06-02 02:17:40,177 - app.py:82 - server_info - check user: GET /static/js/sticky.min.js
2016-06-02 02:17:40,177 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,177 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,177 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,179 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,179 - app.py:73 - server_info - Request: GET /static/js/vue.min.js
2016-06-02 02:17:40,179 - app.py:82 - server_info - check user: GET /static/js/vue.min.js
2016-06-02 02:17:40,179 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,180 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,180 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,181 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,181 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,182 - app.py:73 - server_info - Request: GET /static/js/awesome.js
2016-06-02 02:17:40,182 - app.py:82 - server_info - check user: GET /static/js/awesome.js
2016-06-02 02:17:40,182 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,183 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,183 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,183 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,184 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,184 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,185 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,186 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,186 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,186 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,187 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,187 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,240 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:17:40,240 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:17:40,241 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,242 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,242 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,242 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:40,370 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-02 02:17:40,370 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-02 02:17:40,370 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:40,371 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:40,371 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:40,371 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:54,025 - app.py:73 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:17:54,025 - app.py:82 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:17:54,026 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:54,027 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:54,027 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:54,027 - app.py:111 - server_info - Response handler...
2016-06-02 02:17:54,027 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:17:54,027 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:17:54,028 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:54,028 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:17:54,029 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:17:54,061 - app.py:114 - server_info - response result = {'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '# KRecyclerView\n\n------\n\nKRecyclerView is a RecyclerView,\ndependent on [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) and [HeaderAndFooterRecyclerView](https://github.com/cundong/HeaderAndFooterRecyclerView)\n,it\'s support：\n\n> * pull to refresh\n> * load more\n> * showEmptyView\n> * addHeaderView\n> * support sticky header(need fix,couldn\'t support click)\n> * support multi-type when use sticky header\n\nlater:\n> * can modify load more UI  \n\n\nit\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use [RecyclerViewAdapterDelegate][3]\n\n\n##screenshot\n![ss-1](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif)\n![ss-2](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif)\n![ss-3](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif)\n![ss-4](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif)\n![ss-5](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif)\n![ss-6](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif)\n![ss-7](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif)\n![ss-8](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif)\n\n\n##Setup with Android Studio\n```\n    allprojects {\n    \t\trepositories {\n    \t\t\t...\n    \t\t\tmaven { url "https://jitpack.io" }\n    \t\t}\n    \t}\n```\n```\n    \tdependencies {\n    \t        compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n    \t}\n```\n\nthe library minSdkVersion is 13 and targetSdkVersion is 23\n\n------\n\n###Attribute\n\n```xml\n    <me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view">\n```\n\n### Usage\n\n####init\n```java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter<>\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column <= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n```\n\n### setRefreshHeader\n\nyou can watch [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) to know how to use\n\nsample has a custom refresh header\n\n```java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n```\n\nif you want to use **SwipRefreshLayout** you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }\n\n    @Override\n    public void onRefresh() {\n        swipeRefreshLayout.setRefreshing(true);\n        //this method will set page=1 and called loadData(int page)\n        kRecyclerView.setPageAndRefresh(1);\n        swipeRefreshLayout.setRefreshing(true);\n    }\n\n```\n###show|hide EmptyView\n```java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n```\n\n###set KRecycerView reenable load more or cant load more\n```java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n```\n###addheaderView\n```java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n```\n\n\n###more usage can watch sample\n\n#Thanks\n[@liaohuqiu][1]\n[@cundong][2]\n\n\n\n[1]:https://github.com/liaohuqiu\n[2]:https://github.com/cundong\n[3]:https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate', 'html_content': '<h1>KRecyclerView</h1>\n\n<hr />\n\n<p>KRecyclerView is a RecyclerView,\ndependent on <a href="https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh">Ultra-Pull-To-Refresh</a> and <a href="https://github.com/cundong/HeaderAndFooterRecyclerView">HeaderAndFooterRecyclerView</a>\n,it\'s support：</p>\n\n<blockquote>\n  <ul>\n  <li>pull to refresh</li>\n  <li>load more</li>\n  <li>showEmptyView</li>\n  <li>addHeaderView</li>\n  <li>support sticky header(need fix,couldn\'t support click)</li>\n  <li>support multi-type when use sticky header</li>\n  </ul>\n</blockquote>\n\n<p>later:</p>\n\n<blockquote>\n  <ul>\n  <li>can modify load more UI  </li>\n  </ul>\n</blockquote>\n\n<p>it\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use <a href="https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate">RecyclerViewAdapterDelegate</a></p>\n\n<h2>screenshot</h2>\n\n<p><img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif" alt="ss-1" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif" alt="ss-2" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif" alt="ss-3" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif" alt="ss-4" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif" alt="ss-5" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif" alt="ss-6" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif" alt="ss-7" />\n<img src="https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif" alt="ss-8" /></p>\n\n<h2>Setup with Android Studio</h2>\n\n<p><code>\n    allprojects {\n            repositories {\n                ...\n                maven { url "https://jitpack.io" }\n            }\n        }\n</code>\n<code>\n        dependencies {\n                compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n        }\n</code></p>\n\n<p>the library minSdkVersion is 13 and targetSdkVersion is 23</p>\n\n<hr />\n\n<h3>Attribute</h3>\n\n<p><code>xml\n    &lt;me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view"&gt;\n</code></p>\n\n<h3>Usage</h3>\n\n<h4>init</h4>\n\n<p><code>java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter&lt;&gt;\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column &lt;= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n</code></p>\n\n<h3>setRefreshHeader</h3>\n\n<p>you can watch <a href="https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh">Ultra-Pull-To-Refresh</a> to know how to use</p>\n\n<p>sample has a custom refresh header</p>\n\n<p><code>java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n</code></p>\n\n<p>if you want to use <strong>SwipRefreshLayout</strong> you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }</p>\n\n<pre><code>@Override\npublic void onRefresh() {\n    swipeRefreshLayout.setRefreshing(true);\n    //this method will set page=1 and called loadData(int page)\n    kRecyclerView.setPageAndRefresh(1);\n    swipeRefreshLayout.setRefreshing(true);\n}\n</code></pre>\n\n<p>```</p>\n\n<h3>show|hide EmptyView</h3>\n\n<p><code>java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n</code></p>\n\n<h3>set KRecycerView reenable load more or cant load more</h3>\n\n<p><code>java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n</code></p>\n\n<h3>addheaderView</h3>\n\n<p><code>java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n</code></p>\n\n<h3>more usage can watch sample</h3>\n\n<h1>Thanks</h1>\n\n<p><a href="https://github.com/liaohuqiu">@liaohuqiu</a>\n<a href="https://github.com/cundong">@cundong</a></p>\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'markdown', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Markdown test', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:17:54,166 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:17:54,166 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:17:54,166 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:17:54,167 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:17:54,167 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:17:54,168 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:02,894 - app.py:73 - server_info - Request: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/delete
2016-06-02 02:19:02,894 - app.py:82 - server_info - check user: POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/delete
2016-06-02 02:19:02,894 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:19:02,895 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:02,895 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:19:02,895 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:02,896 - coroweb.py:215 - server_info - call with args: {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'request': <Request POST /api/blogs/00146478283698555cfe5fd14444bdd9a22684d3ede63de000/delete >}
2016-06-02 02:19:02,896 - handlers.py:356 - server_info - 删除博客的博客ID为：00146478283698555cfe5fd14444bdd9a22684d3ede63de000
2016-06-02 02:19:02,896 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['00146478283698555cfe5fd14444bdd9a22684d3ede63de000']
2016-06-02 02:19:02,897 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:02,897 - orm.py:23 - server_info - SQL: delete from `blogs` where `id` = ?, ARGS: ()
2016-06-02 02:19:02,899 - orm.py:72 - server_info - commit success!
2016-06-02 02:19:02,900 - app.py:114 - server_info - response result = {'id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000'}
2016-06-02 02:19:02,938 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:19:02,938 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:19:02,939 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:19:02,940 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:02,940 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:19:02,940 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:02,940 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:19:02,940 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:19:03,165 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:19:03,165 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:19:03,165 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:19:03,166 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:03,167 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:19:03,167 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:03,183 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:19:03,184 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:19:03,184 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:19:03,185 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:03,185 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:19:03,185 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:03,185 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:19:03,185 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:19:03,186 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:03,186 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-02 02:19:03,187 - orm.py:57 - server_info - rows returned: 2
2016-06-02 02:19:03,188 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '# KRecyclerView\n\n------\n\nKRecyclerView is a RecyclerView,\ndependent on [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) and [HeaderAndFooterRecyclerView](https://github.com/cundong/HeaderAndFooterRecyclerView)\n,it\'s support：\n\n> * pull to refresh\n> * load more\n> * showEmptyView\n> * addHeaderView\n> * support sticky header(need fix,couldn\'t support click)\n> * support multi-type when use sticky header\n\nlater:\n> * can modify load more UI  \n\n\nit\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use [RecyclerViewAdapterDelegate][3]\n\n\n##screenshot\n![ss-1](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif)\n![ss-2](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif)\n![ss-3](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif)\n![ss-4](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif)\n![ss-5](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif)\n![ss-6](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif)\n![ss-7](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif)\n![ss-8](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif)\n\n\n##Setup with Android Studio\n```\n    allprojects {\n    \t\trepositories {\n    \t\t\t...\n    \t\t\tmaven { url "https://jitpack.io" }\n    \t\t}\n    \t}\n```\n```\n    \tdependencies {\n    \t        compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n    \t}\n```\n\nthe library minSdkVersion is 13 and targetSdkVersion is 23\n\n------\n\n###Attribute\n\n```xml\n    <me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view">\n```\n\n### Usage\n\n####init\n```java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter<>\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column <= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n```\n\n### setRefreshHeader\n\nyou can watch [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) to know how to use\n\nsample has a custom refresh header\n\n```java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n```\n\nif you want to use **SwipRefreshLayout** you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }\n\n    @Override\n    public void onRefresh() {\n        swipeRefreshLayout.setRefreshing(true);\n        //this method will set page=1 and called loadData(int page)\n        kRecyclerView.setPageAndRefresh(1);\n        swipeRefreshLayout.setRefreshing(true);\n    }\n\n```\n###show|hide EmptyView\n```java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n```\n\n###set KRecycerView reenable load more or cant load more\n```java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n```\n###addheaderView\n```java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n```\n\n\n###more usage can watch sample\n\n#Thanks\n[@liaohuqiu][1]\n[@cundong][2]\n\n\n\n[1]:https://github.com/liaohuqiu\n[2]:https://github.com/cundong\n[3]:https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'markdown', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Markdown test', 'user_name': 'Matt'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '测试', 'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'summary': '测试', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464781677.05172, 'name': '测试', 'user_name': 'Matt'}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-02 02:19:05,639 - app.py:73 - server_info - Request: POST /api/blogs/0014647816770511bc4f896e60f46beb4f7798df92a6baa000/delete
2016-06-02 02:19:05,639 - app.py:82 - server_info - check user: POST /api/blogs/0014647816770511bc4f896e60f46beb4f7798df92a6baa000/delete
2016-06-02 02:19:05,639 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:19:05,641 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:05,641 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:19:05,641 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:05,641 - coroweb.py:215 - server_info - call with args: {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'request': <Request POST /api/blogs/0014647816770511bc4f896e60f46beb4f7798df92a6baa000/delete >}
2016-06-02 02:19:05,641 - handlers.py:356 - server_info - 删除博客的博客ID为：0014647816770511bc4f896e60f46beb4f7798df92a6baa000
2016-06-02 02:19:05,641 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['0014647816770511bc4f896e60f46beb4f7798df92a6baa000']
2016-06-02 02:19:05,642 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:05,642 - orm.py:23 - server_info - SQL: delete from `blogs` where `id` = ?, ARGS: ()
2016-06-02 02:19:05,645 - orm.py:72 - server_info - commit success!
2016-06-02 02:19:05,645 - app.py:114 - server_info - response result = {'id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000'}
2016-06-02 02:19:05,690 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:19:05,691 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:19:05,691 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:19:05,692 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:05,692 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:19:05,692 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:05,692 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:19:05,692 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:19:05,797 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:19:05,797 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:19:05,798 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:19:05,799 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:05,800 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:19:05,800 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:19:05,800 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:19:05,800 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:19:05,800 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:05,801 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:05,801 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:19:05,802 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:05,802 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:19:05,802 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:19:05,802 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:05,803 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:19:05,803 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:05,804 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '# KRecyclerView\n\n------\n\nKRecyclerView is a RecyclerView,\ndependent on [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) and [HeaderAndFooterRecyclerView](https://github.com/cundong/HeaderAndFooterRecyclerView)\n,it\'s support：\n\n> * pull to refresh\n> * load more\n> * showEmptyView\n> * addHeaderView\n> * support sticky header(need fix,couldn\'t support click)\n> * support multi-type when use sticky header\n\nlater:\n> * can modify load more UI  \n\n\nit\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use [RecyclerViewAdapterDelegate][3]\n\n\n##screenshot\n![ss-1](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif)\n![ss-2](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif)\n![ss-3](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif)\n![ss-4](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif)\n![ss-5](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif)\n![ss-6](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif)\n![ss-7](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif)\n![ss-8](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif)\n\n\n##Setup with Android Studio\n```\n    allprojects {\n    \t\trepositories {\n    \t\t\t...\n    \t\t\tmaven { url "https://jitpack.io" }\n    \t\t}\n    \t}\n```\n```\n    \tdependencies {\n    \t        compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n    \t}\n```\n\nthe library minSdkVersion is 13 and targetSdkVersion is 23\n\n------\n\n###Attribute\n\n```xml\n    <me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view">\n```\n\n### Usage\n\n####init\n```java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter<>\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column <= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n```\n\n### setRefreshHeader\n\nyou can watch [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) to know how to use\n\nsample has a custom refresh header\n\n```java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n```\n\nif you want to use **SwipRefreshLayout** you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }\n\n    @Override\n    public void onRefresh() {\n        swipeRefreshLayout.setRefreshing(true);\n        //this method will set page=1 and called loadData(int page)\n        kRecyclerView.setPageAndRefresh(1);\n        swipeRefreshLayout.setRefreshing(true);\n    }\n\n```\n###show|hide EmptyView\n```java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n```\n\n###set KRecycerView reenable load more or cant load more\n```java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n```\n###addheaderView\n```java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n```\n\n\n###more usage can watch sample\n\n#Thanks\n[@liaohuqiu][1]\n[@cundong][2]\n\n\n\n[1]:https://github.com/liaohuqiu\n[2]:https://github.com/cundong\n[3]:https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'markdown', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Markdown test', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1}
2016-06-02 02:19:08,557 - app.py:73 - server_info - Request: GET /manage/blogs/modify/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:19:08,557 - app.py:82 - server_info - check user: GET /manage/blogs/modify/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:19:08,557 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:19:08,558 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:08,558 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:19:08,559 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:08,559 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:19:08,559 - app.py:114 - server_info - response result = {'action': '/api/blogs/modify', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', '__template__': 'manage_blog_modify.html'}
2016-06-02 02:19:08,690 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:19:08,690 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:19:08,690 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:19:08,691 - app.py:73 - server_info - Request: GET /api/blogs/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:19:08,691 - app.py:82 - server_info - check user: GET /api/blogs/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:19:08,692 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:19:08,694 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:08,694 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:19:08,694 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:08,696 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:08,696 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:19:08,697 - app.py:111 - server_info - Response handler...
2016-06-02 02:19:08,697 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:19:08,697 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:19:08,699 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:19:08,699 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '# KRecyclerView\n\n------\n\nKRecyclerView is a RecyclerView,\ndependent on [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) and [HeaderAndFooterRecyclerView](https://github.com/cundong/HeaderAndFooterRecyclerView)\n,it\'s support：\n\n> * pull to refresh\n> * load more\n> * showEmptyView\n> * addHeaderView\n> * support sticky header(need fix,couldn\'t support click)\n> * support multi-type when use sticky header\n\nlater:\n> * can modify load more UI  \n\n\nit\'s support Grid and List(Refresh and LoadMore orientation is Vertical)\nif you want use multi-type display easily, you can use [RecyclerViewAdapterDelegate][3]\n\n\n##screenshot\n![ss-1](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot1.gif)\n![ss-2](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot2.gif)\n![ss-3](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot3.gif)\n![ss-4](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot4.gif)\n![ss-5](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot5.gif)\n![ss-6](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot6.gif)\n![ss-7](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot7.gif)\n![ss-8](https://github.com/kHRYSTAL/KRecyclerView/blob/master/screenshot/screenshot8.gif)\n\n\n##Setup with Android Studio\n```\n    allprojects {\n    \t\trepositories {\n    \t\t\t...\n    \t\t\tmaven { url "https://jitpack.io" }\n    \t\t}\n    \t}\n```\n```\n    \tdependencies {\n    \t        compile \'com.github.kHRYSTAL:KRecyclerView:v0.2.0\'\n    \t}\n```\n\nthe library minSdkVersion is 13 and targetSdkVersion is 23\n\n------\n\n###Attribute\n\n```xml\n    <me.khrystal.widget.KRecyclerView\n        android:id="@+id/recyclerview"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        app:recyclerviewClipToPadding="true|false"\n        app:recyclerviewPadding="10dp"\n        app:recyclerviewPaddingBottom="10dp"\n        app:recyclerviewPaddingLeft="10dp"\n        app:recyclerviewPaddingRight="10dp"\n        app:recyclerviewPaddingTop="10dp"\n        app:recyclerviewEmptyView="@layout/empty_view">\n```\n\n### Usage\n\n####init\n```java\nkRecyclerView = (KRecyclerView) view.findViewById(R.id.recyclerview);\n//set your adapter like RecyclerView.Adapter<>\nadapter = new SimpleAdapter(this,dataList);\n//setAdapter\n//Notice when column <= 1,KRecyclerView will use LinearLayoutManger\nkRecyclerView.setAdapter(adapter, column,LinearLayoutManager.VERTICAL);\nkRecyclerView.setLoadDataListener(new KRecyclerView.LoadDataListener() {\n    @Override\n    public void loadData(int page) {\n      //load data method it\'s used by refresh and load more\n    }\n});\n//make KRecyclerView know how many items in a page\nkRecyclerView.setItemCount(10);\n//make KRecyclerView know loadData need to judge network can available\n//Notice when isUseByNetWork(true) and network can\'t available\n//the loading footer can click to load more again\nkRecyclerView.isUseByNetWork(true);\n```\n\n### setRefreshHeader\n\nyou can watch [Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh) to know how to use\n\nsample has a custom refresh header\n\n```java\n//set classic refresh header\nPtrClassicDefaultHeader defaultHeader =\n    new PtrClassicDefaultHeader(getActivity());\nkRecyclerView.mPtrFrameLayout.setHeaderView(defaultHeader);\nkRecyclerView.mPtrFrameLayout.addPtrUIHandler(defaultHeader);\n//auto refresh once\nkRecyclerView.mPtrFrameLayout.postDelayed(new Runnable() {\n                @Override\n                public void run() {\n                    kRecyclerView.mPtrFrameLayout.autoRefresh(true);\n                }\n            }, 400);\n```\n\nif you want to use **SwipRefreshLayout** you can use like\n```java\n private void setCustomRefresh() {\n        krecyclerView.mPtrFrameLayout.setEnabled(false);\n        swipeRefreshLayout.setOnRefreshListener(this);\n    }\n\n    @Override\n    public void onRefresh() {\n        swipeRefreshLayout.setRefreshing(true);\n        //this method will set page=1 and called loadData(int page)\n        kRecyclerView.setPageAndRefresh(1);\n        swipeRefreshLayout.setRefreshing(true);\n    }\n\n```\n###show|hide EmptyView\n```java\nkrecyclerView.showEmptyView();\nkrecyclerView.hideEmptyView();\n```\n\n###set KRecycerView reenable load more or cant load more\n```java\nkRecyclerView.enableLoadMore();\nkRecyclerView.cantLoadMore();\n```\n###addheaderView\n```java\nheaderView = LayoutInflater.from(getContext()).inflate(R.layout.header_view,kRecyclerView,false);\nkRecyclerView.addHeaderView(headerView);\n```\n\n\n###more usage can watch sample\n\n#Thanks\n[@liaohuqiu][1]\n[@cundong][2]\n\n\n\n[1]:https://github.com/liaohuqiu\n[2]:https://github.com/cundong\n[3]:https://github.com/kHRYSTAL/RecyclerViewAdapterDelegate', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'markdown', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Markdown test', 'user_name': 'Matt'}
2016-06-02 02:20:50,055 - app.py:73 - server_info - Request: POST /api/blogs/modify
2016-06-02 02:20:50,055 - app.py:82 - server_info - check user: POST /api/blogs/modify
2016-06-02 02:20:50,055 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:20:50,056 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:20:50,057 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:20:50,057 - app.py:111 - server_info - Response handler...
2016-06-02 02:20:50,057 - coroweb.py:215 - server_info - call with args: {'name': 'Awesome complete!', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'request': <Request POST /api/blogs/modify >}
2016-06-02 02:20:50,057 - handlers.py:368 - server_info - 修改的博客的博客ID为：001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:20:50,057 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:20:50,058 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:20:50,058 - orm.py:23 - server_info - SQL: update `blogs` set `user_name`=?, `summary`=?, `user_image`=?, `user_id`=?, `name`=?, `created_at`=?, `content`=? where `id` = ?, ARGS: ()
2016-06-02 02:20:50,060 - orm.py:72 - server_info - commit success!
2016-06-02 02:20:50,060 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}
2016-06-02 02:20:50,070 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:20:50,070 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:20:50,071 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:20:50,072 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:20:50,072 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:20:50,072 - app.py:111 - server_info - Response handler...
2016-06-02 02:20:50,072 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:20:50,072 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:20:50,203 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:20:50,203 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:20:50,204 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:20:50,205 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:20:50,205 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:20:50,206 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:20:50,206 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:20:50,206 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:20:50,206 - app.py:111 - server_info - Response handler...
2016-06-02 02:20:50,208 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:20:50,208 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:20:50,208 - app.py:111 - server_info - Response handler...
2016-06-02 02:20:50,209 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:20:50,209 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:20:50,209 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:20:50,210 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:20:50,210 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:20:50,211 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1}
2016-06-02 02:20:51,973 - app.py:73 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:20:51,974 - app.py:82 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:20:51,974 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:20:51,975 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:20:51,975 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:20:51,975 - app.py:111 - server_info - Response handler...
2016-06-02 02:20:51,975 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:20:51,976 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:20:51,976 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:20:51,976 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:20:51,977 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:20:51,982 - app.py:114 - server_info - response result = {'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'html_content': '<blockquote>\n  <p>This is a BLOG project</p>\n  \n  <p>The ultimate aim is to study python3</p>\n</blockquote>\n\n<p><img src="http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg" alt="" /></p>\n\n<h3>Config</h3>\n\n<p><code>\n$ python3 --version\nPython 3.5.1\n</code></p>\n\n<h3>Thanks</h3>\n\n<p><a href="http://www.liaoxuefeng.com/">@廖雪峰</a></p>\n\n<h3>LICENSE</h3>\n\n<p>```\nCopyright (C) 2016 kHRYSTAL</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<p>http://www.apache.org/licenses/LICENSE-2.0</p>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```</p>\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:20:52,114 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:20:52,114 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:20:52,114 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:20:52,115 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:20:52,115 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:20:52,115 - app.py:111 - server_info - Response handler...
2016-06-02 02:21:09,437 - app.py:73 - server_info - Request: GET /manage/blogs/modify/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:21:09,438 - app.py:82 - server_info - check user: GET /manage/blogs/modify/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:21:09,438 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:21:09,439 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:09,440 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:21:09,440 - app.py:111 - server_info - Response handler...
2016-06-02 02:21:09,440 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:21:09,440 - app.py:114 - server_info - response result = {'action': '/api/blogs/modify', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', '__template__': 'manage_blog_modify.html'}
2016-06-02 02:21:09,554 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:21:09,554 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:21:09,554 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:21:09,555 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:09,556 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:21:09,556 - app.py:111 - server_info - Response handler...
2016-06-02 02:21:09,574 - app.py:73 - server_info - Request: GET /api/blogs/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:21:09,575 - app.py:82 - server_info - check user: GET /api/blogs/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:21:09,575 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:21:09,576 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:09,576 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:21:09,576 - app.py:111 - server_info - Response handler...
2016-06-02 02:21:09,576 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:21:09,576 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:21:09,577 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:09,577 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}
2016-06-02 02:21:28,135 - app.py:73 - server_info - Request: POST /api/blogs/modify
2016-06-02 02:21:28,135 - app.py:82 - server_info - check user: POST /api/blogs/modify
2016-06-02 02:21:28,135 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:21:28,136 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:28,136 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:21:28,137 - app.py:111 - server_info - Response handler...
2016-06-02 02:21:28,137 - coroweb.py:215 - server_info - call with args: {'name': 'Awesome complete!', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': '', 'request': <Request POST /api/blogs/modify >}
2016-06-02 02:21:28,137 - handlers.py:368 - server_info - 修改的博客的博客ID为：001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:21:28,137 - app.py:114 - server_info - response result = {'data': 'summary', 'message': 'summary cannot be empty', 'error': 'value:invalid'}
2016-06-02 02:21:36,688 - app.py:73 - server_info - Request: POST /api/blogs/modify
2016-06-02 02:21:36,688 - app.py:82 - server_info - check user: POST /api/blogs/modify
2016-06-02 02:21:36,688 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:21:36,689 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:36,689 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:21:36,690 - app.py:111 - server_info - Response handler...
2016-06-02 02:21:36,690 - coroweb.py:215 - server_info - call with args: {'name': 'Awesome complete!', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'request': <Request POST /api/blogs/modify >}
2016-06-02 02:21:36,690 - handlers.py:368 - server_info - 修改的博客的博客ID为：001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:21:36,691 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:21:36,692 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:36,692 - orm.py:23 - server_info - SQL: update `blogs` set `user_name`=?, `summary`=?, `user_image`=?, `user_id`=?, `name`=?, `created_at`=?, `content`=? where `id` = ?, ARGS: ()
2016-06-02 02:21:36,695 - orm.py:72 - server_info - commit success!
2016-06-02 02:21:36,695 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}
2016-06-02 02:21:36,705 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:21:36,705 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:21:36,705 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:21:36,706 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:36,707 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:21:36,707 - app.py:111 - server_info - Response handler...
2016-06-02 02:21:36,707 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:21:36,707 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:21:36,816 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:21:36,816 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:21:36,817 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:21:36,818 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:36,818 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:21:36,818 - app.py:111 - server_info - Response handler...
2016-06-02 02:21:36,840 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:21:36,841 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:21:36,841 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:21:36,842 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:36,842 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:21:36,842 - app.py:111 - server_info - Response handler...
2016-06-02 02:21:36,842 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:21:36,842 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:21:36,843 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:36,843 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:21:36,844 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:36,844 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1}
2016-06-02 02:21:38,305 - app.py:73 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:21:38,305 - app.py:82 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:21:38,305 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:21:38,306 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:38,306 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:21:38,306 - app.py:111 - server_info - Response handler...
2016-06-02 02:21:38,307 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:21:38,307 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:21:38,308 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:38,308 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:21:38,309 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:21:38,315 - app.py:114 - server_info - response result = {'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n```', 'html_content': '<blockquote>\n  <p>This is a BLOG project</p>\n  \n  <p>The ultimate aim is to study python3</p>\n</blockquote>\n\n<p>Praise the Sun！</p>\n\n<p><img src="http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg" alt="" /></p>\n\n<h3>Config</h3>\n\n<p><code>\n$ python3 --version\nPython 3.5.1\n</code></p>\n\n<h3>Thanks</h3>\n\n<p><a href="http://www.liaoxuefeng.com/">@廖雪峰</a></p>\n\n<h3>LICENSE</h3>\n\n<p>```</p>\n\n<p>Copyright (C) 2016 kHRYSTAL</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<p>http://www.apache.org/licenses/LICENSE-2.0</p>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n\n<p>```</p>\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:21:38,415 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:21:38,415 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:21:38,416 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:21:38,417 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:21:38,417 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:21:38,417 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:10,492 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:22:10,492 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:22:10,492 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:10,493 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:10,493 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:10,494 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:10,494 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:22:10,494 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:22:10,592 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:10,592 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:10,593 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:10,594 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:10,594 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:10,595 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:10,610 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:22:10,610 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:22:10,611 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:10,611 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:10,612 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:10,612 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:10,612 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:22:10,612 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:22:10,613 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:10,613 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:22:10,614 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:10,614 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1}
2016-06-02 02:22:13,188 - app.py:73 - server_info - Request: GET /manage/blogs/modify/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:22:13,188 - app.py:82 - server_info - check user: GET /manage/blogs/modify/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:22:13,188 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:13,190 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:13,190 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:13,190 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:13,190 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:22:13,190 - app.py:114 - server_info - response result = {'action': '/api/blogs/modify', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', '__template__': 'manage_blog_modify.html'}
2016-06-02 02:22:13,269 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:13,269 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:13,270 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:13,271 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:13,271 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:13,271 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:13,302 - app.py:73 - server_info - Request: GET /api/blogs/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:22:13,302 - app.py:82 - server_info - check user: GET /api/blogs/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:22:13,302 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:13,303 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:13,303 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:13,304 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:13,304 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:22:13,304 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:22:13,305 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:13,305 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}
2016-06-02 02:22:36,211 - app.py:73 - server_info - Request: POST /api/blogs/modify
2016-06-02 02:22:36,211 - app.py:82 - server_info - check user: POST /api/blogs/modify
2016-06-02 02:22:36,211 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:36,212 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:36,212 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:36,212 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:36,213 - coroweb.py:215 - server_info - call with args: {'name': 'Awesome complete!', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'request': <Request POST /api/blogs/modify >}
2016-06-02 02:22:36,213 - handlers.py:368 - server_info - 修改的博客的博客ID为：001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:22:36,213 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:22:36,215 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:36,215 - orm.py:23 - server_info - SQL: update `blogs` set `user_name`=?, `summary`=?, `user_image`=?, `user_id`=?, `name`=?, `created_at`=?, `content`=? where `id` = ?, ARGS: ()
2016-06-02 02:22:36,218 - orm.py:72 - server_info - commit success!
2016-06-02 02:22:36,218 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}
2016-06-02 02:22:36,237 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:22:36,237 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:22:36,237 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:36,238 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:36,238 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:36,238 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:36,238 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:22:36,239 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:22:36,375 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:36,375 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:36,376 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:36,376 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:22:36,376 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:22:36,377 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:36,377 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:36,378 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:36,378 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:36,379 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:36,379 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:36,379 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:36,380 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:22:36,380 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:22:36,380 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:36,380 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:22:36,381 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:36,382 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1}
2016-06-02 02:22:38,143 - app.py:73 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:22:38,143 - app.py:82 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:22:38,143 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:38,144 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:38,145 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:38,145 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:38,145 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:22:38,145 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:22:38,146 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:38,146 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:22:38,147 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:22:38,153 - app.py:114 - server_info - response result = {'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'html_content': '<blockquote>\n  <p>This is a BLOG project</p>\n  \n  <p>The ultimate aim is to study python3</p>\n</blockquote>\n\n<p>Praise the Sun！</p>\n\n<p><img src="http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg" alt="" /></p>\n\n<h3>Config</h3>\n\n<p><code>\n$ python3 --version\nPython 3.5.1\n</code></p>\n\n<h3>Thanks</h3>\n\n<p><a href="http://www.liaoxuefeng.com/">@廖雪峰</a></p>\n\n<h3>LICENSE</h3>\n\n<p>```\nCopyright (C) 2016 kHRYSTAL</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<p>http://www.apache.org/licenses/LICENSE-2.0</p>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```</p>\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:22:38,252 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:38,252 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:38,253 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:38,254 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:38,254 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:38,254 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:53,515 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:22:53,515 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:22:53,516 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:53,517 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:53,517 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:53,517 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:53,517 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:22:53,518 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:22:53,611 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:53,611 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:53,612 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:53,613 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:53,613 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:53,613 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:53,661 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:22:53,662 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:22:53,662 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:53,663 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:53,664 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:53,664 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:53,664 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:22:53,665 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:22:53,667 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:53,668 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:22:53,669 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:53,669 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1}
2016-06-02 02:22:54,819 - app.py:73 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:22:54,819 - app.py:82 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:22:54,819 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:54,820 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:54,821 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:54,821 - app.py:111 - server_info - Response handler...
2016-06-02 02:22:54,821 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:22:54,821 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:22:54,822 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:54,822 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:22:54,822 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:22:54,828 - app.py:114 - server_info - response result = {'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'html_content': '<blockquote>\n  <p>This is a BLOG project</p>\n  \n  <p>The ultimate aim is to study python3</p>\n</blockquote>\n\n<p>Praise the Sun！</p>\n\n<p><img src="http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg" alt="" /></p>\n\n<h3>Config</h3>\n\n<p><code>\n$ python3 --version\nPython 3.5.1\n</code></p>\n\n<h3>Thanks</h3>\n\n<p><a href="http://www.liaoxuefeng.com/">@廖雪峰</a></p>\n\n<h3>LICENSE</h3>\n\n<p>```\nCopyright (C) 2016 kHRYSTAL</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<p>http://www.apache.org/licenses/LICENSE-2.0</p>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```</p>\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:22:54,954 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:54,954 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:22:54,954 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:22:54,955 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:22:54,956 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:22:54,956 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:01,266 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:23:01,266 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:23:01,266 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:01,267 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:01,268 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:01,269 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:01,269 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:23:01,269 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:23:01,324 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:01,324 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:01,324 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:01,325 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:01,325 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:01,325 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:01,338 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:23:01,339 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:23:01,339 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:01,340 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:01,340 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:01,340 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:01,340 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:23:01,340 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:23:01,341 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:01,341 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:23:01,342 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:01,342 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1}
2016-06-02 02:23:03,436 - app.py:73 - server_info - Request: GET /manage/blogs/modify/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:23:03,436 - app.py:82 - server_info - check user: GET /manage/blogs/modify/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:23:03,437 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:03,438 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:03,438 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:03,438 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:03,438 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:23:03,438 - app.py:114 - server_info - response result = {'action': '/api/blogs/modify', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', '__template__': 'manage_blog_modify.html'}
2016-06-02 02:23:03,568 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:03,569 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:03,569 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:03,570 - app.py:73 - server_info - Request: GET /api/blogs/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:23:03,570 - app.py:82 - server_info - check user: GET /api/blogs/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:23:03,571 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:03,572 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:03,572 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:03,573 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:03,574 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:03,575 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:03,575 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:03,575 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:23:03,575 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:23:03,577 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:03,578 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n```\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}
2016-06-02 02:23:11,785 - app.py:73 - server_info - Request: POST /api/blogs/modify
2016-06-02 02:23:11,785 - app.py:82 - server_info - check user: POST /api/blogs/modify
2016-06-02 02:23:11,786 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:11,787 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:11,787 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:11,787 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:11,788 - coroweb.py:215 - server_info - call with args: {'name': 'Awesome complete!', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'request': <Request POST /api/blogs/modify >}
2016-06-02 02:23:11,788 - handlers.py:368 - server_info - 修改的博客的博客ID为：001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:23:11,788 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:23:11,789 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:11,789 - orm.py:23 - server_info - SQL: update `blogs` set `user_name`=?, `summary`=?, `user_image`=?, `user_id`=?, `name`=?, `created_at`=?, `content`=? where `id` = ?, ARGS: ()
2016-06-02 02:23:11,792 - orm.py:72 - server_info - commit success!
2016-06-02 02:23:11,792 - app.py:114 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}
2016-06-02 02:23:11,805 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:23:11,805 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:23:11,805 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:11,806 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:11,807 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:11,807 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:11,807 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:23:11,807 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:23:11,877 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:11,878 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:11,878 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:11,878 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:23:11,879 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:23:11,879 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:11,879 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:11,880 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:11,880 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:11,881 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:11,881 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:11,881 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:11,881 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:23:11,881 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:23:11,882 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:11,882 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:23:11,883 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:11,883 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1}
2016-06-02 02:23:13,633 - app.py:73 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:23:13,634 - app.py:82 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:23:13,634 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:13,635 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:13,635 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:13,635 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:13,635 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:23:13,635 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:23:13,636 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:13,636 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:23:13,637 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:23:13,643 - app.py:114 - server_info - response result = {'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'html_content': '<blockquote>\n  <p>This is a BLOG project</p>\n  \n  <p>The ultimate aim is to study python3</p>\n</blockquote>\n\n<p>Praise the Sun！</p>\n\n<p><img src="http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg" alt="" /></p>\n\n<h3>Config</h3>\n\n<p><code>\n$ python3 --version\nPython 3.5.1\n</code></p>\n\n<h3>Thanks</h3>\n\n<p><a href="http://www.liaoxuefeng.com/">@廖雪峰</a></p>\n\n<h3>LICENSE</h3>\n\n<p>Copyright (C) 2016 kHRYSTAL</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<p>http://www.apache.org/licenses/LICENSE-2.0</p>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:23:13,708 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:13,708 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:13,709 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:13,710 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:13,710 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:13,710 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:40,966 - app.py:73 - server_info - Request: GET /
2016-06-02 02:23:40,966 - app.py:82 - server_info - check user: GET /
2016-06-02 02:23:40,966 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:40,967 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:40,967 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:40,968 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:40,968 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:23:40,968 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:23:40,968 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:40,969 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:23:40,969 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:40,970 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, '__template__': 'blogs.html'}
2016-06-02 02:23:41,041 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:41,041 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:41,041 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:41,042 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:41,043 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:41,043 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:43,311 - app.py:73 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:23:43,311 - app.py:82 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-02 02:23:43,312 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:43,313 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:43,313 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:43,313 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:43,313 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-02 02:23:43,313 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:23:43,314 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:43,314 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-02 02:23:43,315 - orm.py:57 - server_info - rows returned: 0
2016-06-02 02:23:43,320 - app.py:114 - server_info - response result = {'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'html_content': '<blockquote>\n  <p>This is a BLOG project</p>\n  \n  <p>The ultimate aim is to study python3</p>\n</blockquote>\n\n<p>Praise the Sun！</p>\n\n<p><img src="http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg" alt="" /></p>\n\n<h3>Config</h3>\n\n<p><code>\n$ python3 --version\nPython 3.5.1\n</code></p>\n\n<h3>Thanks</h3>\n\n<p><a href="http://www.liaoxuefeng.com/">@廖雪峰</a></p>\n\n<h3>LICENSE</h3>\n\n<p>Copyright (C) 2016 kHRYSTAL</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<p>http://www.apache.org/licenses/LICENSE-2.0</p>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}, '__template__': 'blog.html'}
2016-06-02 02:23:43,450 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:43,450 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:43,450 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:43,451 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:43,452 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:43,452 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:54,138 - app.py:73 - server_info - Request: GET /
2016-06-02 02:23:54,138 - app.py:82 - server_info - check user: GET /
2016-06-02 02:23:54,138 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:54,139 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:54,139 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:54,139 - app.py:111 - server_info - Response handler...
2016-06-02 02:23:54,140 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:23:54,140 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:23:54,140 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:54,140 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:23:54,141 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:54,141 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, '__template__': 'blogs.html'}
2016-06-02 02:23:54,208 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:54,208 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:23:54,208 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:23:54,209 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:23:54,210 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:23:54,210 - app.py:111 - server_info - Response handler...
2016-06-02 02:24:02,936 - app.py:73 - server_info - Request: GET /manage/comments
2016-06-02 02:24:02,937 - app.py:82 - server_info - check user: GET /manage/comments
2016-06-02 02:24:02,937 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:24:02,938 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:02,938 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:24:02,938 - app.py:111 - server_info - Response handler...
2016-06-02 02:24:02,938 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:24:02,938 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_comments.html'}
2016-06-02 02:24:03,026 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:24:03,027 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:24:03,027 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:24:03,028 - app.py:73 - server_info - Request: GET /api/comments
2016-06-02 02:24:03,028 - app.py:82 - server_info - check user: GET /api/comments
2016-06-02 02:24:03,028 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:24:03,029 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:03,029 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:24:03,030 - app.py:111 - server_info - Response handler...
2016-06-02 02:24:03,031 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:03,031 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:24:03,031 - app.py:111 - server_info - Response handler...
2016-06-02 02:24:03,031 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:24:03,031 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `comments`, ARGS: None
2016-06-02 02:24:03,032 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:03,032 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`blog_id`,`user_image`,`user_id`,`created_at`,`content` from `comments` order by created_at desc limit ?, ?, ARGS: [0, 3]
2016-06-02 02:24:03,033 - orm.py:57 - server_info - rows returned: 3
2016-06-02 02:24:03,034 - app.py:114 - server_info - response result = {'comments': [{'user_image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'user_name': 'kHRYSTAL', 'id': '001464804910696583a888699c04ec09381b5a710d0806e000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'created_at': 1464804910.69659, 'content': 'asasasa'}, {'user_image': 'http://www.gravatar.com/avatar/b3df92f2a869c57b303704873957435b?d=mm&s=120', 'user_name': 'kHRYSTAL', 'id': '00146480490252599b5702d0e004045bd502c1cee26aa1a000', 'blog_id': '00146478283698555cfe5fd14444bdd9a22684d3ede63de000', 'user_id': '00146478162695412465714b66b4adabb461e63eecb79ca000', 'created_at': 1464804902.52576, 'content': 'asasasasasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'user_name': 'Matt', 'id': '001464804864819b3a9115f633542c8b2ce954866c79601000', 'blog_id': '0014647816770511bc4f896e60f46beb4f7798df92a6baa000', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464804864.81984, 'content': 'asasas'}], 'page': item_count: 3, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 3}
2016-06-02 02:24:10,830 - app.py:73 - server_info - Request: GET /manage/blogs
2016-06-02 02:24:10,831 - app.py:82 - server_info - check user: GET /manage/blogs
2016-06-02 02:24:10,831 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:24:10,832 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:10,832 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:24:10,832 - app.py:111 - server_info - Response handler...
2016-06-02 02:24:10,832 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:24:10,832 - app.py:114 - server_info - response result = {'page_index': 1, '__template__': 'manage_blogs.html'}
2016-06-02 02:24:10,909 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:24:10,910 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:24:10,910 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:24:10,911 - app.py:73 - server_info - Request: GET /api/blogs
2016-06-02 02:24:10,911 - app.py:82 - server_info - check user: GET /api/blogs
2016-06-02 02:24:10,911 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:24:10,912 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:10,912 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:24:10,912 - app.py:111 - server_info - Response handler...
2016-06-02 02:24:10,913 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:10,914 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:24:10,914 - app.py:111 - server_info - Response handler...
2016-06-02 02:24:10,914 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-02 02:24:10,914 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:24:10,915 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:10,915 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:24:10,916 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:10,916 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1}
2016-06-02 02:24:12,771 - app.py:73 - server_info - Request: GET /
2016-06-02 02:24:12,772 - app.py:82 - server_info - check user: GET /
2016-06-02 02:24:12,772 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:24:12,773 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:12,773 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:24:12,773 - app.py:111 - server_info - Response handler...
2016-06-02 02:24:12,773 - coroweb.py:215 - server_info - call with args: {}
2016-06-02 02:24:12,773 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-02 02:24:12,774 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:12,774 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`summary`,`user_image`,`user_id`,`name`,`created_at`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-02 02:24:12,775 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:12,775 - app.py:114 - server_info - response result = {'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'created_at': 1464805035.20157, 'name': 'Awesome complete!', 'user_name': 'Matt'}], 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, '__template__': 'blogs.html'}
2016-06-02 02:24:12,846 - app.py:73 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:24:12,847 - app.py:82 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-02 02:24:12,847 - orm.py:23 - server_info - SQL: select `id`, `image`,`admin`,`name`,`passwd`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-02 02:24:12,848 - orm.py:57 - server_info - rows returned: 1
2016-06-02 02:24:12,848 - app.py:88 - server_info - set current user: 1@qq.com
2016-06-02 02:24:12,848 - app.py:111 - server_info - Response handler...
2016-06-03 01:32:11,155 - orm.py:140 - server_info - found model: User (table: users)
2016-06-03 01:32:11,155 - orm.py:147 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,156 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,156 - orm.py:147 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-03 01:32:11,156 - orm.py:147 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-03 01:32:11,156 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,156 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 01:32:11,156 - orm.py:147 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,156 - orm.py:140 - server_info - found model: Blog (table: blogs)
2016-06-03 01:32:11,156 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 01:32:11,156 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,157 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 01:32:11,157 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,157 - orm.py:147 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-03 01:32:11,157 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,157 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,157 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 01:32:11,157 - orm.py:140 - server_info - found model: Comment (table: comments)
2016-06-03 01:32:11,157 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,157 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 01:32:11,158 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,158 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 01:32:11,158 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,158 - orm.py:147 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-03 01:32:11,158 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 01:32:11,160 - orm.py:28 - server_info - create database connection pool...
2016-06-03 01:32:11,170 - app.py:42 - server_info - init jinja2....
2016-06-03 01:32:11,171 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-03 01:32:11,176 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-03 01:32:16,228 - app.py:76 - server_info - Request: GET /
2016-06-03 01:32:16,229 - app.py:86 - server_info - check user: GET /
2016-06-03 01:32:16,229 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:16,240 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,240 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:16,240 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:16,240 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:16,241 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:32:16,243 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,243 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-03 01:32:16,244 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,244 - app.py:120 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, 'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}]}
2016-06-03 01:32:16,353 - app.py:76 - server_info - Request: GET /static/css/awesome.css
2016-06-03 01:32:16,353 - app.py:86 - server_info - check user: GET /static/css/awesome.css
2016-06-03 01:32:16,354 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:16,355 - app.py:76 - server_info - Request: GET /static/js/jquery.min.js
2016-06-03 01:32:16,355 - app.py:86 - server_info - check user: GET /static/js/jquery.min.js
2016-06-03 01:32:16,356 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:16,358 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,358 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:16,359 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:16,360 - app.py:76 - server_info - Request: GET /static/js/sha1.min.js
2016-06-03 01:32:16,361 - app.py:86 - server_info - check user: GET /static/js/sha1.min.js
2016-06-03 01:32:16,361 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:16,362 - app.py:76 - server_info - Request: GET /static/js/vue.min.js
2016-06-03 01:32:16,362 - app.py:86 - server_info - check user: GET /static/js/vue.min.js
2016-06-03 01:32:16,363 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:16,363 - app.py:76 - server_info - Request: GET /static/js/awesome.js
2016-06-03 01:32:16,364 - app.py:86 - server_info - check user: GET /static/js/awesome.js
2016-06-03 01:32:16,364 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:16,366 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,366 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:16,366 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:16,367 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,368 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:16,368 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:16,371 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,371 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:16,371 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:16,372 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,373 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:16,373 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:16,508 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:16,510 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:16,510 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:16,511 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,512 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:16,512 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:16,946 - app.py:76 - server_info - Request: GET /
2016-06-03 01:32:16,948 - app.py:86 - server_info - check user: GET /
2016-06-03 01:32:16,948 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:16,949 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,949 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:16,950 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:16,950 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:16,950 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:32:16,951 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,951 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-03 01:32:16,952 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:16,952 - app.py:120 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, 'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}]}
2016-06-03 01:32:17,102 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:17,104 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:17,105 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:17,106 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:17,107 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:17,107 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:17,426 - app.py:76 - server_info - Request: GET /favicon.ico
2016-06-03 01:32:17,426 - app.py:86 - server_info - check user: GET /favicon.ico
2016-06-03 01:32:17,426 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:17,428 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:17,428 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:17,428 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:18,924 - app.py:76 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-03 01:32:18,928 - app.py:86 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-03 01:32:18,928 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:18,929 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:18,930 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:18,930 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:18,930 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-03 01:32:18,930 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-03 01:32:18,932 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:18,932 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`user_image`,`created_at`,`user_id`,`blog_id`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-03 01:32:18,934 - orm.py:59 - server_info - rows returned: 0
2016-06-03 01:32:18,945 - app.py:120 - server_info - response result = {'__template__': 'blog.html', 'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'html_content': '<blockquote>\n  <p>This is a BLOG project</p>\n  \n  <p>The ultimate aim is to study python3</p>\n</blockquote>\n\n<p>Praise the Sun！</p>\n\n<p><img src="http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg" alt="" /></p>\n\n<h3>Config</h3>\n\n<p><code>\n$ python3 --version\nPython 3.5.1\n</code></p>\n\n<h3>Thanks</h3>\n\n<p><a href="http://www.liaoxuefeng.com/">@廖雪峰</a></p>\n\n<h3>LICENSE</h3>\n\n<p>Copyright (C) 2016 kHRYSTAL</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<p>http://www.apache.org/licenses/LICENSE-2.0</p>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}}
2016-06-03 01:32:19,046 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:19,046 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:19,047 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:19,048 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:19,048 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:19,048 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:22,194 - app.py:76 - server_info - Request: GET /manage/blogs
2016-06-03 01:32:22,196 - app.py:86 - server_info - check user: GET /manage/blogs
2016-06-03 01:32:22,196 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:22,197 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:22,198 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:22,198 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:22,198 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:22,198 - app.py:120 - server_info - response result = {'__template__': 'manage_blogs.html', 'page_index': 1}
2016-06-03 01:32:22,254 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:22,256 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:22,257 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:22,258 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:22,258 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:22,258 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:22,272 - app.py:76 - server_info - Request: GET /api/blogs
2016-06-03 01:32:22,273 - app.py:86 - server_info - check user: GET /api/blogs
2016-06-03 01:32:22,273 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:22,274 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:22,274 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:22,275 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:22,275 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-03 01:32:22,275 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:32:22,276 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:22,276 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 1]
2016-06-03 01:32:22,277 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:22,278 - app.py:120 - server_info - response result = {'page': item_count: 1, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 1, 'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}]}
2016-06-03 01:32:23,556 - app.py:76 - server_info - Request: GET /manage/blogs/create
2016-06-03 01:32:23,558 - app.py:86 - server_info - check user: GET /manage/blogs/create
2016-06-03 01:32:23,558 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:23,559 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:23,559 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:23,560 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:23,560 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:23,560 - app.py:120 - server_info - response result = {'__template__': 'manage_blog_edit.html', 'action': '/api/blogs', 'id': ''}
2016-06-03 01:32:23,674 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:23,677 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:23,677 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:23,679 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:23,679 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:23,680 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:28,891 - app.py:76 - server_info - Request: POST /api/blogs
2016-06-03 01:32:28,891 - app.py:86 - server_info - check user: POST /api/blogs
2016-06-03 01:32:28,891 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:28,893 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:28,893 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:28,893 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:28,893 - coroweb.py:215 - server_info - call with args: {'summary': 'asasas', 'request': <Request POST /api/blogs >, 'content': 'asasas', 'name': 'asasa'}
2016-06-03 01:32:28,894 - orm.py:197 - server_info - using default value for created_at: 1464888748.894191
2016-06-03 01:32:28,894 - orm.py:197 - server_info - using default value for id: 001464888748894d68f87090d1f46139075ce86d43431d2000
2016-06-03 01:32:28,894 - orm.py:23 - server_info - SQL: insert into `blogs` (`created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content`, `id`) values (?, ?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-03 01:32:28,899 - orm.py:75 - server_info - commit success!
2016-06-03 01:32:28,899 - app.py:120 - server_info - response result = {'created_at': 1464888748.894191, 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas', 'name': 'asasa', 'user_name': 'Matt'}
2016-06-03 01:32:28,913 - app.py:76 - server_info - Request: GET /manage/blogs
2016-06-03 01:32:28,913 - app.py:86 - server_info - check user: GET /manage/blogs
2016-06-03 01:32:28,913 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:28,914 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:28,914 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:28,915 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:28,915 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:28,915 - app.py:120 - server_info - response result = {'__template__': 'manage_blogs.html', 'page_index': 1}
2016-06-03 01:32:28,990 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:28,992 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:28,993 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:28,993 - app.py:76 - server_info - Request: GET /api/blogs
2016-06-03 01:32:28,994 - app.py:86 - server_info - check user: GET /api/blogs
2016-06-03 01:32:28,994 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:28,995 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:28,996 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:28,996 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:28,997 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:28,998 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:28,998 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:28,998 - coroweb.py:215 - server_info - call with args: {'page': '1'}
2016-06-03 01:32:28,999 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:32:29,004 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:29,004 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-03 01:32:29,005 - orm.py:59 - server_info - rows returned: 2
2016-06-03 01:32:29,006 - app.py:120 - server_info - response result = {'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas', 'user_name': 'Matt', 'created_at': 1464888748.89419, 'name': 'asasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}]}
2016-06-03 01:32:31,732 - app.py:76 - server_info - Request: GET /signout
2016-06-03 01:32:31,733 - app.py:86 - server_info - check user: GET /signout
2016-06-03 01:32:31,733 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:31,735 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:31,735 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:31,735 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:31,735 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-03 01:32:31,736 - app.py:120 - server_info - response result = Found
2016-06-03 01:32:31,738 - app.py:76 - server_info - Request: GET /manage/blogs
2016-06-03 01:32:31,739 - app.py:86 - server_info - check user: GET /manage/blogs
2016-06-03 01:32:31,741 - app.py:76 - server_info - Request: GET /signin
2016-06-03 01:32:31,742 - app.py:86 - server_info - check user: GET /signin
2016-06-03 01:32:31,742 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:31,742 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:31,742 - app.py:120 - server_info - response result = {'__template__': 'signin.html'}
2016-06-03 01:32:31,820 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:31,822 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:31,822 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:33,586 - app.py:76 - server_info - Request: POST /api/authenticate
2016-06-03 01:32:33,587 - app.py:86 - server_info - check user: POST /api/authenticate
2016-06-03 01:32:33,587 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:33,587 - coroweb.py:215 - server_info - call with args: {'passwd': '735fcf0d1ae7325c203cf422888f43f25db40876', 'email': '1@qq.com'}
2016-06-03 01:32:33,588 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where email=?, ARGS: ['1@qq.com']
2016-06-03 01:32:33,589 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:33,589 - handlers.py:215 - server_info - user password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-03 01:32:33,590 - handlers.py:216 - server_info - server password: 8bcd3173f598442af000b018bf34b2e64f7eb4ae
2016-06-03 01:32:33,590 - app.py:120 - server_info - response result = <Response OK not started>
2016-06-03 01:32:33,602 - app.py:76 - server_info - Request: GET /
2016-06-03 01:32:33,603 - app.py:86 - server_info - check user: GET /
2016-06-03 01:32:33,603 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:33,604 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:33,604 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:33,604 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:33,605 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:33,605 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:32:33,605 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:33,606 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-03 01:32:33,607 - orm.py:59 - server_info - rows returned: 2
2016-06-03 01:32:33,607 - app.py:120 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas', 'user_name': 'Matt', 'created_at': 1464888748.89419, 'name': 'asasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}]}
2016-06-03 01:32:33,686 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:33,688 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:33,689 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:33,691 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:33,692 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:33,692 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:36,762 - app.py:76 - server_info - Request: GET /signout
2016-06-03 01:32:36,764 - app.py:86 - server_info - check user: GET /signout
2016-06-03 01:32:36,764 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478086686801a78cf9479442dc8af2087792f4e56d000']
2016-06-03 01:32:36,765 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:36,765 - app.py:92 - server_info - set current user: 1@qq.com
2016-06-03 01:32:36,765 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:36,766 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-03 01:32:36,766 - app.py:120 - server_info - response result = Found
2016-06-03 01:32:36,769 - app.py:76 - server_info - Request: GET /
2016-06-03 01:32:36,770 - app.py:86 - server_info - check user: GET /
2016-06-03 01:32:36,770 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:36,770 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:36,770 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:32:36,771 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:36,771 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-03 01:32:36,772 - orm.py:59 - server_info - rows returned: 2
2016-06-03 01:32:36,772 - app.py:120 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas', 'user_name': 'Matt', 'created_at': 1464888748.89419, 'name': 'asasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}]}
2016-06-03 01:32:36,851 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:36,853 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:36,854 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:38,915 - app.py:76 - server_info - Request: GET /signin
2016-06-03 01:32:38,915 - app.py:86 - server_info - check user: GET /signin
2016-06-03 01:32:38,918 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:38,918 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:38,918 - app.py:120 - server_info - response result = {'__template__': 'signin.html'}
2016-06-03 01:32:38,991 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:38,993 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:38,993 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:44,190 - app.py:76 - server_info - Request: POST /api/authenticate
2016-06-03 01:32:44,191 - app.py:86 - server_info - check user: POST /api/authenticate
2016-06-03 01:32:44,191 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:44,192 - coroweb.py:215 - server_info - call with args: {'passwd': '687b72d3c1423998b8d42779376f40d5e495f92a', 'email': '723526676@qq.com'}
2016-06-03 01:32:44,192 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where email=?, ARGS: ['723526676@qq.com']
2016-06-03 01:32:44,193 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:44,194 - handlers.py:215 - server_info - user password: 9e2b45bdfa3bf76d5476acaacc0a3f0e2b505e78
2016-06-03 01:32:44,194 - handlers.py:216 - server_info - server password: 9e2b45bdfa3bf76d5476acaacc0a3f0e2b505e78
2016-06-03 01:32:44,194 - app.py:120 - server_info - response result = <Response OK not started>
2016-06-03 01:32:44,205 - app.py:76 - server_info - Request: GET /
2016-06-03 01:32:44,205 - app.py:86 - server_info - check user: GET /
2016-06-03 01:32:44,205 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-03 01:32:44,206 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:44,206 - app.py:92 - server_info - set current user: 723526676@qq.com
2016-06-03 01:32:44,207 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:44,207 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:44,207 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:32:44,208 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:44,208 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-03 01:32:44,209 - orm.py:59 - server_info - rows returned: 2
2016-06-03 01:32:44,209 - app.py:120 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas', 'user_name': 'Matt', 'created_at': 1464888748.89419, 'name': 'asasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}]}
2016-06-03 01:32:44,285 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:44,287 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:44,287 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-03 01:32:44,288 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:44,289 - app.py:92 - server_info - set current user: 723526676@qq.com
2016-06-03 01:32:44,289 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:47,146 - app.py:76 - server_info - Request: GET /signout
2016-06-03 01:32:47,148 - app.py:86 - server_info - check user: GET /signout
2016-06-03 01:32:47,148 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['00146478162695412465714b66b4adabb461e63eecb79ca000']
2016-06-03 01:32:47,149 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:47,150 - app.py:92 - server_info - set current user: 723526676@qq.com
2016-06-03 01:32:47,150 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:47,150 - coroweb.py:215 - server_info - call with args: {'request': <Request GET /signout >}
2016-06-03 01:32:47,150 - app.py:120 - server_info - response result = Found
2016-06-03 01:32:47,155 - app.py:76 - server_info - Request: GET /
2016-06-03 01:32:47,155 - app.py:86 - server_info - check user: GET /
2016-06-03 01:32:47,156 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:47,156 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:47,156 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:32:47,157 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:32:47,157 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-03 01:32:47,158 - orm.py:59 - server_info - rows returned: 2
2016-06-03 01:32:47,158 - app.py:120 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas', 'user_name': 'Matt', 'created_at': 1464888748.89419, 'name': 'asasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}]}
2016-06-03 01:32:47,245 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:47,247 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:47,247 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:48,167 - app.py:76 - server_info - Request: GET /register
2016-06-03 01:32:48,169 - app.py:86 - server_info - check user: GET /register
2016-06-03 01:32:48,169 - app.py:117 - server_info - Response handler...
2016-06-03 01:32:48,170 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:32:48,170 - app.py:120 - server_info - response result = {'__template__': 'register.html'}
2016-06-03 01:32:48,292 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:48,294 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:32:48,294 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:07,884 - app.py:76 - server_info - Request: POST /api/users
2016-06-03 01:33:07,884 - app.py:86 - server_info - check user: POST /api/users
2016-06-03 01:33:07,886 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:07,887 - coroweb.py:215 - server_info - call with args: {'passwd': 'de1c651002ed1df881bbcfc50671c489400ea7e4', 'name': 'f0rest', 'email': '2@qq.com'}
2016-06-03 01:33:07,887 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where email=?, ARGS: ['2@qq.com']
2016-06-03 01:33:07,888 - orm.py:59 - server_info - rows returned: 0
2016-06-03 01:33:07,888 - orm.py:197 - server_info - using default value for admin: False
2016-06-03 01:33:07,889 - orm.py:197 - server_info - using default value for created_at: 1464888787.88908
2016-06-03 01:33:07,889 - orm.py:23 - server_info - SQL: insert into `users` (`passwd`,`name`,`image`,`admin`,`created_at`,`email`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-03 01:33:07,890 - orm.py:75 - server_info - commit success!
2016-06-03 01:33:07,891 - app.py:120 - server_info - response result = <Response OK not started>
2016-06-03 01:33:07,901 - app.py:76 - server_info - Request: GET /
2016-06-03 01:33:07,902 - app.py:86 - server_info - check user: GET /
2016-06-03 01:33:07,902 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:33:07,903 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:07,903 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 01:33:07,903 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:07,904 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:33:07,904 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:33:07,904 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:07,905 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-03 01:33:07,907 - orm.py:59 - server_info - rows returned: 2
2016-06-03 01:33:07,907 - app.py:120 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas', 'user_name': 'Matt', 'created_at': 1464888748.89419, 'name': 'asasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}]}
2016-06-03 01:33:08,052 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:33:08,053 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:33:08,053 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:33:08,054 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:08,054 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 01:33:08,055 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:13,096 - app.py:76 - server_info - Request: GET /
2016-06-03 01:33:13,098 - app.py:86 - server_info - check user: GET /
2016-06-03 01:33:13,098 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:33:13,099 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:13,099 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 01:33:13,100 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:13,100 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:33:13,100 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:33:13,101 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:13,101 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-03 01:33:13,102 - orm.py:59 - server_info - rows returned: 2
2016-06-03 01:33:13,102 - app.py:120 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas', 'user_name': 'Matt', 'created_at': 1464888748.89419, 'name': 'asasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}]}
2016-06-03 01:33:13,188 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:33:13,190 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:33:13,190 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:33:13,191 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:13,191 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 01:33:13,191 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:17,381 - app.py:76 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-03 01:33:17,383 - app.py:86 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-03 01:33:17,383 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:33:17,384 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:17,385 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 01:33:17,385 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:17,385 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-03 01:33:17,385 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-03 01:33:17,386 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:17,386 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`user_image`,`created_at`,`user_id`,`blog_id`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-03 01:33:17,387 - orm.py:59 - server_info - rows returned: 0
2016-06-03 01:33:17,394 - app.py:120 - server_info - response result = {'__template__': 'blog.html', 'comments': [], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'html_content': '<blockquote>\n  <p>This is a BLOG project</p>\n  \n  <p>The ultimate aim is to study python3</p>\n</blockquote>\n\n<p>Praise the Sun！</p>\n\n<p><img src="http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg" alt="" /></p>\n\n<h3>Config</h3>\n\n<p><code>\n$ python3 --version\nPython 3.5.1\n</code></p>\n\n<h3>Thanks</h3>\n\n<p><a href="http://www.liaoxuefeng.com/">@廖雪峰</a></p>\n\n<h3>LICENSE</h3>\n\n<p>Copyright (C) 2016 kHRYSTAL</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<p>http://www.apache.org/licenses/LICENSE-2.0</p>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}}
2016-06-03 01:33:17,492 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:33:17,494 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:33:17,495 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:33:17,496 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:17,496 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 01:33:17,497 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:20,861 - app.py:76 - server_info - Request: POST /api/blogs/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000/comments
2016-06-03 01:33:20,863 - app.py:86 - server_info - check user: POST /api/blogs/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000/comments
2016-06-03 01:33:20,863 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:33:20,865 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:20,865 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 01:33:20,865 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:20,866 - coroweb.py:215 - server_info - call with args: {'content': 'assa', 'request': <Request POST /api/blogs/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000/comments >, 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-03 01:33:20,866 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-03 01:33:20,867 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:20,868 - orm.py:197 - server_info - using default value for created_at: 1464888800.868047
2016-06-03 01:33:20,868 - orm.py:197 - server_info - using default value for id: 00146488880086833e9e8a548e94d42bfe94ca665b07c26000
2016-06-03 01:33:20,868 - orm.py:23 - server_info - SQL: insert into `comments` (`user_name`,`user_image`,`created_at`,`user_id`,`blog_id`,`content`, `id`) values (?, ?, ?, ?, ?, ?, ?), ARGS: ()
2016-06-03 01:33:20,869 - orm.py:75 - server_info - commit success!
2016-06-03 01:33:20,870 - app.py:120 - server_info - response result = {'user_image': 'http://www.gravatar.com/avatar/4f987513d1e66d3d02d60b7d82667000?d=mm&s=120', 'id': '00146488880086833e9e8a548e94d42bfe94ca665b07c26000', 'blog_id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'created_at': 1464888800.868047, 'user_id': '0014648887878886b873f61e3a64288af1e91f370845d7c000', 'content': 'assa', 'user_name': 'f0rest'}
2016-06-03 01:33:20,880 - app.py:76 - server_info - Request: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-03 01:33:20,881 - app.py:86 - server_info - check user: GET /blog/001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000
2016-06-03 01:33:20,881 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:33:20,882 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:20,882 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 01:33:20,883 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:20,883 - coroweb.py:215 - server_info - call with args: {'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000'}
2016-06-03 01:33:20,883 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` where `id` = ?, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-03 01:33:20,884 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:20,884 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`user_image`,`created_at`,`user_id`,`blog_id`,`content` from `comments` where blog_id=? order by created_at desc, ARGS: ['001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000']
2016-06-03 01:33:20,885 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:20,892 - app.py:120 - server_info - response result = {'__template__': 'blog.html', 'comments': [{'user_image': 'http://www.gravatar.com/avatar/4f987513d1e66d3d02d60b7d82667000?d=mm&s=120', 'id': '00146488880086833e9e8a548e94d42bfe94ca665b07c26000', 'html_content': '<p>assa</p>', 'created_at': 1464888800.86805, 'user_id': '0014648887878886b873f61e3a64288af1e91f370845d7c000', 'blog_id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'content': 'assa', 'user_name': 'f0rest'}], 'blog': {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'html_content': '<blockquote>\n  <p>This is a BLOG project</p>\n  \n  <p>The ultimate aim is to study python3</p>\n</blockquote>\n\n<p>Praise the Sun！</p>\n\n<p><img src="http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg" alt="" /></p>\n\n<h3>Config</h3>\n\n<p><code>\n$ python3 --version\nPython 3.5.1\n</code></p>\n\n<h3>Thanks</h3>\n\n<p><a href="http://www.liaoxuefeng.com/">@廖雪峰</a></p>\n\n<h3>LICENSE</h3>\n\n<p>Copyright (C) 2016 kHRYSTAL</p>\n\n<p>Licensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at</p>\n\n<p>http://www.apache.org/licenses/LICENSE-2.0</p>\n\n<p>Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.</p>\n', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}}
2016-06-03 01:33:20,977 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:33:20,979 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:33:20,979 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:33:20,980 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:20,981 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 01:33:20,981 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:26,238 - app.py:76 - server_info - Request: GET /
2016-06-03 01:33:26,240 - app.py:86 - server_info - check user: GET /
2016-06-03 01:33:26,241 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:33:26,242 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:26,242 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 01:33:26,243 - app.py:117 - server_info - Response handler...
2016-06-03 01:33:26,243 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:33:26,243 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:33:26,244 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:26,244 - orm.py:23 - server_info - SQL: select `id`, `created_at`,`name`,`user_image`,`summary`,`user_id`,`user_name`,`content` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-03 01:33:26,245 - orm.py:59 - server_info - rows returned: 2
2016-06-03 01:33:26,245 - app.py:120 - server_info - response result = {'__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, 'blogs': [{'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas', 'user_name': 'Matt', 'created_at': 1464888748.89419, 'name': 'asasa'}, {'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'user_name': 'Matt', 'created_at': 1464805035.20157, 'name': 'Awesome complete!'}]}
2016-06-03 01:33:26,295 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:33:26,297 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 01:33:26,297 - orm.py:23 - server_info - SQL: select `id`, `passwd`,`name`,`image`,`admin`,`created_at`,`email` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:33:26,298 - orm.py:59 - server_info - rows returned: 1
2016-06-03 01:33:26,299 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 01:33:26,299 - app.py:117 - server_info - Response handler...
2016-06-03 01:58:49,558 - orm.py:140 - server_info - found model: User (table: users)
2016-06-03 01:58:49,558 - orm.py:140 - server_info - found model: User (table: users)
2016-06-03 01:58:49,558 - orm.py:147 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-03 01:58:49,558 - orm.py:147 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-03 01:58:49,559 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,559 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,559 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,559 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,559 - orm.py:147 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-03 01:58:49,559 - orm.py:147 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-03 01:58:49,559 - orm.py:147 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,559 - orm.py:147 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,559 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 01:58:49,559 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 01:58:49,560 - orm.py:147 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,560 - orm.py:147 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,560 - orm.py:140 - server_info - found model: Blog (table: blogs)
2016-06-03 01:58:49,560 - orm.py:140 - server_info - found model: Blog (table: blogs)
2016-06-03 01:58:49,560 - orm.py:147 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-03 01:58:49,560 - orm.py:147 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-03 01:58:49,560 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,560 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,561 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,562 - orm.py:140 - server_info - found model: Comment (table: comments)
2016-06-03 01:58:49,562 - orm.py:140 - server_info - found model: Comment (table: comments)
2016-06-03 01:58:49,562 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 01:58:49,562 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 01:58:49,562 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,562 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,562 - orm.py:147 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,562 - orm.py:147 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,562 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,562 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,563 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 01:58:49,563 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 01:58:49,563 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 01:58:49,563 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 01:58:49,563 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,563 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 01:58:49,564 - orm.py:28 - server_info - create database connection pool...
2016-06-03 01:58:49,564 - orm.py:28 - server_info - create database connection pool...
2016-06-03 01:58:49,570 - app.py:42 - server_info - init jinja2....
2016-06-03 01:58:49,570 - app.py:42 - server_info - init jinja2....
2016-06-03 01:58:49,570 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-03 01:58:49,570 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-03 01:58:49,575 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-03 01:58:49,575 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-03 01:59:10,202 - app.py:76 - server_info - Request: GET /
2016-06-03 01:59:10,202 - app.py:76 - server_info - Request: GET /
2016-06-03 01:59:10,203 - app.py:86 - server_info - check user: GET /
2016-06-03 01:59:10,203 - app.py:86 - server_info - check user: GET /
2016-06-03 01:59:10,203 - orm.py:23 - server_info - SQL: select `id`, `image`,`name`,`admin`,`email`,`created_at`,`passwd` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:59:10,203 - orm.py:23 - server_info - SQL: select `id`, `image`,`name`,`admin`,`email`,`created_at`,`passwd` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:59:10,204 - app.py:117 - server_info - Response handler...
2016-06-03 01:59:10,204 - app.py:117 - server_info - Response handler...
2016-06-03 01:59:10,204 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:59:10,204 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:59:10,204 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:59:10,204 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:59:10,960 - app.py:76 - server_info - Request: GET /
2016-06-03 01:59:10,960 - app.py:76 - server_info - Request: GET /
2016-06-03 01:59:10,961 - app.py:86 - server_info - check user: GET /
2016-06-03 01:59:10,961 - app.py:86 - server_info - check user: GET /
2016-06-03 01:59:10,961 - orm.py:23 - server_info - SQL: select `id`, `image`,`name`,`admin`,`email`,`created_at`,`passwd` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:59:10,961 - orm.py:23 - server_info - SQL: select `id`, `image`,`name`,`admin`,`email`,`created_at`,`passwd` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 01:59:10,961 - app.py:117 - server_info - Response handler...
2016-06-03 01:59:10,961 - app.py:117 - server_info - Response handler...
2016-06-03 01:59:10,962 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:59:10,962 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 01:59:10,962 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 01:59:10,962 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 02:00:23,748 - orm.py:140 - server_info - found model: User (table: users)
2016-06-03 02:00:23,748 - orm.py:147 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,750 - orm.py:147 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,751 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,751 - orm.py:147 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-03 02:00:23,751 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 02:00:23,751 - orm.py:147 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-03 02:00:23,752 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,752 - orm.py:140 - server_info - found model: Blog (table: blogs)
2016-06-03 02:00:23,752 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 02:00:23,753 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,753 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,753 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 02:00:23,753 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 02:00:23,754 - orm.py:147 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-03 02:00:23,754 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,754 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,754 - orm.py:140 - server_info - found model: Comment (table: comments)
2016-06-03 02:00:23,755 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 02:00:23,755 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,755 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,755 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 02:00:23,755 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 02:00:23,756 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,756 - orm.py:147 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-03 02:00:23,758 - orm.py:28 - server_info - create database connection pool...
2016-06-03 02:00:23,763 - app.py:42 - server_info - init jinja2....
2016-06-03 02:00:23,764 - app.py:57 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-03 02:00:23,769 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-03 02:00:25,657 - app.py:76 - server_info - Request: GET /
2016-06-03 02:00:25,659 - app.py:86 - server_info - check user: GET /
2016-06-03 02:00:25,659 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:25,660 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,661 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:25,661 - app.py:117 - server_info - Response handler...
2016-06-03 02:00:25,661 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 02:00:25,661 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 02:00:25,662 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,662 - orm.py:23 - server_info - SQL: select `id`, `content`,`user_name`,`user_image`,`created_at`,`summary`,`user_id`,`name` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-03 02:00:25,663 - orm.py:59 - server_info - rows returned: 2
2016-06-03 02:00:25,664 - app.py:120 - server_info - response result = {'blogs': [{'user_name': 'Matt', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': 'asasa', 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas', 'created_at': 1464888748.89419}, {'user_name': 'Matt', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'name': 'Awesome complete!', 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n', 'created_at': 1464805035.20157}], 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2, '__template__': 'blogs.html'}
2016-06-03 02:00:25,740 - app.py:76 - server_info - Request: GET /static/css/uikit.min.css
2016-06-03 02:00:25,742 - app.py:86 - server_info - check user: GET /static/css/uikit.min.css
2016-06-03 02:00:25,743 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:25,744 - app.py:76 - server_info - Request: GET /static/css/uikit.gradient.min.css
2016-06-03 02:00:25,744 - app.py:86 - server_info - check user: GET /static/css/uikit.gradient.min.css
2016-06-03 02:00:25,745 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:25,746 - app.py:76 - server_info - Request: GET /static/css/awesome.css
2016-06-03 02:00:25,746 - app.py:86 - server_info - check user: GET /static/css/awesome.css
2016-06-03 02:00:25,747 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:25,747 - app.py:76 - server_info - Request: GET /static/js/jquery.min.js
2016-06-03 02:00:25,748 - app.py:86 - server_info - check user: GET /static/js/jquery.min.js
2016-06-03 02:00:25,748 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:25,749 - app.py:76 - server_info - Request: GET /static/js/sha1.min.js
2016-06-03 02:00:25,749 - app.py:86 - server_info - check user: GET /static/js/sha1.min.js
2016-06-03 02:00:25,749 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:25,750 - app.py:76 - server_info - Request: GET /static/js/uikit.min.js
2016-06-03 02:00:25,750 - app.py:86 - server_info - check user: GET /static/js/uikit.min.js
2016-06-03 02:00:25,750 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:25,751 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,751 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:25,751 - app.py:117 - server_info - Response handler...
2016-06-03 02:00:25,755 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,756 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:25,756 - app.py:117 - server_info - Response handler...
2016-06-03 02:00:25,758 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,758 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:25,758 - app.py:117 - server_info - Response handler...
2016-06-03 02:00:25,760 - app.py:76 - server_info - Request: GET /static/js/sticky.min.js
2016-06-03 02:00:25,761 - app.py:86 - server_info - check user: GET /static/js/sticky.min.js
2016-06-03 02:00:25,762 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:25,763 - app.py:76 - server_info - Request: GET /static/js/vue.min.js
2016-06-03 02:00:25,764 - app.py:86 - server_info - check user: GET /static/js/vue.min.js
2016-06-03 02:00:25,765 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:25,765 - app.py:76 - server_info - Request: GET /static/js/awesome.js
2016-06-03 02:00:25,766 - app.py:86 - server_info - check user: GET /static/js/awesome.js
2016-06-03 02:00:25,766 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:25,768 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,768 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:25,769 - app.py:117 - server_info - Response handler...
2016-06-03 02:00:25,770 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,771 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:25,771 - app.py:117 - server_info - Response handler...
2016-06-03 02:00:25,773 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,773 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:25,773 - app.py:117 - server_info - Response handler...
2016-06-03 02:00:25,775 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,776 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:25,776 - app.py:117 - server_info - Response handler...
2016-06-03 02:00:25,777 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,778 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:25,778 - app.py:117 - server_info - Response handler...
2016-06-03 02:00:25,780 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,780 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:25,781 - app.py:117 - server_info - Response handler...
2016-06-03 02:00:25,837 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 02:00:25,839 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 02:00:25,839 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:25,840 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:25,841 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:25,841 - app.py:117 - server_info - Response handler...
2016-06-03 02:00:26,038 - app.py:76 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff
2016-06-03 02:00:26,040 - app.py:86 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff
2016-06-03 02:00:26,041 - orm.py:23 - server_info - SQL: select `id`, `email`,`passwd`,`image`,`created_at`,`admin`,`name` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:00:26,042 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:00:26,042 - app.py:92 - server_info - set current user: 2@qq.com
2016-06-03 02:00:26,042 - app.py:117 - server_info - Response handler...
2016-06-03 02:10:26,968 - orm.py:140 - server_info - found model: User (table: users)
2016-06-03 02:10:26,968 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 02:10:26,969 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,969 - orm.py:147 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-03 02:10:26,969 - orm.py:147 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,969 - orm.py:147 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,969 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,970 - orm.py:147 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-03 02:10:26,970 - orm.py:140 - server_info - found model: Blog (table: blogs)
2016-06-03 02:10:26,970 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 02:10:26,970 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,970 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,970 - orm.py:147 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-03 02:10:26,971 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,971 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 02:10:26,971 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,971 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 02:10:26,971 - orm.py:140 - server_info - found model: Comment (table: comments)
2016-06-03 02:10:26,972 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 02:10:26,972 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,972 - orm.py:147 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,972 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,972 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 02:10:26,972 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 02:10:26,972 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 02:10:26,974 - orm.py:28 - server_info - create database connection pool...
2016-06-03 02:10:26,979 - app.py:44 - server_info - init jinja2....
2016-06-03 02:10:26,979 - app.py:59 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-03 02:10:26,983 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-03 02:10:37,552 - orm.py:140 - server_info - found model: User (table: users)
2016-06-03 02:10:37,553 - orm.py:147 - server_info - found mapping: admin ==> <BooleanField, boolean:None>
2016-06-03 02:10:37,555 - orm.py:147 - server_info - found mapping: email ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,555 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 02:10:37,555 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,555 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,556 - orm.py:147 - server_info - found mapping: image ==> <StringField, varchar(500):None>
2016-06-03 02:10:37,556 - orm.py:147 - server_info - found mapping: passwd ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,556 - orm.py:140 - server_info - found model: Blog (table: blogs)
2016-06-03 02:10:37,556 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,557 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,557 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 02:10:37,557 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,557 - orm.py:147 - server_info - found mapping: name ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,557 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 02:10:37,558 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 02:10:37,558 - orm.py:147 - server_info - found mapping: summary ==> <StringField, varchar(200):None>
2016-06-03 02:10:37,558 - orm.py:140 - server_info - found model: Comment (table: comments)
2016-06-03 02:10:37,558 - orm.py:147 - server_info - found mapping: user_name ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,559 - orm.py:147 - server_info - found mapping: blog_id ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,559 - orm.py:147 - server_info - found mapping: user_id ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,559 - orm.py:147 - server_info - found mapping: user_image ==> <StringField, varchar(500):None>
2016-06-03 02:10:37,559 - orm.py:147 - server_info - found mapping: id ==> <StringField, varchar(50):None>
2016-06-03 02:10:37,559 - orm.py:147 - server_info - found mapping: created_at ==> <FloatField, real:None>
2016-06-03 02:10:37,559 - orm.py:147 - server_info - found mapping: content ==> <TextField, text:None>
2016-06-03 02:10:37,561 - orm.py:28 - server_info - create database connection pool...
2016-06-03 02:10:37,566 - app.py:44 - server_info - init jinja2....
2016-06-03 02:10:37,566 - app.py:59 - server_info - set jinja2 template path: /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/templates
2016-06-03 02:10:37,571 - coroweb.py:228 - server_info - add static /static/ => /Users/kHRYSTAL/PycharmProjects/awesome_python3_webapp/www/static
2016-06-03 02:10:44,591 - app.py:78 - server_info - Request: GET /
2016-06-03 02:10:44,593 - app.py:88 - server_info - check user: GET /
2016-06-03 02:10:44,593 - orm.py:23 - server_info - SQL: select `id`, `admin`,`email`,`created_at`,`name`,`image`,`passwd` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:10:44,595 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:10:44,595 - app.py:94 - server_info - set current user: 2@qq.com
2016-06-03 02:10:44,595 - app.py:119 - server_info - Response handler...
2016-06-03 02:10:44,595 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 02:10:44,595 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 02:10:44,596 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:10:44,596 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`user_id`,`user_image`,`name`,`created_at`,`content`,`summary` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-03 02:10:44,597 - orm.py:59 - server_info - rows returned: 2
2016-06-03 02:10:44,597 - app.py:122 - server_info - response result = {'blogs': [{'user_name': 'Matt', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'name': 'asasa', 'created_at': 1464888748.89419, 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas'}, {'user_name': 'Matt', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'name': 'Awesome complete!', 'created_at': 1464805035.20157, 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'}], '__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-03 02:10:44,844 - app.py:78 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 02:10:44,847 - app.py:88 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 02:10:44,847 - orm.py:23 - server_info - SQL: select `id`, `admin`,`email`,`created_at`,`name`,`image`,`passwd` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:10:44,848 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:10:44,848 - app.py:94 - server_info - set current user: 2@qq.com
2016-06-03 02:10:44,848 - app.py:119 - server_info - Response handler...
2016-06-03 02:10:44,957 - app.py:78 - server_info - Request: GET /
2016-06-03 02:10:44,957 - app.py:88 - server_info - check user: GET /
2016-06-03 02:10:44,957 - orm.py:23 - server_info - SQL: select `id`, `admin`,`email`,`created_at`,`name`,`image`,`passwd` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:10:44,958 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:10:44,958 - app.py:94 - server_info - set current user: 2@qq.com
2016-06-03 02:10:44,959 - app.py:119 - server_info - Response handler...
2016-06-03 02:10:44,959 - coroweb.py:215 - server_info - call with args: {}
2016-06-03 02:10:44,959 - orm.py:23 - server_info - SQL: select count(id) as `_num_` from `blogs`, ARGS: None
2016-06-03 02:10:44,960 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:10:44,961 - orm.py:23 - server_info - SQL: select `id`, `user_name`,`user_id`,`user_image`,`name`,`created_at`,`content`,`summary` from `blogs` order by created_at desc limit ?, ?, ARGS: [0, 2]
2016-06-03 02:10:44,962 - orm.py:59 - server_info - rows returned: 2
2016-06-03 02:10:44,962 - app.py:122 - server_info - response result = {'blogs': [{'user_name': 'Matt', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464888748894d68f87090d1f46139075ce86d43431d2000', 'name': 'asasa', 'created_at': 1464888748.89419, 'summary': 'asasas', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': 'asasas'}, {'user_name': 'Matt', 'user_image': 'http://www.gravatar.com/avatar/d615d5793929e8c7d70eab5f00f7f5f1?d=mm&s=120', 'id': '001464805035201b2986d2c8fc548bb87e97dc1e83b3e2e000', 'name': 'Awesome complete!', 'created_at': 1464805035.20157, 'summary': 'Praise the Sun！', 'user_id': '00146478086686801a78cf9479442dc8af2087792f4e56d000', 'content': '> This is a BLOG project\n\n> The ultimate aim is to study python3\n\nPraise the Sun！\n\n![](http://7xujzs.com1.z0.glb.clouddn.com/l.jpeg)\n\n\n### Config\n\n```\n$ python3 --version\nPython 3.5.1\n```\n\n\n### Thanks\n\n[@廖雪峰](http://www.liaoxuefeng.com/)\n\n### LICENSE\n\n\nCopyright (C) 2016 kHRYSTAL\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'}], '__template__': 'blogs.html', 'page': item_count: 2, page_count: 1, page_index: 1, page_size: 20, offset: 0, limit: 2}
2016-06-03 02:10:45,058 - app.py:78 - server_info - Request: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 02:10:45,058 - app.py:88 - server_info - check user: GET /static/fonts/fontawesome-webfont.woff2
2016-06-03 02:10:45,058 - orm.py:23 - server_info - SQL: select `id`, `admin`,`email`,`created_at`,`name`,`image`,`passwd` from `users` where `id` = ?, ARGS: ['0014648887878886b873f61e3a64288af1e91f370845d7c000']
2016-06-03 02:10:45,059 - orm.py:59 - server_info - rows returned: 1
2016-06-03 02:10:45,060 - app.py:94 - server_info - set current user: 2@qq.com
2016-06-03 02:10:45,060 - app.py:119 - server_info - Response handler...
